-- Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2017.4 (lin64) Build 2086221 Fri Dec 15 20:54:30 MST 2017
-- Date        : Thu Apr 26 22:02:20 2018
-- Host        : dakre-VirtualBox running 64-bit Ubuntu 16.04.3 LTS
-- Command     : write_vhdl -force -mode funcsim
--               /home/dakre/dpr_rt/hw/Sources/lab/axi_dma_ctrl/axi_dma_ctrl_sim_netlist.vhdl
-- Design      : axi_dma_ctrl
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7z020clg400-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_fifo is
  port (
    sig_init_reg2_reg_0 : out STD_LOGIC;
    sig_cmd2mstr_cmd_valid : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]_0\ : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_init_done_reg_1 : out STD_LOGIC;
    sig_init_done_reg_2 : out STD_LOGIC;
    sig_init_done_reg_3 : out STD_LOGIC;
    sig_init_done_reg_4 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 40 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sm_scc_sm_ready_reg : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    sm_scc_sm_ready : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    sig_init_done_3 : in STD_LOGIC;
    sig_init_done_1 : in STD_LOGIC;
    sig_init_done_2 : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[31]\ : in STD_LOGIC_VECTOR ( 40 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_fifo : entity is "axi_datamover_fifo";
end axi_dma_ctrl_axi_datamover_fifo;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_fifo is
  signal \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\ : STD_LOGIC;
  signal \^use_single_reg.sig_regfifo_dout_reg_reg[0]_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__1_n_0\ : STD_LOGIC;
  signal \^sig_cmd2mstr_cmd_valid\ : STD_LOGIC;
  signal sig_init_done_4 : STD_LOGIC;
  signal \sig_init_done_i_1__3_n_0\ : STD_LOGIC;
  signal \^sig_init_reg2_reg_0\ : STD_LOGIC;
  signal sig_push_regfifo : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_init_done_i_1__3\ : label is "soft_lutpair161";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__4\ : label is "soft_lutpair161";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__5\ : label is "soft_lutpair162";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__6\ : label is "soft_lutpair162";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__7\ : label is "soft_lutpair163";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__8\ : label is "soft_lutpair163";
begin
  \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]_0\ <= \^use_single_reg.sig_regfifo_dout_reg_reg[0]_0\;
  sig_cmd2mstr_cmd_valid <= \^sig_cmd2mstr_cmd_valid\;
  sig_init_reg2_reg_0 <= \^sig_init_reg2_reg_0\;
\USE_SINGLE_REG.sig_regfifo_dout_reg[63]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^use_single_reg.sig_regfifo_dout_reg_reg[0]_0\,
      I1 => s_axis_s2mm_cmd_tvalid_split,
      O => sig_push_regfifo
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(0),
      Q => Q(0),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(1),
      Q => Q(1),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(7),
      Q => Q(7),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(2),
      Q => Q(2),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(8),
      Q => Q(8),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(9),
      Q => Q(9),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(10),
      Q => Q(10),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(11),
      Q => Q(11),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(12),
      Q => Q(12),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(13),
      Q => Q(13),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(14),
      Q => Q(14),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(15),
      Q => Q(15),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(16),
      Q => Q(16),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(3),
      Q => Q(3),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(17),
      Q => Q(17),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(18),
      Q => Q(18),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(19),
      Q => Q(19),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(20),
      Q => Q(20),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(21),
      Q => Q(21),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(22),
      Q => Q(22),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(23),
      Q => Q(23),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(24),
      Q => Q(24),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(25),
      Q => Q(25),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(26),
      Q => Q(26),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(4),
      Q => Q(4),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(27),
      Q => Q(27),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(28),
      Q => Q(28),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(29),
      Q => Q(29),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(30),
      Q => Q(30),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(31),
      Q => Q(31),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(32),
      Q => Q(32),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(33),
      Q => Q(33),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(34),
      Q => Q(34),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(35),
      Q => Q(35),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(36),
      Q => Q(36),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(5),
      Q => Q(5),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(37),
      Q => Q(37),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(38),
      Q => Q(38),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(39),
      Q => Q(39),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(40),
      Q => Q(40),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => \GEN_S2MM.queue_dout2_new_reg[31]\(6),
      Q => Q(6),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFF4444444"
    )
        port map (
      I0 => s_axis_s2mm_cmd_tvalid_split,
      I1 => \^use_single_reg.sig_regfifo_dout_reg_reg[0]_0\,
      I2 => sig_cmd_reg_empty,
      I3 => sm_scc_sm_ready,
      I4 => \^sig_cmd2mstr_cmd_valid\,
      I5 => sig_init_done_4,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__1_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__1_n_0\,
      Q => \^use_single_reg.sig_regfifo_dout_reg_reg[0]_0\,
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sm_scc_sm_ready_reg,
      Q => \^sig_cmd2mstr_cmd_valid\,
      R => '0'
    );
\sig_init_done_i_1__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      I1 => \^sig_init_reg2_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_4,
      O => \sig_init_done_i_1__3_n_0\
    );
\sig_init_done_i_1__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      I1 => \^sig_init_reg2_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done,
      O => sig_init_done_reg_0
    );
\sig_init_done_i_1__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      I1 => \^sig_init_reg2_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_0,
      O => sig_init_done_reg_1
    );
\sig_init_done_i_1__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      I1 => \^sig_init_reg2_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_3,
      O => sig_init_done_reg_2
    );
\sig_init_done_i_1__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      I1 => \^sig_init_reg2_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_1,
      O => sig_init_done_reg_3
    );
\sig_init_done_i_1__8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      I1 => \^sig_init_reg2_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_2,
      O => sig_init_done_reg_4
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_init_done_i_1__3_n_0\,
      Q => sig_init_done_4,
      R => '0'
    );
sig_init_reg2_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \^sig_init_reg2_reg_0\,
      Q => \I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      S => SR(0)
    );
sig_init_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => SR(0),
      Q => \^sig_init_reg2_reg_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_fifo_17 is
  port (
    sig_init_reg2_reg_0 : out STD_LOGIC;
    sig_cmd2mstr_cmd_valid : out STD_LOGIC;
    s_axis_mm2s_cmd_tready : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_init_done_reg_1 : out STD_LOGIC;
    sig_init_done_reg_2 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 40 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    sm_scc_sm_ready : in STD_LOGIC;
    sig_init_done_1 : in STD_LOGIC;
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_MM2S.queue_dout_new_reg[31]\ : in STD_LOGIC_VECTOR ( 40 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_fifo_17 : entity is "axi_datamover_fifo";
end axi_dma_ctrl_axi_datamover_fifo_17;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_fifo_17 is
  signal \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1_n_0\ : STD_LOGIC;
  signal \^s_axis_mm2s_cmd_tready\ : STD_LOGIC;
  signal \^sig_cmd2mstr_cmd_valid\ : STD_LOGIC;
  signal sig_init_done_2 : STD_LOGIC;
  signal \sig_init_done_i_1__2_n_0\ : STD_LOGIC;
  signal \^sig_init_reg2_reg_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of sig_init_done_i_1 : label is "soft_lutpair141";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__0\ : label is "soft_lutpair141";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__1\ : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__2\ : label is "soft_lutpair142";
begin
  s_axis_mm2s_cmd_tready <= \^s_axis_mm2s_cmd_tready\;
  sig_cmd2mstr_cmd_valid <= \^sig_cmd2mstr_cmd_valid\;
  sig_init_reg2_reg_0 <= \^sig_init_reg2_reg_0\;
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(0),
      Q => Q(0),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(1),
      Q => Q(1),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(7),
      Q => Q(7),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(2),
      Q => Q(2),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(8),
      Q => Q(8),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(9),
      Q => Q(9),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(10),
      Q => Q(10),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(11),
      Q => Q(11),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(12),
      Q => Q(12),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(13),
      Q => Q(13),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(14),
      Q => Q(14),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(15),
      Q => Q(15),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(16),
      Q => Q(16),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(3),
      Q => Q(3),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(17),
      Q => Q(17),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(18),
      Q => Q(18),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(19),
      Q => Q(19),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(20),
      Q => Q(20),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(21),
      Q => Q(21),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(22),
      Q => Q(22),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(23),
      Q => Q(23),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(24),
      Q => Q(24),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(25),
      Q => Q(25),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(26),
      Q => Q(26),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(4),
      Q => Q(4),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(27),
      Q => Q(27),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(28),
      Q => Q(28),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(29),
      Q => Q(29),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(30),
      Q => Q(30),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(31),
      Q => Q(31),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(32),
      Q => Q(32),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(33),
      Q => Q(33),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(34),
      Q => Q(34),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(35),
      Q => Q(35),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(36),
      Q => Q(36),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(5),
      Q => Q(5),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(37),
      Q => Q(37),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(38),
      Q => Q(38),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(39),
      Q => Q(39),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(40),
      Q => Q(40),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      D => \GEN_MM2S.queue_dout_new_reg[31]\(6),
      Q => Q(6),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBABABABABABABA"
    )
        port map (
      I0 => sig_init_done_2,
      I1 => s_axis_mm2s_cmd_tvalid_split,
      I2 => \^s_axis_mm2s_cmd_tready\,
      I3 => \^sig_cmd2mstr_cmd_valid\,
      I4 => sig_cmd_reg_empty,
      I5 => sm_scc_sm_ready,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1_n_0\,
      Q => \^s_axis_mm2s_cmd_tready\,
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080AA80AA80AA80"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => \^s_axis_mm2s_cmd_tready\,
      I2 => s_axis_mm2s_cmd_tvalid_split,
      I3 => \^sig_cmd2mstr_cmd_valid\,
      I4 => sig_cmd_reg_empty,
      I5 => sm_scc_sm_ready,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1_n_0\,
      Q => \^sig_cmd2mstr_cmd_valid\,
      R => '0'
    );
sig_init_done_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_init_done_1,
      I2 => \^sig_init_reg2_reg_0\,
      I3 => \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      O => sig_init_done_reg_0
    );
\sig_init_done_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_init_done,
      I2 => \^sig_init_reg2_reg_0\,
      I3 => \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      O => sig_init_done_reg_1
    );
\sig_init_done_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_init_done_0,
      I2 => \^sig_init_reg2_reg_0\,
      I3 => \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      O => sig_init_done_reg_2
    );
\sig_init_done_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_init_done_2,
      I2 => \^sig_init_reg2_reg_0\,
      I3 => \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      O => \sig_init_done_i_1__2_n_0\
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_init_done_i_1__2_n_0\,
      Q => sig_init_done_2,
      R => '0'
    );
sig_init_reg2_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \^sig_init_reg2_reg_0\,
      Q => \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2\,
      S => SR(0)
    );
sig_init_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => SR(0),
      Q => \^sig_init_reg2_reg_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized0\ is
  port (
    sig_init_done : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1]_0\ : out STD_LOGIC;
    s2mm_decerr_i : out STD_LOGIC;
    s2mm_interr_i : out STD_LOGIC;
    s2mm_slverr_i : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ : out STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_s2mm_sts_tready : in STD_LOGIC;
    sig_wsc2stat_status_valid : in STD_LOGIC;
    p_8_out : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized0\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized0\ is
  signal \^determinate_btt_mode.s2mm_packet_eof_i_reg\ : STD_LOGIC;
  signal \^use_single_reg.sig_regfifo_dout_reg_reg[1]_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__2_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__2_n_0\ : STD_LOGIC;
  signal m_axis_s2mm_sts_tdata_int : STD_LOGIC_VECTOR ( 6 downto 1 );
  signal \^sig_init_done\ : STD_LOGIC;
  signal sig_push_regfifo : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \DETERMINATE_BTT_MODE.s2mm_decerr_i_i_1\ : label is "soft_lutpair160";
  attribute SOFT_HLUTNM of \DETERMINATE_BTT_MODE.s2mm_interr_i_i_1\ : label is "soft_lutpair159";
  attribute SOFT_HLUTNM of \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_i_1\ : label is "soft_lutpair159";
  attribute SOFT_HLUTNM of \DETERMINATE_BTT_MODE.s2mm_slverr_i_i_1\ : label is "soft_lutpair160";
begin
  \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ <= \^determinate_btt_mode.s2mm_packet_eof_i_reg\;
  \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1]_0\ <= \^use_single_reg.sig_regfifo_dout_reg_reg[1]_0\;
  sig_init_done <= \^sig_init_done\;
\DETERMINATE_BTT_MODE.s2mm_decerr_i_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_8_out,
      I1 => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      I2 => m_axis_s2mm_sts_tdata_int(5),
      O => s2mm_decerr_i
    );
\DETERMINATE_BTT_MODE.s2mm_interr_i_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_8_out,
      I1 => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      I2 => m_axis_s2mm_sts_tdata_int(4),
      O => s2mm_interr_i
    );
\DETERMINATE_BTT_MODE.s2mm_packet_eof_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08080800"
    )
        port map (
      I0 => s2mm_scndry_resetn,
      I1 => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      I2 => p_8_out,
      I3 => m_axis_s2mm_sts_tdata_int(4),
      I4 => m_axis_s2mm_sts_tdata_int(1),
      O => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\
    );
\DETERMINATE_BTT_MODE.s2mm_slverr_i_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_8_out,
      I1 => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      I2 => m_axis_s2mm_sts_tdata_int(6),
      O => s2mm_slverr_i
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^use_single_reg.sig_regfifo_dout_reg_reg[1]_0\,
      I1 => sig_wsc2stat_status_valid,
      O => sig_push_regfifo
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => D(0),
      Q => m_axis_s2mm_sts_tdata_int(1),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => D(1),
      Q => m_axis_s2mm_sts_tdata_int(4),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => D(2),
      Q => m_axis_s2mm_sts_tdata_int(5),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_regfifo,
      D => D(3),
      Q => m_axis_s2mm_sts_tdata_int(6),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F8FFF8F8"
    )
        port map (
      I0 => m_axis_s2mm_sts_tready,
      I1 => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      I2 => \^sig_init_done\,
      I3 => sig_wsc2stat_status_valid,
      I4 => \^use_single_reg.sig_regfifo_dout_reg_reg[1]_0\,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__2_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__2_n_0\,
      Q => \^use_single_reg.sig_regfifo_dout_reg_reg[1]_0\,
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0080F080"
    )
        port map (
      I0 => sig_wsc2stat_status_valid,
      I1 => \^use_single_reg.sig_regfifo_dout_reg_reg[1]_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      I4 => m_axis_s2mm_sts_tready,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__2_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__2_n_0\,
      Q => \^determinate_btt_mode.s2mm_packet_eof_i_reg\,
      R => '0'
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_init_reg2_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized0_16\ is
  port (
    sig_init_done : out STD_LOGIC;
    \mm2s_tag_reg[0]\ : out STD_LOGIC;
    \sig_rd_sts_tag_reg_reg[0]\ : out STD_LOGIC;
    sig_rd_sts_tag_reg0 : out STD_LOGIC;
    mm2s_decerr_i : out STD_LOGIC;
    mm2s_interr_i : out STD_LOGIC;
    mm2s_slverr_i : out STD_LOGIC;
    \mm2s_tag_reg[0]_0\ : out STD_LOGIC;
    \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    p_2_out : in STD_LOGIC;
    p_7_out : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized0_16\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized0_16\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized0_16\ is
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0_n_0\ : STD_LOGIC;
  signal m_axis_mm2s_sts_tdata_int : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal \^mm2s_tag_reg[0]\ : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
  signal \^sig_rd_sts_tag_reg_reg[0]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of mm2s_decerr_i_i_1 : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of mm2s_interr_i_i_1 : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of mm2s_slverr_i_i_1 : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \mm2s_tag[0]_i_1\ : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \sig_rd_sts_tag_reg[0]_i_1\ : label is "soft_lutpair138";
begin
  \mm2s_tag_reg[0]\ <= \^mm2s_tag_reg[0]\;
  sig_init_done <= \^sig_init_done\;
  \sig_rd_sts_tag_reg_reg[0]\ <= \^sig_rd_sts_tag_reg_reg[0]\;
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => E(0),
      D => D(0),
      Q => m_axis_mm2s_sts_tdata_int(0),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => E(0),
      D => D(1),
      Q => m_axis_mm2s_sts_tdata_int(4),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => E(0),
      D => D(2),
      Q => m_axis_mm2s_sts_tdata_int(5),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => E(0),
      D => D(3),
      Q => m_axis_mm2s_sts_tdata_int(6),
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F8F8FFF8"
    )
        port map (
      I0 => \^mm2s_tag_reg[0]\,
      I1 => p_2_out,
      I2 => \^sig_init_done\,
      I3 => \^sig_rd_sts_tag_reg_reg[0]\,
      I4 => sig_rsc2stat_status_valid,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0_n_0\,
      Q => \^sig_rd_sts_tag_reg_reg[0]\,
      R => SR(0)
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00AA8080"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => \^sig_rd_sts_tag_reg_reg[0]\,
      I2 => sig_rsc2stat_status_valid,
      I3 => p_2_out,
      I4 => \^mm2s_tag_reg[0]\,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0_n_0\,
      Q => \^mm2s_tag_reg[0]\,
      R => '0'
    );
mm2s_decerr_i_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_7_out,
      I1 => \^mm2s_tag_reg[0]\,
      I2 => m_axis_mm2s_sts_tdata_int(5),
      O => mm2s_decerr_i
    );
mm2s_interr_i_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_7_out,
      I1 => \^mm2s_tag_reg[0]\,
      I2 => m_axis_mm2s_sts_tdata_int(4),
      O => mm2s_interr_i
    );
mm2s_slverr_i_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_7_out,
      I1 => \^mm2s_tag_reg[0]\,
      I2 => m_axis_mm2s_sts_tdata_int(6),
      O => mm2s_slverr_i
    );
\mm2s_tag[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => p_7_out,
      I1 => \^mm2s_tag_reg[0]\,
      I2 => m_axis_mm2s_sts_tdata_int(0),
      O => \mm2s_tag_reg[0]_0\
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\,
      Q => \^sig_init_done\,
      R => '0'
    );
\sig_rd_sts_tag_reg[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8F"
    )
        port map (
      I0 => \^sig_rd_sts_tag_reg_reg[0]\,
      I1 => sig_rsc2stat_status_valid,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_rd_sts_tag_reg0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_rd_status_cntl is
  port (
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_rsc2stat_status_valid : out STD_LOGIC;
    sig_rsc2data_ready : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_rd_sts_tag_reg0 : in STD_LOGIC;
    sig_coelsc_tag_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_rd_sts_decerr_reg0 : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_data2rsc_calc_err : in STD_LOGIC;
    sig_data2rsc_slverr : in STD_LOGIC;
    sig_data2rsc_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_rd_status_cntl : entity is "axi_datamover_rd_status_cntl";
end axi_dma_ctrl_axi_datamover_rd_status_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_rd_status_cntl is
  signal \^d\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_push_rd_sts_reg : STD_LOGIC;
  signal sig_rd_sts_interr_reg0 : STD_LOGIC;
  signal sig_rd_sts_slverr_reg0 : STD_LOGIC;
  signal \^sig_rsc2data_ready\ : STD_LOGIC;
  signal \^sig_rsc2stat_status_valid\ : STD_LOGIC;
begin
  D(3 downto 0) <= \^d\(3 downto 0);
  sig_rsc2data_ready <= \^sig_rsc2data_ready\;
  sig_rsc2stat_status_valid <= \^sig_rsc2stat_status_valid\;
\USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^sig_rsc2stat_status_valid\,
      I1 => sig_stat2rsc_status_ready,
      O => E(0)
    );
sig_rd_sts_decerr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_rd_sts_decerr_reg0,
      Q => \^d\(2),
      R => sig_rd_sts_tag_reg0
    );
sig_rd_sts_interr_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^d\(1),
      I1 => sig_data2rsc_calc_err,
      O => sig_rd_sts_interr_reg0
    );
sig_rd_sts_interr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_rd_sts_interr_reg0,
      Q => \^d\(1),
      R => sig_rd_sts_tag_reg0
    );
sig_rd_sts_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_rd_sts_reg,
      D => '0',
      Q => \^sig_rsc2data_ready\,
      S => sig_rd_sts_tag_reg0
    );
sig_rd_sts_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_rd_sts_reg,
      D => '1',
      Q => \^sig_rsc2stat_status_valid\,
      R => sig_rd_sts_tag_reg0
    );
sig_rd_sts_slverr_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^d\(3),
      I1 => sig_data2rsc_slverr,
      O => sig_rd_sts_slverr_reg0
    );
sig_rd_sts_slverr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_rd_sts_slverr_reg0,
      Q => \^d\(3),
      R => sig_rd_sts_tag_reg0
    );
\sig_rd_sts_tag_reg[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^sig_rsc2data_ready\,
      I1 => sig_data2rsc_valid,
      O => sig_push_rd_sts_reg
    );
\sig_rd_sts_tag_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_coelsc_tag_reg(0),
      Q => \^d\(0),
      R => sig_rd_sts_tag_reg0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_reset is
  port (
    sig_halt_cmplt_reg_0 : out STD_LOGIC;
    sig_s_h_halt_reg : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_halt_cmplt : out STD_LOGIC;
    dm_s2mm_prmry_resetn : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    \GEN_ASYNC_RESET.halt_i_reg\ : in STD_LOGIC;
    sig_calc_error_reg_reg : in STD_LOGIC;
    sig_halt_reg_dly3 : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    sig_next_calc_error_reg_reg : in STD_LOGIC;
    sig_calc_error_reg_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_reset : entity is "axi_datamover_reset";
end axi_dma_ctrl_axi_datamover_reset;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_reset is
  signal \^sr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^s2mm_halt_cmplt\ : STD_LOGIC;
  signal sig_halt_cmplt_i_1_n_0 : STD_LOGIC;
  signal \^sig_halt_cmplt_reg_0\ : STD_LOGIC;
begin
  SR(0) <= \^sr\(0);
  s2mm_halt_cmplt <= \^s2mm_halt_cmplt\;
  sig_halt_cmplt_reg_0 <= \^sig_halt_cmplt_reg_0\;
sig_cmd_stat_rst_user_reg_n_cdc_from_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => dm_s2mm_prmry_resetn,
      Q => \^sig_halt_cmplt_reg_0\,
      R => '0'
    );
sig_halt_cmplt_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF00400000"
    )
        port map (
      I0 => sig_calc_error_reg_reg,
      I1 => sig_halt_reg_dly3,
      I2 => sig_halt_reg_reg,
      I3 => sig_next_calc_error_reg_reg,
      I4 => sig_calc_error_reg_reg_0,
      I5 => \^s2mm_halt_cmplt\,
      O => sig_halt_cmplt_i_1_n_0
    );
sig_halt_cmplt_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_halt_cmplt_i_1_n_0,
      Q => \^s2mm_halt_cmplt\,
      R => \^sr\(0)
    );
sig_s_h_halt_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.halt_i_reg\,
      Q => sig_s_h_halt_reg,
      R => \^sr\(0)
    );
\sig_strb_reg_out[3]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^sig_halt_cmplt_reg_0\,
      O => \^sr\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_reset_14 is
  port (
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : out STD_LOGIC;
    sig_rst2all_stop_request : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_halt_cmplt : out STD_LOGIC;
    dm_mm2s_prmry_resetn : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    \GEN_ASYNC_RESET.halt_i_reg\ : in STD_LOGIC;
    \sig_addr_posted_cntr_reg[2]\ : in STD_LOGIC;
    sig_data2addr_stop_req : in STD_LOGIC;
    sig_halt_reg_dly3 : in STD_LOGIC;
    sig_addr_reg_empty : in STD_LOGIC;
    sig_addr2rsc_calc_error : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_reset_14 : entity is "axi_datamover_reset";
end axi_dma_ctrl_axi_datamover_reset_14;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_reset_14 is
  signal \^sr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^mm2s_halt_cmplt\ : STD_LOGIC;
  signal \^sig_cmd_stat_rst_user_reg_n_cdc_from_reg\ : STD_LOGIC;
  signal sig_halt_cmplt_i_1_n_0 : STD_LOGIC;
begin
  SR(0) <= \^sr\(0);
  mm2s_halt_cmplt <= \^mm2s_halt_cmplt\;
  sig_cmd_stat_rst_user_reg_n_cdc_from_reg <= \^sig_cmd_stat_rst_user_reg_n_cdc_from_reg\;
\FSM_sequential_sm_scc_state[2]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^sig_cmd_stat_rst_user_reg_n_cdc_from_reg\,
      O => \^sr\(0)
    );
\sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => dm_mm2s_prmry_resetn,
      Q => \^sig_cmd_stat_rst_user_reg_n_cdc_from_reg\,
      R => '0'
    );
sig_halt_cmplt_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF80808000"
    )
        port map (
      I0 => \sig_addr_posted_cntr_reg[2]\,
      I1 => sig_data2addr_stop_req,
      I2 => sig_halt_reg_dly3,
      I3 => sig_addr_reg_empty,
      I4 => sig_addr2rsc_calc_error,
      I5 => \^mm2s_halt_cmplt\,
      O => sig_halt_cmplt_i_1_n_0
    );
sig_halt_cmplt_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_halt_cmplt_i_1_n_0,
      Q => \^mm2s_halt_cmplt\,
      R => \^sr\(0)
    );
sig_s_h_halt_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.halt_i_reg\,
      Q => sig_rst2all_stop_request,
      R => \^sr\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_scc is
  port (
    sm_scc_sm_ready : out STD_LOGIC;
    sig_cmd_reg_empty : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \sig_next_burst_reg_reg[0]\ : out STD_LOGIC_VECTOR ( 32 downto 0 );
    sig_mstr2data_cmd_valid : out STD_LOGIC;
    sig_mstr2addr_cmd_valid : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg\ : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 40 downto 0 );
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_wr_fifo : in STD_LOGIC;
    sig_wr_fifo_0 : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    sig_cmd2mstr_cmd_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_scc : entity is "axi_datamover_scc";
end axi_dma_ctrl_axi_datamover_scc;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_scc is
  signal \FSM_sequential_sm_scc_state[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_sm_scc_state[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_sm_scc_state[1]_i_1__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_sm_scc_state[2]_i_1__0_n_0\ : STD_LOGIC;
  signal \INFERRED_GEN.data_reg[3][19]_srl4_i_2__0_n_0\ : STD_LOGIC;
  signal \INFERRED_GEN.data_reg[3][20]_srl4_i_2__0_n_0\ : STD_LOGIC;
  signal \sig_btt_is_zero__0\ : STD_LOGIC;
  signal sig_btt_is_zero_reg : STD_LOGIC;
  signal sig_btt_is_zero_reg_i_4_n_0 : STD_LOGIC;
  signal sig_btt_len_residue : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal sig_btt_ms_bit_value : STD_LOGIC;
  signal \sig_cmd2addr_valid_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_cmd2data_valid_i_1__0_n_0\ : STD_LOGIC;
  signal sig_cmd_btt_reg0 : STD_LOGIC;
  signal \^sig_cmd_reg_empty\ : STD_LOGIC;
  signal sig_cmd_reg_full : STD_LOGIC;
  signal sig_len_btt_slice : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_load_input_cmd : STD_LOGIC;
  signal \^sig_mstr2addr_cmd_valid\ : STD_LOGIC;
  signal \^sig_mstr2data_cmd_valid\ : STD_LOGIC;
  signal sm_pop_input_cmd : STD_LOGIC;
  signal sm_pop_input_cmd_ns : STD_LOGIC;
  signal \^sm_scc_sm_ready\ : STD_LOGIC;
  signal sm_scc_sm_ready_ns : STD_LOGIC;
  signal sm_scc_state : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sm_scc_state : signal is "yes";
  signal sm_set_error_ns : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_sm_scc_state_reg[0]\ : label is "init:000,pop_recover:101,get_nxt_cmd:001,chk_and_calc:010,push_to_axi:100,error_trap:011";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_sm_scc_state_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_sm_scc_state_reg[1]\ : label is "init:000,pop_recover:101,get_nxt_cmd:001,chk_and_calc:010,push_to_axi:100,error_trap:011";
  attribute KEEP of \FSM_sequential_sm_scc_state_reg[1]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_sm_scc_state_reg[2]\ : label is "init:000,pop_recover:101,get_nxt_cmd:001,chk_and_calc:010,push_to_axi:100,error_trap:011";
  attribute KEEP of \FSM_sequential_sm_scc_state_reg[2]\ : label is "yes";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][22]_srl4_i_1__0\ : label is "soft_lutpair164";
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][5]_srl4_i_1\ : label is "soft_lutpair165";
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][6]_srl4_i_1\ : label is "soft_lutpair164";
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][7]_srl4_i_1\ : label is "soft_lutpair165";
begin
  sig_cmd_reg_empty <= \^sig_cmd_reg_empty\;
  sig_mstr2addr_cmd_valid <= \^sig_mstr2addr_cmd_valid\;
  sig_mstr2data_cmd_valid <= \^sig_mstr2data_cmd_valid\;
  sm_scc_sm_ready <= \^sm_scc_sm_ready\;
\FSM_sequential_sm_scc_state[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000555555551510"
    )
        port map (
      I0 => \FSM_sequential_sm_scc_state[0]_i_2__0_n_0\,
      I1 => sig_cmd_reg_full,
      I2 => sm_scc_state(0),
      I3 => sig_cmd2mstr_cmd_valid,
      I4 => sm_scc_state(2),
      I5 => sm_scc_state(1),
      O => \FSM_sequential_sm_scc_state[0]_i_1__0_n_0\
    );
\FSM_sequential_sm_scc_state[0]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFF22222"
    )
        port map (
      I0 => sm_scc_state(1),
      I1 => sig_btt_is_zero_reg,
      I2 => \^sig_mstr2addr_cmd_valid\,
      I3 => \^sig_mstr2data_cmd_valid\,
      I4 => sm_scc_state(2),
      I5 => sm_scc_state(0),
      O => \FSM_sequential_sm_scc_state[0]_i_2__0_n_0\
    );
\FSM_sequential_sm_scc_state[1]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"54445040"
    )
        port map (
      I0 => sm_scc_state(2),
      I1 => sm_scc_state(1),
      I2 => sm_scc_state(0),
      I3 => sig_cmd_reg_full,
      I4 => sig_btt_is_zero_reg,
      O => \FSM_sequential_sm_scc_state[1]_i_1__0_n_0\
    );
\FSM_sequential_sm_scc_state[2]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0026"
    )
        port map (
      I0 => sm_scc_state(2),
      I1 => sm_scc_state(1),
      I2 => sig_btt_is_zero_reg,
      I3 => sm_scc_state(0),
      O => \FSM_sequential_sm_scc_state[2]_i_1__0_n_0\
    );
\FSM_sequential_sm_scc_state_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \FSM_sequential_sm_scc_state[0]_i_1__0_n_0\,
      Q => sm_scc_state(0),
      R => SR(0)
    );
\FSM_sequential_sm_scc_state_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \FSM_sequential_sm_scc_state[1]_i_1__0_n_0\,
      Q => sm_scc_state(1),
      R => SR(0)
    );
\FSM_sequential_sm_scc_state_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \FSM_sequential_sm_scc_state[2]_i_1__0_n_0\,
      Q => sm_scc_state(2),
      R => SR(0)
    );
\INFERRED_GEN.data_reg[3][18]_srl4_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => sig_btt_len_residue(1),
      I1 => sig_btt_len_residue(0),
      I2 => sig_len_btt_slice(3),
      I3 => \INFERRED_GEN.data_reg[3][19]_srl4_i_2__0_n_0\,
      I4 => sig_btt_is_zero_reg,
      I5 => sig_btt_ms_bit_value,
      O => \in\(5)
    );
\INFERRED_GEN.data_reg[3][19]_srl4_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEAEEEAEEEEEEEB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(3),
      I2 => sig_btt_len_residue(1),
      I3 => sig_btt_len_residue(0),
      I4 => \INFERRED_GEN.data_reg[3][19]_srl4_i_2__0_n_0\,
      I5 => sig_btt_is_zero_reg,
      O => \in\(4)
    );
\INFERRED_GEN.data_reg[3][19]_srl4_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => sig_len_btt_slice(1),
      I1 => sig_len_btt_slice(0),
      I2 => sig_len_btt_slice(2),
      O => \INFERRED_GEN.data_reg[3][19]_srl4_i_2__0_n_0\
    );
\INFERRED_GEN.data_reg[3][20]_srl4_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEAEAEAEEEEEEEBE"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(2),
      I2 => \INFERRED_GEN.data_reg[3][20]_srl4_i_2__0_n_0\,
      I3 => sig_len_btt_slice(1),
      I4 => sig_len_btt_slice(0),
      I5 => sig_btt_is_zero_reg,
      O => \in\(3)
    );
\INFERRED_GEN.data_reg[3][20]_srl4_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => sig_btt_len_residue(0),
      I1 => sig_btt_len_residue(1),
      O => \INFERRED_GEN.data_reg[3][20]_srl4_i_2__0_n_0\
    );
\INFERRED_GEN.data_reg[3][21]_srl4_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEAEEEAEEEEEEEB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(1),
      I2 => sig_btt_len_residue(1),
      I3 => sig_btt_len_residue(0),
      I4 => sig_len_btt_slice(0),
      I5 => sig_btt_is_zero_reg,
      O => \in\(2)
    );
\INFERRED_GEN.data_reg[3][22]_srl4_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEAEEEB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(0),
      I2 => sig_btt_len_residue(1),
      I3 => sig_btt_len_residue(0),
      I4 => sig_btt_is_zero_reg,
      O => \in\(1)
    );
\INFERRED_GEN.data_reg[3][5]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_btt_len_residue(1),
      I2 => sig_btt_len_residue(0),
      O => \in\(8)
    );
\INFERRED_GEN.data_reg[3][6]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_btt_len_residue(1),
      I2 => sig_btt_len_residue(0),
      O => \in\(7)
    );
\INFERRED_GEN.data_reg[3][7]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_btt_len_residue(0),
      I2 => sig_btt_len_residue(1),
      O => \in\(6)
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7777F00000000000"
    )
        port map (
      I0 => \^sm_scc_sm_ready\,
      I1 => \^sig_cmd_reg_empty\,
      I2 => s_axis_s2mm_cmd_tvalid_split,
      I3 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      I4 => sig_cmd2mstr_cmd_valid,
      I5 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_reg\
    );
\sig_btt_is_zero_reg_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sm_pop_input_cmd,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_cmd_btt_reg0
    );
\sig_btt_is_zero_reg_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^sig_cmd_reg_empty\,
      I1 => \^sm_scc_sm_ready\,
      I2 => sig_cmd2mstr_cmd_valid,
      O => sig_load_input_cmd
    );
sig_btt_is_zero_reg_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => Q(6),
      I1 => Q(4),
      I2 => Q(5),
      I3 => sig_btt_is_zero_reg_i_4_n_0,
      O => \sig_btt_is_zero__0\
    );
sig_btt_is_zero_reg_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Q(2),
      I1 => Q(3),
      I2 => Q(0),
      I3 => Q(1),
      O => sig_btt_is_zero_reg_i_4_n_0
    );
sig_btt_is_zero_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => \sig_btt_is_zero__0\,
      Q => sig_btt_is_zero_reg,
      R => sig_cmd_btt_reg0
    );
\sig_cmd2addr_valid_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF100000"
    )
        port map (
      I0 => sm_scc_state(0),
      I1 => sm_scc_state(2),
      I2 => sm_scc_state(1),
      I3 => \^sig_mstr2addr_cmd_valid\,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I5 => sig_wr_fifo_0,
      O => \sig_cmd2addr_valid_i_1__0_n_0\
    );
sig_cmd2addr_valid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_cmd2addr_valid_i_1__0_n_0\,
      Q => \^sig_mstr2addr_cmd_valid\,
      R => '0'
    );
\sig_cmd2data_valid_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF100000"
    )
        port map (
      I0 => sm_scc_state(0),
      I1 => sm_scc_state(2),
      I2 => sm_scc_state(1),
      I3 => \^sig_mstr2data_cmd_valid\,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I5 => sig_wr_fifo,
      O => \sig_cmd2data_valid_i_1__0_n_0\
    );
sig_cmd2data_valid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_cmd2data_valid_i_1__0_n_0\,
      Q => \^sig_mstr2data_cmd_valid\,
      R => '0'
    );
\sig_cmd_addr_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(9),
      Q => \sig_next_burst_reg_reg[0]\(0),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(19),
      Q => \sig_next_burst_reg_reg[0]\(10),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(20),
      Q => \sig_next_burst_reg_reg[0]\(11),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(21),
      Q => \sig_next_burst_reg_reg[0]\(12),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(22),
      Q => \sig_next_burst_reg_reg[0]\(13),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(23),
      Q => \sig_next_burst_reg_reg[0]\(14),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(24),
      Q => \sig_next_burst_reg_reg[0]\(15),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(25),
      Q => \sig_next_burst_reg_reg[0]\(16),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(26),
      Q => \sig_next_burst_reg_reg[0]\(17),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(27),
      Q => \sig_next_burst_reg_reg[0]\(18),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(28),
      Q => \sig_next_burst_reg_reg[0]\(19),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(10),
      Q => \sig_next_burst_reg_reg[0]\(1),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(29),
      Q => \sig_next_burst_reg_reg[0]\(20),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(30),
      Q => \sig_next_burst_reg_reg[0]\(21),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(31),
      Q => \sig_next_burst_reg_reg[0]\(22),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(32),
      Q => \sig_next_burst_reg_reg[0]\(23),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(33),
      Q => \sig_next_burst_reg_reg[0]\(24),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(34),
      Q => \sig_next_burst_reg_reg[0]\(25),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(35),
      Q => \sig_next_burst_reg_reg[0]\(26),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(36),
      Q => \sig_next_burst_reg_reg[0]\(27),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(37),
      Q => \sig_next_burst_reg_reg[0]\(28),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(38),
      Q => \sig_next_burst_reg_reg[0]\(29),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(11),
      Q => \sig_next_burst_reg_reg[0]\(2),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(39),
      Q => \sig_next_burst_reg_reg[0]\(30),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(40),
      Q => \sig_next_burst_reg_reg[0]\(31),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(12),
      Q => \sig_next_burst_reg_reg[0]\(3),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(13),
      Q => \sig_next_burst_reg_reg[0]\(4),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(14),
      Q => \sig_next_burst_reg_reg[0]\(5),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(15),
      Q => \sig_next_burst_reg_reg[0]\(6),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(16),
      Q => \sig_next_burst_reg_reg[0]\(7),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(17),
      Q => \sig_next_burst_reg_reg[0]\(8),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(18),
      Q => \sig_next_burst_reg_reg[0]\(9),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(0),
      Q => sig_btt_len_residue(0),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(1),
      Q => sig_btt_len_residue(1),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(2),
      Q => sig_len_btt_slice(0),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(3),
      Q => sig_len_btt_slice(1),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(4),
      Q => sig_len_btt_slice(2),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(5),
      Q => sig_len_btt_slice(3),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(6),
      Q => sig_btt_ms_bit_value,
      R => sig_cmd_btt_reg0
    );
\sig_cmd_burst_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(7),
      Q => \sig_next_burst_reg_reg[0]\(32),
      R => sig_cmd_btt_reg0
    );
sig_cmd_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => '0',
      Q => \^sig_cmd_reg_empty\,
      S => sig_cmd_btt_reg0
    );
sig_cmd_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => sig_load_input_cmd,
      Q => sig_cmd_reg_full,
      R => sig_cmd_btt_reg0
    );
\sig_cmd_tag_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(8),
      Q => \in\(0),
      R => sig_cmd_btt_reg0
    );
sig_input_eof_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => sig_load_input_cmd,
      D => Q(8),
      Q => \in\(9),
      R => sig_cmd_btt_reg0
    );
\sm_pop_input_cmd_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00010000"
    )
        port map (
      I0 => sm_scc_state(0),
      I1 => sm_scc_state(1),
      I2 => \^sig_mstr2data_cmd_valid\,
      I3 => \^sig_mstr2addr_cmd_valid\,
      I4 => sm_scc_state(2),
      O => sm_pop_input_cmd_ns
    );
sm_pop_input_cmd_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sm_pop_input_cmd_ns,
      Q => sm_pop_input_cmd,
      R => SR(0)
    );
\sm_scc_sm_ready_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5F5E"
    )
        port map (
      I0 => sm_scc_state(1),
      I1 => sm_scc_state(0),
      I2 => sm_scc_state(2),
      I3 => sig_cmd2mstr_cmd_valid,
      O => sm_scc_sm_ready_ns
    );
sm_scc_sm_ready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sm_scc_sm_ready_ns,
      Q => \^sm_scc_sm_ready\,
      R => SR(0)
    );
\sm_set_error_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5400"
    )
        port map (
      I0 => sm_scc_state(2),
      I1 => sm_scc_state(0),
      I2 => sig_btt_is_zero_reg,
      I3 => sm_scc_state(1),
      O => sm_set_error_ns
    );
sm_set_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sm_set_error_ns,
      Q => \in\(10),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_scc_13 is
  port (
    sm_scc_sm_ready : out STD_LOGIC;
    sig_cmd_reg_empty : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \sig_next_burst_reg_reg[0]\ : out STD_LOGIC_VECTOR ( 32 downto 0 );
    sig_mstr2data_cmd_valid : out STD_LOGIC;
    sig_mstr2addr_cmd_valid : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 40 downto 0 );
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_cmd2data_valid_reg_0 : in STD_LOGIC;
    sig_cmd2addr_valid_reg_0 : in STD_LOGIC;
    sig_cmd2mstr_cmd_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_scc_13 : entity is "axi_datamover_scc";
end axi_dma_ctrl_axi_datamover_scc_13;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_scc_13 is
  signal \FSM_sequential_sm_scc_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_sm_scc_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_sm_scc_state[1]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_sm_scc_state[2]_i_2_n_0\ : STD_LOGIC;
  signal \INFERRED_GEN.data_reg[3][19]_srl4_i_2_n_0\ : STD_LOGIC;
  signal \INFERRED_GEN.data_reg[3][20]_srl4_i_2_n_0\ : STD_LOGIC;
  signal \sig_btt_is_zero__0\ : STD_LOGIC;
  signal sig_btt_is_zero_reg : STD_LOGIC;
  signal sig_btt_is_zero_reg_i_4_n_0 : STD_LOGIC;
  signal sig_btt_len_residue : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal sig_btt_ms_bit_value : STD_LOGIC;
  signal sig_cmd2addr_valid_i_1_n_0 : STD_LOGIC;
  signal sig_cmd2data_valid_i_1_n_0 : STD_LOGIC;
  signal sig_cmd_btt_reg0 : STD_LOGIC;
  signal \^sig_cmd_reg_empty\ : STD_LOGIC;
  signal sig_cmd_reg_full : STD_LOGIC;
  signal sig_len_btt_slice : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_load_input_cmd : STD_LOGIC;
  signal \^sig_mstr2addr_cmd_valid\ : STD_LOGIC;
  signal \^sig_mstr2data_cmd_valid\ : STD_LOGIC;
  signal sm_pop_input_cmd : STD_LOGIC;
  signal sm_pop_input_cmd_ns : STD_LOGIC;
  signal \^sm_scc_sm_ready\ : STD_LOGIC;
  signal sm_scc_sm_ready_ns : STD_LOGIC;
  signal sm_scc_state : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sm_scc_state : signal is "yes";
  signal sm_set_error_ns : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_sm_scc_state_reg[0]\ : label is "init:000,pop_recover:101,get_nxt_cmd:001,chk_and_calc:010,push_to_axi:100,error_trap:011";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_sm_scc_state_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_sm_scc_state_reg[1]\ : label is "init:000,pop_recover:101,get_nxt_cmd:001,chk_and_calc:010,push_to_axi:100,error_trap:011";
  attribute KEEP of \FSM_sequential_sm_scc_state_reg[1]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_sm_scc_state_reg[2]\ : label is "init:000,pop_recover:101,get_nxt_cmd:001,chk_and_calc:010,push_to_axi:100,error_trap:011";
  attribute KEEP of \FSM_sequential_sm_scc_state_reg[2]\ : label is "yes";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][10]_srl4_i_1\ : label is "soft_lutpair143";
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][11]_srl4_i_1\ : label is "soft_lutpair144";
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][22]_srl4_i_1\ : label is "soft_lutpair143";
  attribute SOFT_HLUTNM of \INFERRED_GEN.data_reg[3][9]_srl4_i_1\ : label is "soft_lutpair144";
begin
  sig_cmd_reg_empty <= \^sig_cmd_reg_empty\;
  sig_mstr2addr_cmd_valid <= \^sig_mstr2addr_cmd_valid\;
  sig_mstr2data_cmd_valid <= \^sig_mstr2data_cmd_valid\;
  sm_scc_sm_ready <= \^sm_scc_sm_ready\;
\FSM_sequential_sm_scc_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000555555551510"
    )
        port map (
      I0 => \FSM_sequential_sm_scc_state[0]_i_2_n_0\,
      I1 => sig_cmd_reg_full,
      I2 => sm_scc_state(0),
      I3 => sig_cmd2mstr_cmd_valid,
      I4 => sm_scc_state(2),
      I5 => sm_scc_state(1),
      O => \FSM_sequential_sm_scc_state[0]_i_1_n_0\
    );
\FSM_sequential_sm_scc_state[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFF22222"
    )
        port map (
      I0 => sm_scc_state(1),
      I1 => sig_btt_is_zero_reg,
      I2 => \^sig_mstr2data_cmd_valid\,
      I3 => \^sig_mstr2addr_cmd_valid\,
      I4 => sm_scc_state(2),
      I5 => sm_scc_state(0),
      O => \FSM_sequential_sm_scc_state[0]_i_2_n_0\
    );
\FSM_sequential_sm_scc_state[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"54445040"
    )
        port map (
      I0 => sm_scc_state(2),
      I1 => sm_scc_state(1),
      I2 => sm_scc_state(0),
      I3 => sig_cmd_reg_full,
      I4 => sig_btt_is_zero_reg,
      O => \FSM_sequential_sm_scc_state[1]_i_1_n_0\
    );
\FSM_sequential_sm_scc_state[2]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0026"
    )
        port map (
      I0 => sm_scc_state(2),
      I1 => sm_scc_state(1),
      I2 => sig_btt_is_zero_reg,
      I3 => sm_scc_state(0),
      O => \FSM_sequential_sm_scc_state[2]_i_2_n_0\
    );
\FSM_sequential_sm_scc_state_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \FSM_sequential_sm_scc_state[0]_i_1_n_0\,
      Q => sm_scc_state(0),
      R => SR(0)
    );
\FSM_sequential_sm_scc_state_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \FSM_sequential_sm_scc_state[1]_i_1_n_0\,
      Q => sm_scc_state(1),
      R => SR(0)
    );
\FSM_sequential_sm_scc_state_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \FSM_sequential_sm_scc_state[2]_i_2_n_0\,
      Q => sm_scc_state(2),
      R => SR(0)
    );
\INFERRED_GEN.data_reg[3][10]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_btt_len_residue(1),
      I2 => sig_btt_len_residue(0),
      O => \in\(7)
    );
\INFERRED_GEN.data_reg[3][11]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_btt_len_residue(0),
      I2 => sig_btt_len_residue(1),
      O => \in\(6)
    );
\INFERRED_GEN.data_reg[3][18]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => sig_btt_len_residue(1),
      I1 => sig_btt_len_residue(0),
      I2 => sig_len_btt_slice(3),
      I3 => \INFERRED_GEN.data_reg[3][19]_srl4_i_2_n_0\,
      I4 => sig_btt_is_zero_reg,
      I5 => sig_btt_ms_bit_value,
      O => \in\(5)
    );
\INFERRED_GEN.data_reg[3][19]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEAEEEAEEEEEEEB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(3),
      I2 => sig_btt_len_residue(1),
      I3 => sig_btt_len_residue(0),
      I4 => \INFERRED_GEN.data_reg[3][19]_srl4_i_2_n_0\,
      I5 => sig_btt_is_zero_reg,
      O => \in\(4)
    );
\INFERRED_GEN.data_reg[3][19]_srl4_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => sig_len_btt_slice(1),
      I1 => sig_len_btt_slice(0),
      I2 => sig_len_btt_slice(2),
      O => \INFERRED_GEN.data_reg[3][19]_srl4_i_2_n_0\
    );
\INFERRED_GEN.data_reg[3][20]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEAEAEAEEEEEEEBE"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(2),
      I2 => \INFERRED_GEN.data_reg[3][20]_srl4_i_2_n_0\,
      I3 => sig_len_btt_slice(1),
      I4 => sig_len_btt_slice(0),
      I5 => sig_btt_is_zero_reg,
      O => \in\(3)
    );
\INFERRED_GEN.data_reg[3][20]_srl4_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => sig_btt_len_residue(0),
      I1 => sig_btt_len_residue(1),
      O => \INFERRED_GEN.data_reg[3][20]_srl4_i_2_n_0\
    );
\INFERRED_GEN.data_reg[3][21]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEAEEEAEEEEEEEB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(1),
      I2 => sig_btt_len_residue(1),
      I3 => sig_btt_len_residue(0),
      I4 => sig_len_btt_slice(0),
      I5 => sig_btt_is_zero_reg,
      O => \in\(2)
    );
\INFERRED_GEN.data_reg[3][22]_srl4_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEAEEEB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_len_btt_slice(0),
      I2 => sig_btt_len_residue(1),
      I3 => sig_btt_len_residue(0),
      I4 => sig_btt_is_zero_reg,
      O => \in\(1)
    );
\INFERRED_GEN.data_reg[3][9]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => sig_btt_ms_bit_value,
      I1 => sig_btt_len_residue(1),
      I2 => sig_btt_len_residue(0),
      O => \in\(8)
    );
sig_btt_is_zero_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sm_pop_input_cmd,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_cmd_btt_reg0
    );
sig_btt_is_zero_reg_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => sig_cmd2mstr_cmd_valid,
      I1 => \^sig_cmd_reg_empty\,
      I2 => \^sm_scc_sm_ready\,
      O => sig_load_input_cmd
    );
sig_btt_is_zero_reg_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => Q(6),
      I1 => Q(4),
      I2 => Q(5),
      I3 => sig_btt_is_zero_reg_i_4_n_0,
      O => \sig_btt_is_zero__0\
    );
sig_btt_is_zero_reg_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Q(2),
      I1 => Q(3),
      I2 => Q(0),
      I3 => Q(1),
      O => sig_btt_is_zero_reg_i_4_n_0
    );
sig_btt_is_zero_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => \sig_btt_is_zero__0\,
      Q => sig_btt_is_zero_reg,
      R => sig_cmd_btt_reg0
    );
sig_cmd2addr_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA020000000000"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sm_scc_state(0),
      I2 => sm_scc_state(2),
      I3 => sm_scc_state(1),
      I4 => \^sig_mstr2addr_cmd_valid\,
      I5 => sig_cmd2addr_valid_reg_0,
      O => sig_cmd2addr_valid_i_1_n_0
    );
sig_cmd2addr_valid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_cmd2addr_valid_i_1_n_0,
      Q => \^sig_mstr2addr_cmd_valid\,
      R => '0'
    );
sig_cmd2data_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA020000000000"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sm_scc_state(0),
      I2 => sm_scc_state(2),
      I3 => sm_scc_state(1),
      I4 => \^sig_mstr2data_cmd_valid\,
      I5 => sig_cmd2data_valid_reg_0,
      O => sig_cmd2data_valid_i_1_n_0
    );
sig_cmd2data_valid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_cmd2data_valid_i_1_n_0,
      Q => \^sig_mstr2data_cmd_valid\,
      R => '0'
    );
\sig_cmd_addr_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(9),
      Q => \sig_next_burst_reg_reg[0]\(0),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(19),
      Q => \sig_next_burst_reg_reg[0]\(10),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(20),
      Q => \sig_next_burst_reg_reg[0]\(11),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(21),
      Q => \sig_next_burst_reg_reg[0]\(12),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(22),
      Q => \sig_next_burst_reg_reg[0]\(13),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(23),
      Q => \sig_next_burst_reg_reg[0]\(14),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(24),
      Q => \sig_next_burst_reg_reg[0]\(15),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(25),
      Q => \sig_next_burst_reg_reg[0]\(16),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(26),
      Q => \sig_next_burst_reg_reg[0]\(17),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(27),
      Q => \sig_next_burst_reg_reg[0]\(18),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(28),
      Q => \sig_next_burst_reg_reg[0]\(19),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(10),
      Q => \sig_next_burst_reg_reg[0]\(1),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(29),
      Q => \sig_next_burst_reg_reg[0]\(20),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(30),
      Q => \sig_next_burst_reg_reg[0]\(21),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(31),
      Q => \sig_next_burst_reg_reg[0]\(22),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(32),
      Q => \sig_next_burst_reg_reg[0]\(23),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(33),
      Q => \sig_next_burst_reg_reg[0]\(24),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(34),
      Q => \sig_next_burst_reg_reg[0]\(25),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(35),
      Q => \sig_next_burst_reg_reg[0]\(26),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(36),
      Q => \sig_next_burst_reg_reg[0]\(27),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(37),
      Q => \sig_next_burst_reg_reg[0]\(28),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(38),
      Q => \sig_next_burst_reg_reg[0]\(29),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(11),
      Q => \sig_next_burst_reg_reg[0]\(2),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(39),
      Q => \sig_next_burst_reg_reg[0]\(30),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(40),
      Q => \sig_next_burst_reg_reg[0]\(31),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(12),
      Q => \sig_next_burst_reg_reg[0]\(3),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(13),
      Q => \sig_next_burst_reg_reg[0]\(4),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(14),
      Q => \sig_next_burst_reg_reg[0]\(5),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(15),
      Q => \sig_next_burst_reg_reg[0]\(6),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(16),
      Q => \sig_next_burst_reg_reg[0]\(7),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(17),
      Q => \sig_next_burst_reg_reg[0]\(8),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(18),
      Q => \sig_next_burst_reg_reg[0]\(9),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(0),
      Q => sig_btt_len_residue(0),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(1),
      Q => sig_btt_len_residue(1),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(2),
      Q => sig_len_btt_slice(0),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(3),
      Q => sig_len_btt_slice(1),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(4),
      Q => sig_len_btt_slice(2),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(5),
      Q => sig_len_btt_slice(3),
      R => sig_cmd_btt_reg0
    );
\sig_cmd_btt_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(6),
      Q => sig_btt_ms_bit_value,
      R => sig_cmd_btt_reg0
    );
\sig_cmd_burst_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(7),
      Q => \sig_next_burst_reg_reg[0]\(32),
      R => sig_cmd_btt_reg0
    );
sig_cmd_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => '0',
      Q => \^sig_cmd_reg_empty\,
      S => sig_cmd_btt_reg0
    );
sig_cmd_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => sig_load_input_cmd,
      Q => sig_cmd_reg_full,
      R => sig_cmd_btt_reg0
    );
\sig_cmd_tag_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(8),
      Q => \in\(0),
      R => sig_cmd_btt_reg0
    );
sig_input_eof_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => sig_load_input_cmd,
      D => Q(8),
      Q => \in\(9),
      R => sig_cmd_btt_reg0
    );
sm_pop_input_cmd_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00010000"
    )
        port map (
      I0 => sm_scc_state(0),
      I1 => sm_scc_state(1),
      I2 => \^sig_mstr2addr_cmd_valid\,
      I3 => \^sig_mstr2data_cmd_valid\,
      I4 => sm_scc_state(2),
      O => sm_pop_input_cmd_ns
    );
sm_pop_input_cmd_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sm_pop_input_cmd_ns,
      Q => sm_pop_input_cmd,
      R => SR(0)
    );
sm_scc_sm_ready_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5F5E"
    )
        port map (
      I0 => sm_scc_state(1),
      I1 => sm_scc_state(0),
      I2 => sm_scc_state(2),
      I3 => sig_cmd2mstr_cmd_valid,
      O => sm_scc_sm_ready_ns
    );
sm_scc_sm_ready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sm_scc_sm_ready_ns,
      Q => \^sm_scc_sm_ready\,
      R => SR(0)
    );
sm_set_error_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5400"
    )
        port map (
      I0 => sm_scc_state(2),
      I1 => sm_scc_state(0),
      I2 => sig_btt_is_zero_reg,
      I3 => sm_scc_state(1),
      O => sm_set_error_ns
    );
sm_set_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sm_set_error_ns,
      Q => \in\(10),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_skid2mm_buf is
  port (
    \out\ : out STD_LOGIC;
    sig_last_mmap_dbeat_reg_reg : out STD_LOGIC;
    m_axi_s2mm_wvalid : out STD_LOGIC;
    sig_last_skid_reg : out STD_LOGIC;
    m_axi_s2mm_wlast : out STD_LOGIC;
    m_axi_s2mm_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_data2skid_wlast : in STD_LOGIC;
    sig_last_skid_mux_out : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_reset_reg : in STD_LOGIC;
    m_axi_s2mm_wready : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \sig_next_strt_strb_reg_reg[3]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_next_strt_strb_reg_reg[3]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_skid2mm_buf : entity is "axi_datamover_skid2mm_buf";
end axi_dma_ctrl_axi_datamover_skid2mm_buf;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_skid2mm_buf is
  signal \sig_data_reg_out[0]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[10]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[11]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[12]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[13]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[14]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[15]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[16]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[17]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[18]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[19]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[1]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[20]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[21]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[22]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[23]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[24]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[25]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[26]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[27]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[28]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[29]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[2]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[30]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[31]_i_2__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[3]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[4]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[5]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[6]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[7]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[8]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[9]_i_1__1_n_0\ : STD_LOGIC;
  signal sig_data_reg_out_en : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[10]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[11]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[12]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[13]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[14]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[15]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[21]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[26]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[2]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[30]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[31]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[6]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[7]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[8]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[9]\ : STD_LOGIC;
  signal sig_m_valid_dup : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_m_valid_dup : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_m_valid_dup : signal is "no";
  signal \sig_m_valid_dup_i_1__0_n_0\ : STD_LOGIC;
  signal sig_m_valid_out : STD_LOGIC;
  attribute RTL_KEEP of sig_m_valid_out : signal is "true";
  attribute equivalent_register_removal of sig_m_valid_out : signal is "no";
  signal sig_s_ready_dup : STD_LOGIC;
  attribute RTL_KEEP of sig_s_ready_dup : signal is "true";
  attribute equivalent_register_removal of sig_s_ready_dup : signal is "no";
  signal \sig_s_ready_dup_i_1__0_n_0\ : STD_LOGIC;
  signal sig_s_ready_out : STD_LOGIC;
  attribute RTL_KEEP of sig_s_ready_out : signal is "true";
  attribute equivalent_register_removal of sig_s_ready_out : signal is "no";
  attribute KEEP : string;
  attribute KEEP of sig_m_valid_dup_reg : label is "yes";
  attribute equivalent_register_removal of sig_m_valid_dup_reg : label is "no";
  attribute KEEP of sig_m_valid_out_reg : label is "yes";
  attribute equivalent_register_removal of sig_m_valid_out_reg : label is "no";
  attribute KEEP of sig_s_ready_dup_reg : label is "yes";
  attribute equivalent_register_removal of sig_s_ready_dup_reg : label is "no";
  attribute KEEP of sig_s_ready_out_reg : label is "yes";
  attribute equivalent_register_removal of sig_s_ready_out_reg : label is "no";
begin
  m_axi_s2mm_wvalid <= sig_m_valid_out;
  \out\ <= sig_s_ready_dup;
  sig_last_mmap_dbeat_reg_reg <= sig_s_ready_out;
\sig_data_reg_out[0]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(0),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[0]\,
      O => \sig_data_reg_out[0]_i_1__1_n_0\
    );
\sig_data_reg_out[10]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(10),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[10]\,
      O => \sig_data_reg_out[10]_i_1__1_n_0\
    );
\sig_data_reg_out[11]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(11),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[11]\,
      O => \sig_data_reg_out[11]_i_1__1_n_0\
    );
\sig_data_reg_out[12]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(12),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[12]\,
      O => \sig_data_reg_out[12]_i_1__1_n_0\
    );
\sig_data_reg_out[13]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(13),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[13]\,
      O => \sig_data_reg_out[13]_i_1__1_n_0\
    );
\sig_data_reg_out[14]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(14),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[14]\,
      O => \sig_data_reg_out[14]_i_1__1_n_0\
    );
\sig_data_reg_out[15]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(15),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[15]\,
      O => \sig_data_reg_out[15]_i_1__1_n_0\
    );
\sig_data_reg_out[16]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(16),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[16]\,
      O => \sig_data_reg_out[16]_i_1__1_n_0\
    );
\sig_data_reg_out[17]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(17),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[17]\,
      O => \sig_data_reg_out[17]_i_1__1_n_0\
    );
\sig_data_reg_out[18]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(18),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[18]\,
      O => \sig_data_reg_out[18]_i_1__1_n_0\
    );
\sig_data_reg_out[19]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(19),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[19]\,
      O => \sig_data_reg_out[19]_i_1__1_n_0\
    );
\sig_data_reg_out[1]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(1),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[1]\,
      O => \sig_data_reg_out[1]_i_1__1_n_0\
    );
\sig_data_reg_out[20]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(20),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[20]\,
      O => \sig_data_reg_out[20]_i_1__1_n_0\
    );
\sig_data_reg_out[21]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(21),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[21]\,
      O => \sig_data_reg_out[21]_i_1__1_n_0\
    );
\sig_data_reg_out[22]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(22),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[22]\,
      O => \sig_data_reg_out[22]_i_1__1_n_0\
    );
\sig_data_reg_out[23]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(23),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[23]\,
      O => \sig_data_reg_out[23]_i_1__1_n_0\
    );
\sig_data_reg_out[24]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(24),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[24]\,
      O => \sig_data_reg_out[24]_i_1__1_n_0\
    );
\sig_data_reg_out[25]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(25),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[25]\,
      O => \sig_data_reg_out[25]_i_1__1_n_0\
    );
\sig_data_reg_out[26]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(26),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[26]\,
      O => \sig_data_reg_out[26]_i_1__1_n_0\
    );
\sig_data_reg_out[27]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(27),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[27]\,
      O => \sig_data_reg_out[27]_i_1__1_n_0\
    );
\sig_data_reg_out[28]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(28),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[28]\,
      O => \sig_data_reg_out[28]_i_1__1_n_0\
    );
\sig_data_reg_out[29]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(29),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[29]\,
      O => \sig_data_reg_out[29]_i_1__1_n_0\
    );
\sig_data_reg_out[2]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(2),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[2]\,
      O => \sig_data_reg_out[2]_i_1__1_n_0\
    );
\sig_data_reg_out[30]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(30),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[30]\,
      O => \sig_data_reg_out[30]_i_1__1_n_0\
    );
\sig_data_reg_out[31]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => m_axi_s2mm_wready,
      I1 => sig_m_valid_dup,
      O => sig_data_reg_out_en
    );
\sig_data_reg_out[31]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(31),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[31]\,
      O => \sig_data_reg_out[31]_i_2__0_n_0\
    );
\sig_data_reg_out[3]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(3),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[3]\,
      O => \sig_data_reg_out[3]_i_1__1_n_0\
    );
\sig_data_reg_out[4]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(4),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[4]\,
      O => \sig_data_reg_out[4]_i_1__1_n_0\
    );
\sig_data_reg_out[5]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(5),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[5]\,
      O => \sig_data_reg_out[5]_i_1__1_n_0\
    );
\sig_data_reg_out[6]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(6),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[6]\,
      O => \sig_data_reg_out[6]_i_1__1_n_0\
    );
\sig_data_reg_out[7]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(7),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[7]\,
      O => \sig_data_reg_out[7]_i_1__1_n_0\
    );
\sig_data_reg_out[8]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(8),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[8]\,
      O => \sig_data_reg_out[8]_i_1__1_n_0\
    );
\sig_data_reg_out[9]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => D(9),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[9]\,
      O => \sig_data_reg_out[9]_i_1__1_n_0\
    );
\sig_data_reg_out_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[0]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(0),
      R => '0'
    );
\sig_data_reg_out_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[10]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(10),
      R => '0'
    );
\sig_data_reg_out_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[11]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(11),
      R => '0'
    );
\sig_data_reg_out_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[12]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(12),
      R => '0'
    );
\sig_data_reg_out_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[13]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(13),
      R => '0'
    );
\sig_data_reg_out_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[14]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(14),
      R => '0'
    );
\sig_data_reg_out_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[15]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(15),
      R => '0'
    );
\sig_data_reg_out_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[16]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(16),
      R => '0'
    );
\sig_data_reg_out_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[17]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(17),
      R => '0'
    );
\sig_data_reg_out_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[18]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(18),
      R => '0'
    );
\sig_data_reg_out_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[19]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(19),
      R => '0'
    );
\sig_data_reg_out_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[1]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(1),
      R => '0'
    );
\sig_data_reg_out_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[20]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(20),
      R => '0'
    );
\sig_data_reg_out_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[21]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(21),
      R => '0'
    );
\sig_data_reg_out_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[22]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(22),
      R => '0'
    );
\sig_data_reg_out_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[23]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(23),
      R => '0'
    );
\sig_data_reg_out_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[24]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(24),
      R => '0'
    );
\sig_data_reg_out_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[25]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(25),
      R => '0'
    );
\sig_data_reg_out_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[26]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(26),
      R => '0'
    );
\sig_data_reg_out_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[27]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(27),
      R => '0'
    );
\sig_data_reg_out_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[28]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(28),
      R => '0'
    );
\sig_data_reg_out_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[29]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(29),
      R => '0'
    );
\sig_data_reg_out_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[2]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(2),
      R => '0'
    );
\sig_data_reg_out_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[30]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(30),
      R => '0'
    );
\sig_data_reg_out_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[31]_i_2__0_n_0\,
      Q => m_axi_s2mm_wdata(31),
      R => '0'
    );
\sig_data_reg_out_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[3]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(3),
      R => '0'
    );
\sig_data_reg_out_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[4]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(4),
      R => '0'
    );
\sig_data_reg_out_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[5]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(5),
      R => '0'
    );
\sig_data_reg_out_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[6]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(6),
      R => '0'
    );
\sig_data_reg_out_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[7]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(7),
      R => '0'
    );
\sig_data_reg_out_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[8]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(8),
      R => '0'
    );
\sig_data_reg_out_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_data_reg_out[9]_i_1__1_n_0\,
      Q => m_axi_s2mm_wdata(9),
      R => '0'
    );
\sig_data_skid_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(0),
      Q => \sig_data_skid_reg_reg_n_0_[0]\,
      R => '0'
    );
\sig_data_skid_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(10),
      Q => \sig_data_skid_reg_reg_n_0_[10]\,
      R => '0'
    );
\sig_data_skid_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(11),
      Q => \sig_data_skid_reg_reg_n_0_[11]\,
      R => '0'
    );
\sig_data_skid_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(12),
      Q => \sig_data_skid_reg_reg_n_0_[12]\,
      R => '0'
    );
\sig_data_skid_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(13),
      Q => \sig_data_skid_reg_reg_n_0_[13]\,
      R => '0'
    );
\sig_data_skid_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(14),
      Q => \sig_data_skid_reg_reg_n_0_[14]\,
      R => '0'
    );
\sig_data_skid_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(15),
      Q => \sig_data_skid_reg_reg_n_0_[15]\,
      R => '0'
    );
\sig_data_skid_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(16),
      Q => \sig_data_skid_reg_reg_n_0_[16]\,
      R => '0'
    );
\sig_data_skid_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(17),
      Q => \sig_data_skid_reg_reg_n_0_[17]\,
      R => '0'
    );
\sig_data_skid_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(18),
      Q => \sig_data_skid_reg_reg_n_0_[18]\,
      R => '0'
    );
\sig_data_skid_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(19),
      Q => \sig_data_skid_reg_reg_n_0_[19]\,
      R => '0'
    );
\sig_data_skid_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(1),
      Q => \sig_data_skid_reg_reg_n_0_[1]\,
      R => '0'
    );
\sig_data_skid_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(20),
      Q => \sig_data_skid_reg_reg_n_0_[20]\,
      R => '0'
    );
\sig_data_skid_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(21),
      Q => \sig_data_skid_reg_reg_n_0_[21]\,
      R => '0'
    );
\sig_data_skid_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(22),
      Q => \sig_data_skid_reg_reg_n_0_[22]\,
      R => '0'
    );
\sig_data_skid_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(23),
      Q => \sig_data_skid_reg_reg_n_0_[23]\,
      R => '0'
    );
\sig_data_skid_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(24),
      Q => \sig_data_skid_reg_reg_n_0_[24]\,
      R => '0'
    );
\sig_data_skid_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(25),
      Q => \sig_data_skid_reg_reg_n_0_[25]\,
      R => '0'
    );
\sig_data_skid_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(26),
      Q => \sig_data_skid_reg_reg_n_0_[26]\,
      R => '0'
    );
\sig_data_skid_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(27),
      Q => \sig_data_skid_reg_reg_n_0_[27]\,
      R => '0'
    );
\sig_data_skid_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(28),
      Q => \sig_data_skid_reg_reg_n_0_[28]\,
      R => '0'
    );
\sig_data_skid_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(29),
      Q => \sig_data_skid_reg_reg_n_0_[29]\,
      R => '0'
    );
\sig_data_skid_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(2),
      Q => \sig_data_skid_reg_reg_n_0_[2]\,
      R => '0'
    );
\sig_data_skid_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(30),
      Q => \sig_data_skid_reg_reg_n_0_[30]\,
      R => '0'
    );
\sig_data_skid_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(31),
      Q => \sig_data_skid_reg_reg_n_0_[31]\,
      R => '0'
    );
\sig_data_skid_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(3),
      Q => \sig_data_skid_reg_reg_n_0_[3]\,
      R => '0'
    );
\sig_data_skid_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(4),
      Q => \sig_data_skid_reg_reg_n_0_[4]\,
      R => '0'
    );
\sig_data_skid_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(5),
      Q => \sig_data_skid_reg_reg_n_0_[5]\,
      R => '0'
    );
\sig_data_skid_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(6),
      Q => \sig_data_skid_reg_reg_n_0_[6]\,
      R => '0'
    );
\sig_data_skid_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(7),
      Q => \sig_data_skid_reg_reg_n_0_[7]\,
      R => '0'
    );
\sig_data_skid_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(8),
      Q => \sig_data_skid_reg_reg_n_0_[8]\,
      R => '0'
    );
\sig_data_skid_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => D(9),
      Q => \sig_data_skid_reg_reg_n_0_[9]\,
      R => '0'
    );
sig_last_reg_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => sig_last_skid_mux_out,
      Q => m_axi_s2mm_wlast,
      R => SR(0)
    );
sig_last_skid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => sig_data2skid_wlast,
      Q => sig_last_skid_reg,
      R => SR(0)
    );
\sig_m_valid_dup_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000005DDD0000"
    )
        port map (
      I0 => sig_halt_reg_reg,
      I1 => sig_m_valid_dup,
      I2 => sig_s_ready_dup,
      I3 => m_axi_s2mm_wready,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I5 => sig_reset_reg,
      O => \sig_m_valid_dup_i_1__0_n_0\
    );
sig_m_valid_dup_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_m_valid_dup_i_1__0_n_0\,
      Q => sig_m_valid_dup,
      R => '0'
    );
sig_m_valid_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_m_valid_dup_i_1__0_n_0\,
      Q => sig_m_valid_out,
      R => '0'
    );
\sig_s_ready_dup_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA8AAAAA8A8A8A8"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_reset_reg,
      I2 => m_axi_s2mm_wready,
      I3 => sig_halt_reg_reg,
      I4 => sig_m_valid_dup,
      I5 => sig_s_ready_dup,
      O => \sig_s_ready_dup_i_1__0_n_0\
    );
sig_s_ready_dup_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_s_ready_dup_i_1__0_n_0\,
      Q => sig_s_ready_dup,
      R => '0'
    );
sig_s_ready_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_s_ready_dup_i_1__0_n_0\,
      Q => sig_s_ready_out,
      R => '0'
    );
\sig_strb_reg_out_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_next_strt_strb_reg_reg[3]_0\(0),
      Q => m_axi_s2mm_wstrb(0),
      R => SR(0)
    );
\sig_strb_reg_out_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_next_strt_strb_reg_reg[3]_0\(1),
      Q => m_axi_s2mm_wstrb(1),
      R => SR(0)
    );
\sig_strb_reg_out_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_next_strt_strb_reg_reg[3]_0\(2),
      Q => m_axi_s2mm_wstrb(2),
      R => SR(0)
    );
\sig_strb_reg_out_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_data_reg_out_en,
      D => \sig_next_strt_strb_reg_reg[3]_0\(3),
      Q => m_axi_s2mm_wstrb(3),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => \sig_next_strt_strb_reg_reg[3]\(0),
      Q => Q(0),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => \sig_next_strt_strb_reg_reg[3]\(1),
      Q => Q(1),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => \sig_next_strt_strb_reg_reg[3]\(2),
      Q => Q(2),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => \sig_next_strt_strb_reg_reg[3]\(3),
      Q => Q(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_skid_buf is
  port (
    \out\ : out STD_LOGIC;
    s_axis_s2mm_tready : out STD_LOGIC;
    sig_s_ready_out_reg_0 : out STD_LOGIC;
    p_0_out : out STD_LOGIC;
    sig_stop_request : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_data_skid_reg_reg[31]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_halt_reg_dly3_reg : in STD_LOGIC;
    sig_reset_reg : in STD_LOGIC;
    s_axis_s2mm_tvalid : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    sig_halt_reg_dly3_reg_0 : in STD_LOGIC;
    sig_m_valid_dup_reg_0 : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    s_axis_s2mm_tlast : in STD_LOGIC;
    sig_halt_reg_dly3 : in STD_LOGIC;
    sig_halt_reg_dly2 : in STD_LOGIC;
    s_axis_s2mm_tkeep : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axis_s2mm_tdata : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_skid_buf : entity is "axi_datamover_skid_buf";
end axi_dma_ctrl_axi_datamover_skid_buf;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_skid_buf is
  signal sig_data_reg_out0 : STD_LOGIC;
  signal \sig_data_reg_out[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[10]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[11]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[12]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[13]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[14]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[15]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[16]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[17]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[18]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[19]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[1]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[20]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[21]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[22]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[23]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[24]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[25]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[26]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[27]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[28]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[29]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[2]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[30]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[31]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[3]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[4]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[5]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[6]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[7]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[8]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_reg_out[9]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[10]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[11]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[12]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[13]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[14]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[15]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[21]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[26]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[2]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[30]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[31]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[6]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[7]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[8]\ : STD_LOGIC;
  signal \sig_data_skid_reg_reg_n_0_[9]\ : STD_LOGIC;
  signal sig_last_skid_mux_out : STD_LOGIC;
  signal sig_last_skid_reg : STD_LOGIC;
  signal sig_m_valid_dup : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_m_valid_dup : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_m_valid_dup : signal is "no";
  signal \sig_m_valid_dup_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_m_valid_dup_i_2__0_n_0\ : STD_LOGIC;
  signal sig_m_valid_out : STD_LOGIC;
  attribute RTL_KEEP of sig_m_valid_out : signal is "true";
  attribute equivalent_register_removal of sig_m_valid_out : signal is "no";
  signal sig_mvalid_stop : STD_LOGIC;
  signal sig_mvalid_stop_reg_i_1_n_0 : STD_LOGIC;
  signal sig_s_ready_dup : STD_LOGIC;
  attribute RTL_KEEP of sig_s_ready_dup : signal is "true";
  attribute equivalent_register_removal of sig_s_ready_dup : signal is "no";
  signal \sig_s_ready_dup_i_1__1_n_0\ : STD_LOGIC;
  signal sig_s_ready_out : STD_LOGIC;
  attribute RTL_KEEP of sig_s_ready_out : signal is "true";
  attribute equivalent_register_removal of sig_s_ready_out : signal is "no";
  signal sig_slast_with_stop : STD_LOGIC;
  signal sig_sstrb_with_stop : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^sig_stop_request\ : STD_LOGIC;
  signal sig_strb_skid_mux_out : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_strb_skid_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_last_skid_reg_i_1__1\ : label is "soft_lutpair155";
  attribute KEEP : string;
  attribute KEEP of sig_m_valid_dup_reg : label is "yes";
  attribute equivalent_register_removal of sig_m_valid_dup_reg : label is "no";
  attribute KEEP of sig_m_valid_out_reg : label is "yes";
  attribute equivalent_register_removal of sig_m_valid_out_reg : label is "no";
  attribute KEEP of sig_s_ready_dup_reg : label is "yes";
  attribute equivalent_register_removal of sig_s_ready_dup_reg : label is "no";
  attribute KEEP of sig_s_ready_out_reg : label is "yes";
  attribute equivalent_register_removal of sig_s_ready_out_reg : label is "no";
  attribute SOFT_HLUTNM of \sig_strb_skid_reg[1]_i_1__1\ : label is "soft_lutpair156";
  attribute SOFT_HLUTNM of \sig_strb_skid_reg[2]_i_1__1\ : label is "soft_lutpair156";
  attribute SOFT_HLUTNM of \sig_strb_skid_reg[3]_i_1__1\ : label is "soft_lutpair155";
begin
  \out\ <= sig_m_valid_dup;
  s_axis_s2mm_tready <= sig_s_ready_out;
  sig_s_ready_out_reg_0 <= sig_m_valid_out;
  sig_stop_request <= \^sig_stop_request\;
\sig_data_reg_out[0]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(0),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[0]\,
      O => \sig_data_reg_out[0]_i_1__0_n_0\
    );
\sig_data_reg_out[10]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(10),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[10]\,
      O => \sig_data_reg_out[10]_i_1__0_n_0\
    );
\sig_data_reg_out[11]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(11),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[11]\,
      O => \sig_data_reg_out[11]_i_1__0_n_0\
    );
\sig_data_reg_out[12]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(12),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[12]\,
      O => \sig_data_reg_out[12]_i_1__0_n_0\
    );
\sig_data_reg_out[13]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(13),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[13]\,
      O => \sig_data_reg_out[13]_i_1__0_n_0\
    );
\sig_data_reg_out[14]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(14),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[14]\,
      O => \sig_data_reg_out[14]_i_1__0_n_0\
    );
\sig_data_reg_out[15]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(15),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[15]\,
      O => \sig_data_reg_out[15]_i_1__0_n_0\
    );
\sig_data_reg_out[16]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(16),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[16]\,
      O => \sig_data_reg_out[16]_i_1__0_n_0\
    );
\sig_data_reg_out[17]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(17),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[17]\,
      O => \sig_data_reg_out[17]_i_1__0_n_0\
    );
\sig_data_reg_out[18]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(18),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[18]\,
      O => \sig_data_reg_out[18]_i_1__0_n_0\
    );
\sig_data_reg_out[19]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(19),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[19]\,
      O => \sig_data_reg_out[19]_i_1__0_n_0\
    );
\sig_data_reg_out[1]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(1),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[1]\,
      O => \sig_data_reg_out[1]_i_1__0_n_0\
    );
\sig_data_reg_out[20]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(20),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[20]\,
      O => \sig_data_reg_out[20]_i_1__0_n_0\
    );
\sig_data_reg_out[21]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(21),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[21]\,
      O => \sig_data_reg_out[21]_i_1__0_n_0\
    );
\sig_data_reg_out[22]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(22),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[22]\,
      O => \sig_data_reg_out[22]_i_1__0_n_0\
    );
\sig_data_reg_out[23]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(23),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[23]\,
      O => \sig_data_reg_out[23]_i_1__0_n_0\
    );
\sig_data_reg_out[24]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(24),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[24]\,
      O => \sig_data_reg_out[24]_i_1__0_n_0\
    );
\sig_data_reg_out[25]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(25),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[25]\,
      O => \sig_data_reg_out[25]_i_1__0_n_0\
    );
\sig_data_reg_out[26]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(26),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[26]\,
      O => \sig_data_reg_out[26]_i_1__0_n_0\
    );
\sig_data_reg_out[27]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(27),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[27]\,
      O => \sig_data_reg_out[27]_i_1__0_n_0\
    );
\sig_data_reg_out[28]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(28),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[28]\,
      O => \sig_data_reg_out[28]_i_1__0_n_0\
    );
\sig_data_reg_out[29]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(29),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[29]\,
      O => \sig_data_reg_out[29]_i_1__0_n_0\
    );
\sig_data_reg_out[2]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(2),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[2]\,
      O => \sig_data_reg_out[2]_i_1__0_n_0\
    );
\sig_data_reg_out[30]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(30),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[30]\,
      O => \sig_data_reg_out[30]_i_1__0_n_0\
    );
\sig_data_reg_out[31]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(31),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[31]\,
      O => \sig_data_reg_out[31]_i_1__1_n_0\
    );
\sig_data_reg_out[3]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(3),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[3]\,
      O => \sig_data_reg_out[3]_i_1__0_n_0\
    );
\sig_data_reg_out[4]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(4),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[4]\,
      O => \sig_data_reg_out[4]_i_1__0_n_0\
    );
\sig_data_reg_out[5]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(5),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[5]\,
      O => \sig_data_reg_out[5]_i_1__0_n_0\
    );
\sig_data_reg_out[6]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(6),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[6]\,
      O => \sig_data_reg_out[6]_i_1__0_n_0\
    );
\sig_data_reg_out[7]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(7),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[7]\,
      O => \sig_data_reg_out[7]_i_1__0_n_0\
    );
\sig_data_reg_out[8]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(8),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[8]\,
      O => \sig_data_reg_out[8]_i_1__0_n_0\
    );
\sig_data_reg_out[9]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axis_s2mm_tdata(9),
      I1 => sig_s_ready_dup,
      I2 => \sig_data_skid_reg_reg_n_0_[9]\,
      O => \sig_data_reg_out[9]_i_1__0_n_0\
    );
\sig_data_reg_out_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[0]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(0),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[10]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(10),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[11]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(11),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[12]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(12),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[13]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(13),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[14]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(14),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[15]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(15),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[16]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(16),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[17]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(17),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[18]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(18),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[19]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(19),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[1]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(1),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[20]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(20),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[21]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(21),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[22]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(22),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[23]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(23),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[24]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(24),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[25]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(25),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[26]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(26),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[27]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(27),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[28]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(28),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[29]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(29),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[2]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(2),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[30]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(30),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[31]_i_1__1_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(31),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[3]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(3),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[4]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(4),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[5]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(5),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[6]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(6),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[7]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(7),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[8]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(8),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => \sig_data_reg_out[9]_i_1__0_n_0\,
      Q => \sig_data_skid_reg_reg[31]_0\(9),
      R => sig_data_reg_out0
    );
\sig_data_skid_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(0),
      Q => \sig_data_skid_reg_reg_n_0_[0]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(10),
      Q => \sig_data_skid_reg_reg_n_0_[10]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(11),
      Q => \sig_data_skid_reg_reg_n_0_[11]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(12),
      Q => \sig_data_skid_reg_reg_n_0_[12]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(13),
      Q => \sig_data_skid_reg_reg_n_0_[13]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(14),
      Q => \sig_data_skid_reg_reg_n_0_[14]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(15),
      Q => \sig_data_skid_reg_reg_n_0_[15]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(16),
      Q => \sig_data_skid_reg_reg_n_0_[16]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(17),
      Q => \sig_data_skid_reg_reg_n_0_[17]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(18),
      Q => \sig_data_skid_reg_reg_n_0_[18]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(19),
      Q => \sig_data_skid_reg_reg_n_0_[19]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(1),
      Q => \sig_data_skid_reg_reg_n_0_[1]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(20),
      Q => \sig_data_skid_reg_reg_n_0_[20]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(21),
      Q => \sig_data_skid_reg_reg_n_0_[21]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(22),
      Q => \sig_data_skid_reg_reg_n_0_[22]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(23),
      Q => \sig_data_skid_reg_reg_n_0_[23]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(24),
      Q => \sig_data_skid_reg_reg_n_0_[24]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(25),
      Q => \sig_data_skid_reg_reg_n_0_[25]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(26),
      Q => \sig_data_skid_reg_reg_n_0_[26]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(27),
      Q => \sig_data_skid_reg_reg_n_0_[27]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(28),
      Q => \sig_data_skid_reg_reg_n_0_[28]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(29),
      Q => \sig_data_skid_reg_reg_n_0_[29]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(2),
      Q => \sig_data_skid_reg_reg_n_0_[2]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(30),
      Q => \sig_data_skid_reg_reg_n_0_[30]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(31),
      Q => \sig_data_skid_reg_reg_n_0_[31]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(3),
      Q => \sig_data_skid_reg_reg_n_0_[3]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(4),
      Q => \sig_data_skid_reg_reg_n_0_[4]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(5),
      Q => \sig_data_skid_reg_reg_n_0_[5]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(6),
      Q => \sig_data_skid_reg_reg_n_0_[6]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(7),
      Q => \sig_data_skid_reg_reg_n_0_[7]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(8),
      Q => \sig_data_skid_reg_reg_n_0_[8]\,
      R => SR(0)
    );
\sig_data_skid_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => s_axis_s2mm_tdata(9),
      Q => \sig_data_skid_reg_reg_n_0_[9]\,
      R => SR(0)
    );
\sig_last_reg_out_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tlast,
      I2 => sig_s_ready_dup,
      I3 => sig_last_skid_reg,
      O => sig_last_skid_mux_out
    );
sig_last_reg_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => sig_last_skid_mux_out,
      Q => p_0_out,
      R => sig_data_reg_out0
    );
\sig_last_skid_reg_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tlast,
      O => sig_slast_with_stop
    );
sig_last_skid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => sig_slast_with_stop,
      Q => sig_last_skid_reg,
      R => SR(0)
    );
\sig_m_valid_dup_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000E00"
    )
        port map (
      I0 => \sig_m_valid_dup_i_2__0_n_0\,
      I1 => sig_m_valid_dup_reg_0,
      I2 => sig_reset_reg,
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I4 => sig_mvalid_stop,
      O => \sig_m_valid_dup_i_1__1_n_0\
    );
\sig_m_valid_dup_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4500454555005500"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => sig_halt_reg_dly3,
      I2 => sig_halt_reg_dly2,
      I3 => s_axis_s2mm_tvalid,
      I4 => sig_s_ready_dup,
      I5 => sig_m_valid_dup,
      O => \sig_m_valid_dup_i_2__0_n_0\
    );
sig_m_valid_dup_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_m_valid_dup_i_1__1_n_0\,
      Q => sig_m_valid_dup,
      R => '0'
    );
sig_m_valid_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_m_valid_dup_i_1__1_n_0\,
      Q => sig_m_valid_out,
      R => '0'
    );
sig_mvalid_stop_reg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF0000FF20"
    )
        port map (
      I0 => sig_halt_reg_dly2,
      I1 => sig_halt_reg_dly3,
      I2 => sig_m_valid_dup,
      I3 => \^sig_stop_request\,
      I4 => sig_m_valid_dup_reg_0,
      I5 => sig_mvalid_stop,
      O => sig_mvalid_stop_reg_i_1_n_0
    );
sig_mvalid_stop_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_mvalid_stop_reg_i_1_n_0,
      Q => sig_mvalid_stop,
      R => SR(0)
    );
\sig_s_ready_dup_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFFBFAA"
    )
        port map (
      I0 => sig_reset_reg,
      I1 => sig_m_valid_dup,
      I2 => s_axis_s2mm_tvalid,
      I3 => sig_s_ready_dup,
      I4 => sig_halt_reg_reg,
      I5 => sig_halt_reg_dly3_reg_0,
      O => \sig_s_ready_dup_i_1__1_n_0\
    );
sig_s_ready_dup_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_s_ready_dup_i_1__1_n_0\,
      Q => sig_s_ready_dup,
      R => '0'
    );
sig_s_ready_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_s_ready_dup_i_1__1_n_0\,
      Q => sig_s_ready_out,
      R => '0'
    );
sig_sready_stop_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_halt_reg_dly3_reg,
      Q => \^sig_stop_request\,
      R => SR(0)
    );
\sig_strb_reg_out[0]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(0),
      I2 => sig_s_ready_dup,
      I3 => sig_strb_skid_reg(0),
      O => sig_strb_skid_mux_out(0)
    );
\sig_strb_reg_out[1]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(1),
      I2 => sig_s_ready_dup,
      I3 => sig_strb_skid_reg(1),
      O => sig_strb_skid_mux_out(1)
    );
\sig_strb_reg_out[2]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(2),
      I2 => sig_s_ready_dup,
      I3 => sig_strb_skid_reg(2),
      O => sig_strb_skid_mux_out(2)
    );
\sig_strb_reg_out[3]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sig_mvalid_stop,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_data_reg_out0
    );
\sig_strb_reg_out[3]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(3),
      I2 => sig_s_ready_dup,
      I3 => sig_strb_skid_reg(3),
      O => sig_strb_skid_mux_out(3)
    );
\sig_strb_reg_out_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => sig_strb_skid_mux_out(0),
      Q => Q(0),
      R => sig_data_reg_out0
    );
\sig_strb_reg_out_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => sig_strb_skid_mux_out(1),
      Q => Q(1),
      R => sig_data_reg_out0
    );
\sig_strb_reg_out_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => sig_strb_skid_mux_out(2),
      Q => Q(2),
      R => sig_data_reg_out0
    );
\sig_strb_reg_out_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => E(0),
      D => sig_strb_skid_mux_out(3),
      Q => Q(3),
      R => sig_data_reg_out0
    );
\sig_strb_skid_reg[0]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(0),
      O => sig_sstrb_with_stop(0)
    );
\sig_strb_skid_reg[1]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(1),
      O => sig_sstrb_with_stop(1)
    );
\sig_strb_skid_reg[2]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(2),
      O => sig_sstrb_with_stop(2)
    );
\sig_strb_skid_reg[3]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_stop_request\,
      I1 => s_axis_s2mm_tkeep(3),
      O => sig_sstrb_with_stop(3)
    );
\sig_strb_skid_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => sig_sstrb_with_stop(0),
      Q => sig_strb_skid_reg(0),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => sig_sstrb_with_stop(1),
      Q => sig_strb_skid_reg(1),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => sig_sstrb_with_stop(2),
      Q => sig_strb_skid_reg(2),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_s_ready_dup,
      D => sig_sstrb_with_stop(3),
      Q => sig_strb_skid_reg(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_skid_buf_11 is
  port (
    \out\ : out STD_LOGIC;
    sig_mvalid_stop_reg_reg_0 : out STD_LOGIC;
    sig_first_dbeat_reg : out STD_LOGIC;
    m_axis_mm2s_tvalid : out STD_LOGIC;
    m_axis_mm2s_tlast : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_sstrb_stop_mask : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_mvalid_stop : out STD_LOGIC;
    m_axis_mm2s_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axis_mm2s_tkeep : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_sstrb_stop_mask_reg[3]_0\ : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_slast_with_stop : in STD_LOGIC;
    sig_halt_reg_dly3_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axi_mm2s_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    sig_halt_reg_dly3 : in STD_LOGIC;
    sig_halt_reg_dly2 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_strb_skid_reg_reg[3]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_skid_buf_11 : entity is "axi_datamover_skid_buf";
end axi_dma_ctrl_axi_datamover_skid_buf_11;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_skid_buf_11 is
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_data_reg_out0 : STD_LOGIC;
  signal sig_data_skid_mux_out : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal sig_data_skid_reg : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal sig_last_skid_mux_out : STD_LOGIC;
  signal sig_last_skid_reg : STD_LOGIC;
  signal sig_m_valid_dup : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_m_valid_dup : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_m_valid_dup : signal is "no";
  signal sig_m_valid_out : STD_LOGIC;
  attribute RTL_KEEP of sig_m_valid_out : signal is "true";
  attribute equivalent_register_removal of sig_m_valid_out : signal is "no";
  signal \^sig_mvalid_stop\ : STD_LOGIC;
  signal sig_mvalid_stop_reg_i_1_n_0 : STD_LOGIC;
  signal sig_s_ready_dup : STD_LOGIC;
  attribute RTL_KEEP of sig_s_ready_dup : signal is "true";
  attribute equivalent_register_removal of sig_s_ready_dup : signal is "no";
  signal sig_s_ready_out : STD_LOGIC;
  attribute RTL_KEEP of sig_s_ready_out : signal is "true";
  attribute equivalent_register_removal of sig_s_ready_out : signal is "no";
  signal \^sig_sstrb_stop_mask\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute KEEP : string;
  attribute KEEP of sig_m_valid_dup_reg : label is "yes";
  attribute equivalent_register_removal of sig_m_valid_dup_reg : label is "no";
  attribute KEEP of sig_m_valid_out_reg : label is "yes";
  attribute equivalent_register_removal of sig_m_valid_out_reg : label is "no";
  attribute KEEP of sig_s_ready_dup_reg : label is "yes";
  attribute equivalent_register_removal of sig_s_ready_dup_reg : label is "no";
  attribute KEEP of sig_s_ready_out_reg : label is "yes";
  attribute equivalent_register_removal of sig_s_ready_out_reg : label is "no";
begin
  E(0) <= \^e\(0);
  m_axis_mm2s_tvalid <= sig_m_valid_out;
  \out\ <= sig_s_ready_dup;
  sig_first_dbeat_reg <= sig_s_ready_out;
  sig_mvalid_stop <= \^sig_mvalid_stop\;
  sig_mvalid_stop_reg_reg_0 <= sig_m_valid_dup;
  sig_sstrb_stop_mask(0) <= \^sig_sstrb_stop_mask\(0);
\sig_data_reg_out[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(0),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(0),
      O => sig_data_skid_mux_out(0)
    );
\sig_data_reg_out[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(10),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(10),
      O => sig_data_skid_mux_out(10)
    );
\sig_data_reg_out[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(11),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(11),
      O => sig_data_skid_mux_out(11)
    );
\sig_data_reg_out[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(12),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(12),
      O => sig_data_skid_mux_out(12)
    );
\sig_data_reg_out[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(13),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(13),
      O => sig_data_skid_mux_out(13)
    );
\sig_data_reg_out[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(14),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(14),
      O => sig_data_skid_mux_out(14)
    );
\sig_data_reg_out[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(15),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(15),
      O => sig_data_skid_mux_out(15)
    );
\sig_data_reg_out[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(16),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(16),
      O => sig_data_skid_mux_out(16)
    );
\sig_data_reg_out[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(17),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(17),
      O => sig_data_skid_mux_out(17)
    );
\sig_data_reg_out[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(18),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(18),
      O => sig_data_skid_mux_out(18)
    );
\sig_data_reg_out[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(19),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(19),
      O => sig_data_skid_mux_out(19)
    );
\sig_data_reg_out[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(1),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(1),
      O => sig_data_skid_mux_out(1)
    );
\sig_data_reg_out[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(20),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(20),
      O => sig_data_skid_mux_out(20)
    );
\sig_data_reg_out[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(21),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(21),
      O => sig_data_skid_mux_out(21)
    );
\sig_data_reg_out[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(22),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(22),
      O => sig_data_skid_mux_out(22)
    );
\sig_data_reg_out[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(23),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(23),
      O => sig_data_skid_mux_out(23)
    );
\sig_data_reg_out[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(24),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(24),
      O => sig_data_skid_mux_out(24)
    );
\sig_data_reg_out[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(25),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(25),
      O => sig_data_skid_mux_out(25)
    );
\sig_data_reg_out[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(26),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(26),
      O => sig_data_skid_mux_out(26)
    );
\sig_data_reg_out[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(27),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(27),
      O => sig_data_skid_mux_out(27)
    );
\sig_data_reg_out[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(28),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(28),
      O => sig_data_skid_mux_out(28)
    );
\sig_data_reg_out[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(29),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(29),
      O => sig_data_skid_mux_out(29)
    );
\sig_data_reg_out[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(2),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(2),
      O => sig_data_skid_mux_out(2)
    );
\sig_data_reg_out[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(30),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(30),
      O => sig_data_skid_mux_out(30)
    );
\sig_data_reg_out[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^sig_mvalid_stop\,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_data_reg_out0
    );
\sig_data_reg_out[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => m_axis_mm2s_tready,
      I1 => sig_m_valid_dup,
      O => \^e\(0)
    );
\sig_data_reg_out[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(31),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(31),
      O => sig_data_skid_mux_out(31)
    );
\sig_data_reg_out[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(3),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(3),
      O => sig_data_skid_mux_out(3)
    );
\sig_data_reg_out[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(4),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(4),
      O => sig_data_skid_mux_out(4)
    );
\sig_data_reg_out[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(5),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(5),
      O => sig_data_skid_mux_out(5)
    );
\sig_data_reg_out[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(6),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(6),
      O => sig_data_skid_mux_out(6)
    );
\sig_data_reg_out[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(7),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(7),
      O => sig_data_skid_mux_out(7)
    );
\sig_data_reg_out[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(8),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(8),
      O => sig_data_skid_mux_out(8)
    );
\sig_data_reg_out[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => m_axi_mm2s_rdata(9),
      I1 => sig_s_ready_dup,
      I2 => sig_data_skid_reg(9),
      O => sig_data_skid_mux_out(9)
    );
\sig_data_reg_out_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(0),
      Q => m_axis_mm2s_tdata(0),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(10),
      Q => m_axis_mm2s_tdata(10),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(11),
      Q => m_axis_mm2s_tdata(11),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(12),
      Q => m_axis_mm2s_tdata(12),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(13),
      Q => m_axis_mm2s_tdata(13),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(14),
      Q => m_axis_mm2s_tdata(14),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(15),
      Q => m_axis_mm2s_tdata(15),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(16),
      Q => m_axis_mm2s_tdata(16),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(17),
      Q => m_axis_mm2s_tdata(17),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(18),
      Q => m_axis_mm2s_tdata(18),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(19),
      Q => m_axis_mm2s_tdata(19),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(1),
      Q => m_axis_mm2s_tdata(1),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(20),
      Q => m_axis_mm2s_tdata(20),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(21),
      Q => m_axis_mm2s_tdata(21),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(22),
      Q => m_axis_mm2s_tdata(22),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(23),
      Q => m_axis_mm2s_tdata(23),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(24),
      Q => m_axis_mm2s_tdata(24),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(25),
      Q => m_axis_mm2s_tdata(25),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(26),
      Q => m_axis_mm2s_tdata(26),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(27),
      Q => m_axis_mm2s_tdata(27),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(28),
      Q => m_axis_mm2s_tdata(28),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(29),
      Q => m_axis_mm2s_tdata(29),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(2),
      Q => m_axis_mm2s_tdata(2),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(30),
      Q => m_axis_mm2s_tdata(30),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(31),
      Q => m_axis_mm2s_tdata(31),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(3),
      Q => m_axis_mm2s_tdata(3),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(4),
      Q => m_axis_mm2s_tdata(4),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(5),
      Q => m_axis_mm2s_tdata(5),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(6),
      Q => m_axis_mm2s_tdata(6),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(7),
      Q => m_axis_mm2s_tdata(7),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(8),
      Q => m_axis_mm2s_tdata(8),
      R => sig_data_reg_out0
    );
\sig_data_reg_out_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_data_skid_mux_out(9),
      Q => m_axis_mm2s_tdata(9),
      R => sig_data_reg_out0
    );
\sig_data_skid_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(0),
      Q => sig_data_skid_reg(0),
      R => SR(0)
    );
\sig_data_skid_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(10),
      Q => sig_data_skid_reg(10),
      R => SR(0)
    );
\sig_data_skid_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(11),
      Q => sig_data_skid_reg(11),
      R => SR(0)
    );
\sig_data_skid_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(12),
      Q => sig_data_skid_reg(12),
      R => SR(0)
    );
\sig_data_skid_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(13),
      Q => sig_data_skid_reg(13),
      R => SR(0)
    );
\sig_data_skid_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(14),
      Q => sig_data_skid_reg(14),
      R => SR(0)
    );
\sig_data_skid_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(15),
      Q => sig_data_skid_reg(15),
      R => SR(0)
    );
\sig_data_skid_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(16),
      Q => sig_data_skid_reg(16),
      R => SR(0)
    );
\sig_data_skid_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(17),
      Q => sig_data_skid_reg(17),
      R => SR(0)
    );
\sig_data_skid_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(18),
      Q => sig_data_skid_reg(18),
      R => SR(0)
    );
\sig_data_skid_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(19),
      Q => sig_data_skid_reg(19),
      R => SR(0)
    );
\sig_data_skid_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(1),
      Q => sig_data_skid_reg(1),
      R => SR(0)
    );
\sig_data_skid_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(20),
      Q => sig_data_skid_reg(20),
      R => SR(0)
    );
\sig_data_skid_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(21),
      Q => sig_data_skid_reg(21),
      R => SR(0)
    );
\sig_data_skid_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(22),
      Q => sig_data_skid_reg(22),
      R => SR(0)
    );
\sig_data_skid_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(23),
      Q => sig_data_skid_reg(23),
      R => SR(0)
    );
\sig_data_skid_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(24),
      Q => sig_data_skid_reg(24),
      R => SR(0)
    );
\sig_data_skid_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(25),
      Q => sig_data_skid_reg(25),
      R => SR(0)
    );
\sig_data_skid_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(26),
      Q => sig_data_skid_reg(26),
      R => SR(0)
    );
\sig_data_skid_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(27),
      Q => sig_data_skid_reg(27),
      R => SR(0)
    );
\sig_data_skid_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(28),
      Q => sig_data_skid_reg(28),
      R => SR(0)
    );
\sig_data_skid_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(29),
      Q => sig_data_skid_reg(29),
      R => SR(0)
    );
\sig_data_skid_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(2),
      Q => sig_data_skid_reg(2),
      R => SR(0)
    );
\sig_data_skid_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(30),
      Q => sig_data_skid_reg(30),
      R => SR(0)
    );
\sig_data_skid_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(31),
      Q => sig_data_skid_reg(31),
      R => SR(0)
    );
\sig_data_skid_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(3),
      Q => sig_data_skid_reg(3),
      R => SR(0)
    );
\sig_data_skid_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(4),
      Q => sig_data_skid_reg(4),
      R => SR(0)
    );
\sig_data_skid_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(5),
      Q => sig_data_skid_reg(5),
      R => SR(0)
    );
\sig_data_skid_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(6),
      Q => sig_data_skid_reg(6),
      R => SR(0)
    );
\sig_data_skid_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(7),
      Q => sig_data_skid_reg(7),
      R => SR(0)
    );
\sig_data_skid_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(8),
      Q => sig_data_skid_reg(8),
      R => SR(0)
    );
\sig_data_skid_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => m_axi_mm2s_rdata(9),
      Q => sig_data_skid_reg(9),
      R => SR(0)
    );
sig_last_reg_out_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => sig_slast_with_stop,
      I1 => sig_s_ready_dup,
      I2 => sig_last_skid_reg,
      O => sig_last_skid_mux_out
    );
sig_last_reg_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => sig_last_skid_mux_out,
      Q => m_axis_mm2s_tlast,
      R => sig_data_reg_out0
    );
sig_last_skid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => sig_slast_with_stop,
      Q => sig_last_skid_reg,
      R => SR(0)
    );
sig_m_valid_dup_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => sig_m_valid_dup,
      R => '0'
    );
sig_m_valid_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => sig_m_valid_out,
      R => '0'
    );
sig_mvalid_stop_reg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFD0D8D0D0"
    )
        port map (
      I0 => sig_m_valid_dup,
      I1 => m_axis_mm2s_tready,
      I2 => \^sig_sstrb_stop_mask\(0),
      I3 => sig_halt_reg_dly3,
      I4 => sig_halt_reg_dly2,
      I5 => \^sig_mvalid_stop\,
      O => sig_mvalid_stop_reg_i_1_n_0
    );
sig_mvalid_stop_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_mvalid_stop_reg_i_1_n_0,
      Q => \^sig_mvalid_stop\,
      R => SR(0)
    );
sig_s_ready_dup_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_sstrb_stop_mask_reg[3]_0\,
      Q => sig_s_ready_dup,
      R => '0'
    );
sig_s_ready_out_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_sstrb_stop_mask_reg[3]_0\,
      Q => sig_s_ready_out,
      R => '0'
    );
\sig_sstrb_stop_mask_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_halt_reg_dly3_reg,
      Q => \^sig_sstrb_stop_mask\(0),
      R => SR(0)
    );
\sig_strb_reg_out_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => \sig_strb_skid_reg_reg[3]_0\(0),
      Q => m_axis_mm2s_tkeep(0),
      R => sig_data_reg_out0
    );
\sig_strb_reg_out_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => \sig_strb_skid_reg_reg[3]_0\(1),
      Q => m_axis_mm2s_tkeep(1),
      R => sig_data_reg_out0
    );
\sig_strb_reg_out_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => \sig_strb_skid_reg_reg[3]_0\(2),
      Q => m_axis_mm2s_tkeep(2),
      R => sig_data_reg_out0
    );
\sig_strb_reg_out_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \^e\(0),
      D => \sig_strb_skid_reg_reg[3]_0\(3),
      Q => m_axis_mm2s_tkeep(3),
      R => sig_data_reg_out0
    );
\sig_strb_skid_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => D(0),
      Q => Q(0),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => D(1),
      Q => Q(1),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => D(2),
      Q => Q(2),
      R => SR(0)
    );
\sig_strb_skid_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_s_ready_dup,
      D => D(3),
      Q => Q(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_mm2s_cmdsts_if is
  port (
    p_5_out : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    p_3_out : out STD_LOGIC;
    \updt_desc_reg2_reg[32]\ : out STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : out STD_LOGIC;
    p_7_out : out STD_LOGIC;
    p_2_out : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    dma_mm2s_error : out STD_LOGIC;
    p_0_in : in STD_LOGIC;
    mm2s_interr_i : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    mm2s_slverr_i : in STD_LOGIC;
    mm2s_decerr_i : in STD_LOGIC;
    sts_received_i_reg_0 : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[64]\ : in STD_LOGIC;
    sts_received_i_reg_1 : in STD_LOGIC;
    s_axis_mm2s_cmd_tready : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    m_axis_mm2s_sts_tvalid_int : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[64]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_mm2s_cmdsts_if : entity is "axi_dma_mm2s_cmdsts_if";
end axi_dma_ctrl_axi_dma_mm2s_cmdsts_if;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_mm2s_cmdsts_if is
  signal \^dma_mm2s_error\ : STD_LOGIC;
  signal mm2s_error_i_1_n_0 : STD_LOGIC;
  signal \^p_2_out\ : STD_LOGIC;
  signal \^p_3_out\ : STD_LOGIC;
  signal \^p_4_out\ : STD_LOGIC;
  signal \^p_5_out\ : STD_LOGIC;
  signal \^p_7_out\ : STD_LOGIC;
  signal \^s_axis_mm2s_cmd_tvalid_split\ : STD_LOGIC;
  signal sts_tready_i_1_n_0 : STD_LOGIC;
begin
  dma_mm2s_error <= \^dma_mm2s_error\;
  p_2_out <= \^p_2_out\;
  p_3_out <= \^p_3_out\;
  p_4_out <= \^p_4_out\;
  p_5_out <= \^p_5_out\;
  p_7_out <= \^p_7_out\;
  s_axis_mm2s_cmd_tvalid_split <= \^s_axis_mm2s_cmd_tvalid_split\;
\GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_MM2S.queue_dout_new_reg[64]\,
      Q => \^s_axis_mm2s_cmd_tvalid_split\,
      R => p_0_in
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg[63]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^s_axis_mm2s_cmd_tvalid_split\,
      I1 => s_axis_mm2s_cmd_tready,
      O => E(0)
    );
mm2s_decerr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_decerr_i,
      Q => \^p_3_out\,
      R => p_0_in
    );
mm2s_error_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFEA"
    )
        port map (
      I0 => \^p_5_out\,
      I1 => p_37_out,
      I2 => \GEN_MM2S.queue_dout_new_reg[64]_0\(0),
      I3 => \^p_4_out\,
      I4 => \^p_3_out\,
      I5 => \^dma_mm2s_error\,
      O => mm2s_error_i_1_n_0
    );
mm2s_error_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_error_i_1_n_0,
      Q => \^dma_mm2s_error\,
      R => p_0_in
    );
mm2s_interr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_interr_i,
      Q => \^p_5_out\,
      R => p_0_in
    );
mm2s_slverr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_slverr_i,
      Q => \^p_4_out\,
      R => p_0_in
    );
\mm2s_tag_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sts_received_i_reg_0,
      Q => \updt_desc_reg2_reg[32]\,
      R => p_0_in
    );
sts_received_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sts_received_i_reg_1,
      Q => \^p_7_out\,
      R => '0'
    );
sts_tready_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"04C4"
    )
        port map (
      I0 => \^p_7_out\,
      I1 => mm2s_scndry_resetn,
      I2 => \^p_2_out\,
      I3 => m_axis_mm2s_sts_tvalid_int,
      O => sts_tready_i_1_n_0
    );
sts_tready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sts_tready_i_1_n_0,
      Q => \^p_2_out\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_mm2s_sg_if is
  port (
    p_17_out : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\ : out STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[90]\ : out STD_LOGIC;
    queue_rden_new : out STD_LOGIC;
    sts_received_i_reg : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[31]\ : out STD_LOGIC;
    \ftch_cs_reg[0]\ : out STD_LOGIC;
    all_is_idle_d1_reg : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    p_0_in : in STD_LOGIC;
    sts_received_i_reg_0 : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg\ : in STD_LOGIC;
    packet_in_progress_reg_0 : in STD_LOGIC;
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_stop_i : in STD_LOGIC;
    \FSM_sequential_mm2s_cs_reg[1]\ : in STD_LOGIC;
    ch1_ftch_queue_empty : in STD_LOGIC;
    mm2s_halt : in STD_LOGIC;
    m_axis_mm2s_sts_tvalid_int : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    sts_queue_full : in STD_LOGIC;
    ptr_queue_full : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[90]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \mm2s_tag_reg[0]\ : in STD_LOGIC;
    p_3_out : in STD_LOGIC;
    p_4_out : in STD_LOGIC;
    p_5_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_mm2s_sg_if : entity is "axi_dma_mm2s_sg_if";
end axi_dma_ctrl_axi_dma_mm2s_sg_if;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_mm2s_sg_if is
  signal \^gen_mm2s.queue_dout_new_reg[90]\ : STD_LOGIC;
  signal \^gen_q_for_sync.mm2s_channel.ptr_queue_dout_reg[6]\ : STD_LOGIC;
  signal \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\ : STD_LOGIC;
  signal \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\ : STD_LOGIC;
  signal desc_update_done_i_1_n_0 : STD_LOGIC;
  signal sts_received_d1 : STD_LOGIC;
  signal \updt_desc_reg2[31]_i_1_n_0\ : STD_LOGIC;
  signal \updt_desc_reg2[32]_i_1_n_0\ : STD_LOGIC;
  signal updt_sts_i_1_n_0 : STD_LOGIC;
  signal updt_sts_i_2_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of desc_update_done_i_1 : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \ftch_cs[0]_i_5\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \i__i_5\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of updt_sts_i_2 : label is "soft_lutpair112";
begin
  \GEN_MM2S.queue_dout_new_reg[90]\ <= \^gen_mm2s.queue_dout_new_reg[90]\;
  \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\ <= \^gen_q_for_sync.mm2s_channel.ptr_queue_dout_reg[6]\;
  \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\ <= \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\;
  \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[31]\ <= \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\;
\GEN_MM2S.queue_dout_new[90]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000540000"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.ptr_queue_dout_reg[6]\,
      I1 => \^gen_mm2s.queue_dout_new_reg[90]\,
      I2 => mm2s_dmacr(0),
      I3 => mm2s_stop_i,
      I4 => \FSM_sequential_mm2s_cs_reg[1]\,
      I5 => ch1_ftch_queue_empty,
      O => queue_rden_new
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.ptr_queue_dout_reg[6]\,
      I1 => ptr_queue_full,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]_0\(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout[32]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\,
      I1 => sts_queue_full,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]_0\(0)
    );
\GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_MM2S.queue_dout_valid_reg\,
      Q => \^gen_q_for_sync.mm2s_channel.ptr_queue_dout_reg[6]\,
      R => '0'
    );
\GEN_UPDT_FOR_QUEUE.sts_received_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sts_received_i_reg_0,
      Q => sts_received_d1,
      R => p_0_in
    );
desc_update_done_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\,
      I1 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\,
      I2 => sts_queue_full,
      O => desc_update_done_i_1_n_0
    );
desc_update_done_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => desc_update_done_i_1_n_0,
      Q => p_17_out,
      R => p_0_in
    );
\ftch_cs[0]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^gen_mm2s.queue_dout_new_reg[90]\,
      I1 => mm2s_dmacr(0),
      O => \ftch_cs_reg[0]\
    );
\i__i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F1"
    )
        port map (
      I0 => \^gen_mm2s.queue_dout_new_reg[90]\,
      I1 => mm2s_dmacr(0),
      I2 => ch1_ftch_queue_empty,
      O => all_is_idle_d1_reg
    );
packet_in_progress_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => packet_in_progress_reg_0,
      Q => \^gen_mm2s.queue_dout_new_reg[90]\,
      R => '0'
    );
sts_received_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E0E0E0E000E0E0E0"
    )
        port map (
      I0 => sts_received_i_reg_0,
      I1 => m_axis_mm2s_sts_tvalid_int,
      I2 => mm2s_scndry_resetn,
      I3 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\,
      I4 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\,
      I5 => sts_queue_full,
      O => sts_received_i_reg
    );
\updt_desc_reg0_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(4),
      Q => Q(4),
      R => p_0_in
    );
\updt_desc_reg0_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(5),
      Q => Q(5),
      R => p_0_in
    );
\updt_desc_reg0_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(6),
      Q => Q(6),
      R => p_0_in
    );
\updt_desc_reg0_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(7),
      Q => Q(7),
      R => p_0_in
    );
\updt_desc_reg0_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(8),
      Q => Q(8),
      R => p_0_in
    );
\updt_desc_reg0_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(9),
      Q => Q(9),
      R => p_0_in
    );
\updt_desc_reg0_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(10),
      Q => Q(10),
      R => p_0_in
    );
\updt_desc_reg0_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(11),
      Q => Q(11),
      R => p_0_in
    );
\updt_desc_reg0_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(12),
      Q => Q(12),
      R => p_0_in
    );
\updt_desc_reg0_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(13),
      Q => Q(13),
      R => p_0_in
    );
\updt_desc_reg0_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(14),
      Q => Q(14),
      R => p_0_in
    );
\updt_desc_reg0_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(15),
      Q => Q(15),
      R => p_0_in
    );
\updt_desc_reg0_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(16),
      Q => Q(16),
      R => p_0_in
    );
\updt_desc_reg0_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(17),
      Q => Q(17),
      R => p_0_in
    );
\updt_desc_reg0_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(18),
      Q => Q(18),
      R => p_0_in
    );
\updt_desc_reg0_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(19),
      Q => Q(19),
      R => p_0_in
    );
\updt_desc_reg0_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(20),
      Q => Q(20),
      R => p_0_in
    );
\updt_desc_reg0_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(21),
      Q => Q(21),
      R => p_0_in
    );
\updt_desc_reg0_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(22),
      Q => Q(22),
      R => p_0_in
    );
\updt_desc_reg0_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(23),
      Q => Q(23),
      R => p_0_in
    );
\updt_desc_reg0_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(24),
      Q => Q(24),
      R => p_0_in
    );
\updt_desc_reg0_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(25),
      Q => Q(25),
      R => p_0_in
    );
\updt_desc_reg0_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(0),
      Q => Q(0),
      R => p_0_in
    );
\updt_desc_reg0_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(1),
      Q => Q(1),
      R => p_0_in
    );
\updt_desc_reg0_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(2),
      Q => Q(2),
      R => p_0_in
    );
\updt_desc_reg0_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_37_out,
      D => \GEN_MM2S.queue_dout_new_reg[90]_0\(3),
      Q => Q(3),
      R => p_0_in
    );
\updt_desc_reg2[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF001000"
    )
        port map (
      I0 => mm2s_halt,
      I1 => sts_received_d1,
      I2 => sts_received_i_reg_0,
      I3 => mm2s_scndry_resetn,
      I4 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\,
      O => \updt_desc_reg2[31]_i_1_n_0\
    );
\updt_desc_reg2[32]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => mm2s_halt,
      I1 => sts_received_d1,
      I2 => sts_received_i_reg_0,
      O => \updt_desc_reg2[32]_i_1_n_0\
    );
\updt_desc_reg2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \updt_desc_reg2[32]_i_1_n_0\,
      D => p_5_out,
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(0),
      R => p_0_in
    );
\updt_desc_reg2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \updt_desc_reg2[32]_i_1_n_0\,
      D => p_4_out,
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(1),
      R => p_0_in
    );
\updt_desc_reg2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \updt_desc_reg2[32]_i_1_n_0\,
      D => p_3_out,
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(2),
      R => p_0_in
    );
\updt_desc_reg2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \updt_desc_reg2[31]_i_1_n_0\,
      Q => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\,
      R => '0'
    );
\updt_desc_reg2_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \updt_desc_reg2[32]_i_1_n_0\,
      D => \mm2s_tag_reg[0]\,
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(3),
      R => p_0_in
    );
updt_sts_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000AAAE"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\,
      I1 => sts_received_i_reg_0,
      I2 => sts_received_d1,
      I3 => mm2s_halt,
      I4 => updt_sts_i_2_n_0,
      O => updt_sts_i_1_n_0
    );
updt_sts_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"40FF"
    )
        port map (
      I0 => sts_queue_full,
      I1 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\,
      I2 => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[31]\,
      I3 => mm2s_scndry_resetn,
      O => updt_sts_i_2_n_0
    );
updt_sts_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_sts_i_1_n_0,
      Q => \^gen_q_for_sync.mm2s_channel.sts_queue_dout_reg[28]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_mm2s_sm is
  port (
    mm2s_all_idle : out STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[90]\ : out STD_LOGIC;
    p_0_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    p_54_out : in STD_LOGIC;
    mm2s_ns0 : in STD_LOGIC;
    p_60_out : in STD_LOGIC;
    p_17_out : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    mm2s_stop_i : in STD_LOGIC;
    \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ : in STD_LOGIC;
    mm2s_ns12_out : in STD_LOGIC;
    \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_mm2s_sm : entity is "axi_dma_mm2s_sm";
end axi_dma_ctrl_axi_dma_mm2s_sm;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_mm2s_sm is
  signal \/i___0/i__n_0\ : STD_LOGIC;
  signal \/i__n_0\ : STD_LOGIC;
  signal \FSM_sequential_mm2s_cs[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_mm2s_cs[1]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[0]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[1]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[2]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[3]_i_1_n_0\ : STD_LOGIC;
  signal cmnds_queued_shift : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal mm2s_cs : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of mm2s_cs : signal is "yes";
  signal write_cmnd_cmb : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_mm2s_cs_reg[0]\ : label is "idle:00,fetch_descriptor:01,wait_status:10,iSTATE:10";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_mm2s_cs_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_mm2s_cs_reg[1]\ : label is "idle:00,fetch_descriptor:01,wait_status:10,iSTATE:10";
  attribute KEEP of \FSM_sequential_mm2s_cs_reg[1]\ : label is "yes";
begin
\/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFEFEFEFEAEFEFE"
    )
        port map (
      I0 => mm2s_cs(1),
      I1 => mm2s_ns0,
      I2 => mm2s_cs(0),
      I3 => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\,
      I4 => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\,
      I5 => mm2s_ns12_out,
      O => \/i__n_0\
    );
\/i___0/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000010101000"
    )
        port map (
      I0 => mm2s_cs(1),
      I1 => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\,
      I2 => mm2s_cs(0),
      I3 => p_16_out,
      I4 => mm2s_dmacr(0),
      I5 => mm2s_stop_i,
      O => \/i___0/i__n_0\
    );
\FSM_sequential_mm2s_cs[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1055FFFF10550000"
    )
        port map (
      I0 => mm2s_cs(1),
      I1 => mm2s_ns12_out,
      I2 => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\,
      I3 => mm2s_cs(0),
      I4 => \/i__n_0\,
      I5 => mm2s_cs(0),
      O => \FSM_sequential_mm2s_cs[0]_i_1_n_0\
    );
\FSM_sequential_mm2s_cs[1]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\,
      I1 => \/i___0/i__n_0\,
      I2 => \/i__n_0\,
      I3 => mm2s_cs(1),
      O => \FSM_sequential_mm2s_cs[1]_i_2_n_0\
    );
\FSM_sequential_mm2s_cs_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \FSM_sequential_mm2s_cs[0]_i_1_n_0\,
      Q => mm2s_cs(0),
      R => p_0_in
    );
\FSM_sequential_mm2s_cs_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \FSM_sequential_mm2s_cs[1]_i_2_n_0\,
      Q => mm2s_cs(1),
      R => p_0_in
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000020000"
    )
        port map (
      I0 => p_54_out,
      I1 => mm2s_cs(0),
      I2 => mm2s_cs(1),
      I3 => mm2s_ns0,
      I4 => p_60_out,
      I5 => cmnds_queued_shift(0),
      O => mm2s_all_idle
    );
\GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => write_cmnd_cmb,
      Q => \GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg_n_0\,
      R => p_0_in
    );
\GEN_MM2S.queue_dout_new[90]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => mm2s_cs(1),
      I1 => mm2s_cs(0),
      O => \GEN_MM2S.queue_dout_new_reg[90]\
    );
\QUEUE_COUNT.cmnds_queued_shift[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000BE8E0000"
    )
        port map (
      I0 => cmnds_queued_shift(0),
      I1 => \GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg_n_0\,
      I2 => p_17_out,
      I3 => cmnds_queued_shift(1),
      I4 => mm2s_scndry_resetn,
      I5 => mm2s_stop_i,
      O => \QUEUE_COUNT.cmnds_queued_shift[0]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000BEB28E82"
    )
        port map (
      I0 => cmnds_queued_shift(1),
      I1 => p_17_out,
      I2 => \GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg_n_0\,
      I3 => cmnds_queued_shift(2),
      I4 => cmnds_queued_shift(0),
      I5 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      O => \QUEUE_COUNT.cmnds_queued_shift[1]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000BEB28E82"
    )
        port map (
      I0 => cmnds_queued_shift(2),
      I1 => p_17_out,
      I2 => \GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg_n_0\,
      I3 => cmnds_queued_shift(3),
      I4 => cmnds_queued_shift(1),
      I5 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      O => \QUEUE_COUNT.cmnds_queued_shift[2]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000B2820000"
    )
        port map (
      I0 => cmnds_queued_shift(3),
      I1 => p_17_out,
      I2 => \GEN_CMD_BTT_LESS_23.mm2s_cmnd_wr_i_reg_n_0\,
      I3 => cmnds_queued_shift(2),
      I4 => mm2s_scndry_resetn,
      I5 => mm2s_stop_i,
      O => \QUEUE_COUNT.cmnds_queued_shift[3]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[0]_i_1_n_0\,
      Q => cmnds_queued_shift(0),
      R => '0'
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[1]_i_1_n_0\,
      Q => cmnds_queued_shift(1),
      R => '0'
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[2]_i_1_n_0\,
      Q => cmnds_queued_shift(2),
      R => '0'
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[3]_i_1_n_0\,
      Q => cmnds_queued_shift(3),
      R => '0'
    );
\__0/i_\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => mm2s_cs(1),
      I1 => mm2s_cs(0),
      I2 => mm2s_ns12_out,
      I3 => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\,
      I4 => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\,
      O => write_cmnd_cmb
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_mm2s_sts_mngr is
  port (
    mm2s_halted_clr : out STD_LOGIC;
    mm2s_halted_set : out STD_LOGIC;
    idle_reg : out STD_LOGIC;
    p_0_in : in STD_LOGIC;
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    mm2s_halted_set0 : in STD_LOGIC;
    mm2s_all_idle : in STD_LOGIC;
    idle_reg_0 : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_mm2s_sts_mngr : entity is "axi_dma_mm2s_sts_mngr";
end axi_dma_ctrl_axi_dma_mm2s_sts_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_mm2s_sts_mngr is
  signal all_is_idle_d1 : STD_LOGIC;
  signal \^mm2s_halted_set\ : STD_LOGIC;
begin
  mm2s_halted_set <= \^mm2s_halted_set\;
all_is_idle_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_all_idle,
      Q => all_is_idle_d1,
      R => p_0_in
    );
idle_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000DD400000"
    )
        port map (
      I0 => all_is_idle_d1,
      I1 => mm2s_all_idle,
      I2 => mm2s_dmacr(0),
      I3 => idle_reg_0,
      I4 => m_axi_sg_aresetn,
      I5 => \^mm2s_halted_set\,
      O => idle_reg
    );
mm2s_halted_clr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_dmacr(0),
      Q => mm2s_halted_clr,
      R => p_0_in
    );
mm2s_halted_set_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_halted_set0,
      Q => \^mm2s_halted_set\,
      R => p_0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_register is
  port (
    mm2s_halted_clr_reg : out STD_LOGIC;
    \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\ : out STD_LOGIC;
    mm2s_irqthresh_wren : out STD_LOGIC;
    mm2s_irqdelay_wren : out STD_LOGIC;
    sg_updt_error_reg_0 : out STD_LOGIC;
    sg_updt_error_reg_1 : out STD_LOGIC;
    sg_updt_error_reg_2 : out STD_LOGIC;
    error_d1_reg_0 : out STD_LOGIC;
    error_d1_reg_1 : out STD_LOGIC;
    error_d1_reg_2 : out STD_LOGIC;
    p_14_out : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ : out STD_LOGIC;
    idle_reg_0 : out STD_LOGIC;
    prmry_in : out STD_LOGIC;
    ioc_irq_reg_0 : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    irqdelay_wren_reg_0 : out STD_LOGIC_VECTOR ( 12 downto 0 );
    mm2s_dmacr : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\ : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\ : out STD_LOGIC;
    p_7_out : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg_0\ : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ : out STD_LOGIC;
    \GEN_MM2S.reg1_reg[90]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_0\ : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\ : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\ : out STD_LOGIC;
    S : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    mm2s_halted_set0 : out STD_LOGIC;
    mm2s_ns12_out : out STD_LOGIC;
    mm2s_ns0 : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    soft_reset_re_reg : out STD_LOGIC;
    \QUEUE_COUNT.cmnds_queued_shift_reg[2]\ : out STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    dmacr_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_UPDATE.ch1_dma_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\ : in STD_LOGIC;
    sg_ftch_error0 : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    all_is_idle_d1_reg : in STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\ : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_1\ : in STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 3 downto 0 );
    scndry_vect_out : in STD_LOGIC_VECTOR ( 28 downto 0 );
    p_74_out : in STD_LOGIC;
    p_52_out : in STD_LOGIC;
    p_51_out : in STD_LOGIC;
    p_50_out : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[90]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    p_45_out : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    irqdelay_wren_reg_1 : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_0\ : in STD_LOGIC;
    \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ : in STD_LOGIC;
    ch1_sg_idle : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[5]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\ : in STD_LOGIC_VECTOR ( 23 downto 0 );
    mm2s_halt_cmplt : in STD_LOGIC;
    mm2s_all_idle : in STD_LOGIC;
    s2mm_error : in STD_LOGIC;
    mm2s_error : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    packet_in_progress_reg : in STD_LOGIC;
    soft_reset_d1 : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_register : entity is "axi_dma_register";
end axi_dma_ctrl_axi_dma_register;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_register is
  signal \^gen_async_read.lite_rdata_cdc_from_reg[31]\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_desc_reg_for_sg.error_pointer_set_reg_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_6_n_0\ : STD_LOGIC;
  signal \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\ : STD_LOGIC;
  signal \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg_0\ : STD_LOGIC;
  signal \^gen_mm2s_dma_control.mm2s_stop_reg\ : STD_LOGIC;
  signal \^gen_mm2s_dma_control.mm2s_stop_reg_0\ : STD_LOGIC;
  signal \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \^q\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal curdesc_lsb_i : STD_LOGIC;
  signal dmacr_i_reg0 : STD_LOGIC;
  signal \dmacr_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \dmacr_i_reg_n_0_[14]\ : STD_LOGIC;
  signal err_irq_i_1_n_0 : STD_LOGIC;
  signal err_irq_reg_n_0 : STD_LOGIC;
  signal error_d1 : STD_LOGIC;
  signal \^error_d1_reg_0\ : STD_LOGIC;
  signal \^error_d1_reg_1\ : STD_LOGIC;
  signal \^error_d1_reg_2\ : STD_LOGIC;
  signal error_pointer_set : STD_LOGIC;
  signal introut_i_1_n_0 : STD_LOGIC;
  signal introut_i_2_n_0 : STD_LOGIC;
  signal \^ioc_irq_reg_0\ : STD_LOGIC;
  signal irqdelay_wren0 : STD_LOGIC;
  signal irqdelay_wren_i_2_n_0 : STD_LOGIC;
  signal irqdelay_wren_i_3_n_0 : STD_LOGIC;
  signal irqdelay_wren_i_4_n_0 : STD_LOGIC;
  signal irqdelay_wren_i_5_n_0 : STD_LOGIC;
  signal \^irqdelay_wren_reg_0\ : STD_LOGIC_VECTOR ( 12 downto 0 );
  signal irqthresh_wren0 : STD_LOGIC;
  signal irqthresh_wren_i_2_n_0 : STD_LOGIC;
  signal irqthresh_wren_i_3_n_0 : STD_LOGIC;
  signal irqthresh_wren_i_4_n_0 : STD_LOGIC;
  signal irqthresh_wren_i_5_n_0 : STD_LOGIC;
  signal \^mm2s_dmacr\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^mm2s_halted_clr_reg\ : STD_LOGIC;
  signal \^mm2s_irqthresh_wren\ : STD_LOGIC;
  signal \^p_14_out\ : STD_LOGIC;
  signal p_1_in : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal sg_ftch_error : STD_LOGIC;
  signal sg_updt_error : STD_LOGIC;
  signal sg_updt_error0 : STD_LOGIC;
  signal \^sg_updt_error_reg_0\ : STD_LOGIC;
  signal \^sg_updt_error_reg_1\ : STD_LOGIC;
  signal \^sg_updt_error_reg_2\ : STD_LOGIC;
  signal tailpntr_updated_d1 : STD_LOGIC;
  signal tailpntr_updated_d2 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_MM2S.reg1[90]_i_1\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \QUEUE_COUNT.cmnds_queued_shift[2]_i_2\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \i__i_1__0\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of soft_reset_re_i_1 : label is "soft_lutpair134";
begin
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(25 downto 0) <= \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25 downto 0);
  \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ <= \^gen_desc_reg_for_sg.error_pointer_set_reg_0\;
  \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ <= \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\;
  \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg_0\ <= \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg_0\;
  \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\ <= \^gen_mm2s_dma_control.mm2s_stop_reg\;
  \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_0\ <= \^gen_mm2s_dma_control.mm2s_stop_reg_0\;
  \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(25 downto 0) <= \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(25 downto 0);
  Q(0) <= \^q\(0);
  error_d1_reg_0 <= \^error_d1_reg_0\;
  error_d1_reg_1 <= \^error_d1_reg_1\;
  error_d1_reg_2 <= \^error_d1_reg_2\;
  ioc_irq_reg_0 <= \^ioc_irq_reg_0\;
  irqdelay_wren_reg_0(12 downto 0) <= \^irqdelay_wren_reg_0\(12 downto 0);
  mm2s_dmacr(4 downto 0) <= \^mm2s_dmacr\(4 downto 0);
  mm2s_halted_clr_reg <= \^mm2s_halted_clr_reg\;
  mm2s_irqthresh_wren <= \^mm2s_irqthresh_wren\;
  p_14_out <= \^p_14_out\;
  sg_updt_error_reg_0 <= \^sg_updt_error_reg_0\;
  sg_updt_error_reg_1 <= \^sg_updt_error_reg_1\;
  sg_updt_error_reg_2 <= \^sg_updt_error_reg_2\;
\GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg_n_0_[12]\,
      I1 => \^ioc_irq_reg_0\,
      I2 => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(6),
      I3 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1),
      I4 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0),
      I5 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\,
      I2 => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(7),
      I3 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1),
      I4 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0),
      I5 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg_n_0_[14]\,
      I1 => err_irq_reg_n_0,
      I2 => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(8),
      I3 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1),
      I4 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0),
      I5 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\
    );
\GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\,
      Q => tailpntr_updated_d1,
      R => '0'
    );
\GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => tailpntr_updated_d1,
      Q => tailpntr_updated_d2,
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(7),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(4),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(4),
      O => p_1_in(4)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(8),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(5),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(5),
      O => p_1_in(5)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(9),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(6),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(6),
      O => p_1_in(6)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(10),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(7),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(7),
      O => p_1_in(7)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(11),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(8),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(8),
      O => p_1_in(8)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(12),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(9),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(9),
      O => p_1_in(9)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(13),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(10),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(10),
      O => p_1_in(10)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(14),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(11),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(11),
      O => p_1_in(11)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(15),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(12),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(12),
      O => p_1_in(12)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(16),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(13),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(13),
      O => p_1_in(13)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(17),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(14),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(14),
      O => p_1_in(14)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(18),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(15),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(15),
      O => p_1_in(15)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(19),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(16),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(16),
      O => p_1_in(16)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(20),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(17),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(17),
      O => p_1_in(17)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(21),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(18),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(18),
      O => p_1_in(18)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(22),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(19),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(19),
      O => p_1_in(19)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(23),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(20),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(20),
      O => p_1_in(20)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(24),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(21),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(21),
      O => p_1_in(21)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(25),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(22),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(22),
      O => p_1_in(22)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(26),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(23),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(23),
      O => p_1_in(23)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(27),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(24),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(24),
      O => p_1_in(24)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0F0F0F0F080808"
    )
        port map (
      I0 => \^gen_desc_reg_for_sg.error_pointer_set_reg_0\,
      I1 => p_2_out(2),
      I2 => error_pointer_set,
      I3 => \^mm2s_halted_clr_reg\,
      I4 => p_37_out,
      I5 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      O => curdesc_lsb_i
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(28),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(25),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(25),
      O => p_1_in(25)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(3),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(0),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(0),
      O => p_1_in(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(4),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(1),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(1),
      O => p_1_in(1)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(5),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(2),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(2),
      O => p_1_in(2)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(6),
      I1 => p_37_out,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => \GEN_MM2S.queue_dout_new_reg[90]\(3),
      I4 => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      I5 => \ftch_error_addr_reg[31]\(3),
      O => p_1_in(3)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(4),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(4),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(5),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(5),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(6),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(6),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(7),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(7),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(8),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(8),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(9),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(9),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(10),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(10),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(11),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(11),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(12),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(12),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(13),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(13),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(14),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(14),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(15),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(15),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(16),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(16),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(17),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(17),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(18),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(18),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(19),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(19),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(20),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(20),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(21),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(21),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(22),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(22),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(23),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(23),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(24),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(24),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(25),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(25),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(0),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(0),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(1),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(1),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(2),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(2),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(3),
      Q => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(3),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.error_pointer_set_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sg_ftch_error,
      I1 => sg_updt_error,
      O => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\
    );
\GEN_DESC_REG_FOR_SG.error_pointer_set_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => \GEN_DESC_REG_FOR_SG.error_pointer_set_i_1_n_0\,
      Q => error_pointer_set,
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(7),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(4),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(8),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(5),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(9),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(6),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(10),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(7),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(11),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(8),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(12),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(9),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(13),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(10),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(14),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(11),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(15),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(12),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(16),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(13),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(17),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(14),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(18),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(15),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(19),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(16),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(20),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(17),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(21),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(18),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(22),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(19),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(23),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(20),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(24),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(21),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(25),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(22),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(26),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(23),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(27),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(24),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(28),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(3),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(0),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(4),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(1),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(5),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(2),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(6),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(3),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFBFFFFFFFFFF"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\,
      I1 => \^mm2s_halted_clr_reg\,
      I2 => p_45_out,
      I3 => m_axi_sg_aresetn,
      I4 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg_0\,
      I5 => irqdelay_wren_reg_1,
      O => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(10),
      I1 => \^mm2s_dmacr\(2),
      I2 => \^irqdelay_wren_reg_0\(8),
      I3 => \^irqdelay_wren_reg_0\(9),
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_6_n_0\,
      O => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^mm2s_dmacr\(4),
      I1 => \^mm2s_dmacr\(3),
      I2 => \^irqdelay_wren_reg_0\(11),
      I3 => \^irqdelay_wren_reg_0\(12),
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_6_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000540000"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg_0\,
      I1 => mm2s_scndry_resetn,
      I2 => s2mm_scndry_resetn,
      I3 => p_45_out,
      I4 => \^mm2s_halted_clr_reg\,
      I5 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\,
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^mm2s_dmacr\(3),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[5]\(1),
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[5]\(2),
      I3 => \^mm2s_dmacr\(4),
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[5]\(0),
      I5 => \^mm2s_dmacr\(2),
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[1]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => \^mm2s_irqthresh_wren\,
      I1 => \^q\(0),
      I2 => p_45_out,
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\
    );
\GEN_MM2S.reg1[90]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ABABABFF"
    )
        port map (
      I0 => \^gen_mm2s_dma_control.mm2s_stop_reg_0\,
      I1 => \^mm2s_halted_clr_reg\,
      I2 => p_16_out,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      O => \GEN_MM2S.reg1_reg[90]\(0)
    );
\GEN_PNTR_FOR_CH1.ch1_sg_idle_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DFDFDF55FFFFFFFF"
    )
        port map (
      I0 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I1 => tailpntr_updated_d2,
      I2 => tailpntr_updated_d1,
      I3 => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\,
      I4 => ch1_sg_idle,
      I5 => \^mm2s_halted_clr_reg\,
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\
    );
\QUEUE_COUNT.cmnds_queued_shift[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^gen_mm2s_dma_control.mm2s_stop_reg_0\,
      I1 => mm2s_scndry_resetn,
      O => \QUEUE_COUNT.cmnds_queued_shift_reg[2]\
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg[23]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^mm2s_dmacr\(0),
      O => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\(0)
    );
dly_irq_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\,
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\,
      R => SR(0)
    );
dma_decerr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\,
      Q => \^sg_updt_error_reg_2\,
      R => SR(0)
    );
dma_interr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_dma_interr_set_reg\,
      Q => \^sg_updt_error_reg_0\,
      R => SR(0)
    );
dma_slverr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\,
      Q => \^sg_updt_error_reg_1\,
      R => SR(0)
    );
\dmacr_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000044400040"
    )
        port map (
      I0 => \^p_14_out\,
      I1 => \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_1\,
      I2 => \^mm2s_halted_clr_reg\,
      I3 => p_2_out(0),
      I4 => scndry_vect_out(0),
      I5 => p_74_out,
      O => dmacr_i_reg0
    );
\dmacr_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dmacr_i_reg0,
      Q => \^mm2s_halted_clr_reg\,
      R => '0'
    );
\dmacr_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(9),
      Q => \dmacr_i_reg_n_0_[12]\,
      R => SR(0)
    );
\dmacr_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(10),
      Q => \^q\(0),
      R => SR(0)
    );
\dmacr_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(11),
      Q => \dmacr_i_reg_n_0_[14]\,
      R => SR(0)
    );
\dmacr_i_reg[16]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(13),
      Q => \^irqdelay_wren_reg_0\(0),
      S => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(14),
      Q => \^irqdelay_wren_reg_0\(1),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(15),
      Q => \^irqdelay_wren_reg_0\(2),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(16),
      Q => \^irqdelay_wren_reg_0\(3),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(17),
      Q => \^irqdelay_wren_reg_0\(4),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(18),
      Q => \^irqdelay_wren_reg_0\(5),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(19),
      Q => \^irqdelay_wren_reg_0\(6),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(20),
      Q => \^irqdelay_wren_reg_0\(7),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(21),
      Q => \^irqdelay_wren_reg_0\(8),
      R => SR(0)
    );
\dmacr_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(22),
      Q => \^irqdelay_wren_reg_0\(9),
      R => SR(0)
    );
\dmacr_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(23),
      Q => \^irqdelay_wren_reg_0\(10),
      R => SR(0)
    );
\dmacr_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(24),
      Q => \^mm2s_dmacr\(2),
      R => SR(0)
    );
\dmacr_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(25),
      Q => \^mm2s_dmacr\(3),
      R => SR(0)
    );
\dmacr_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(26),
      Q => \^mm2s_dmacr\(4),
      R => SR(0)
    );
\dmacr_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dmacr_i(0),
      Q => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      R => '0'
    );
\dmacr_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(27),
      Q => \^irqdelay_wren_reg_0\(11),
      R => SR(0)
    );
\dmacr_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(28),
      Q => \^irqdelay_wren_reg_0\(12),
      R => SR(0)
    );
\dmacr_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(1),
      Q => \^mm2s_dmacr\(0),
      R => SR(0)
    );
\dmacr_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(2),
      Q => \^mm2s_dmacr\(1),
      R => SR(0)
    );
err_irq_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5DFF0C0C"
    )
        port map (
      I0 => scndry_vect_out(11),
      I1 => \^p_14_out\,
      I2 => error_d1,
      I3 => p_2_out(1),
      I4 => err_irq_reg_n_0,
      O => err_irq_i_1_n_0
    );
err_irq_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => err_irq_i_1_n_0,
      Q => err_irq_reg_n_0,
      R => SR(0)
    );
error_d1_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^sg_updt_error_reg_2\,
      I1 => \^error_d1_reg_2\,
      I2 => \^sg_updt_error_reg_1\,
      I3 => \^sg_updt_error_reg_0\,
      I4 => \^error_d1_reg_1\,
      I5 => \^error_d1_reg_0\,
      O => \^p_14_out\
    );
error_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \^p_14_out\,
      Q => error_d1,
      R => SR(0)
    );
halted_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      Q => \^gen_desc_reg_for_sg.error_pointer_set_reg_0\,
      R => '0'
    );
\i__i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      I1 => \dmacr_i_reg[2]_0\,
      I2 => mm2s_error,
      I3 => s2mm_error,
      I4 => s_axis_mm2s_updtptr_tvalid,
      I5 => packet_in_progress_reg,
      O => mm2s_ns0
    );
\i__i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      I1 => \dmacr_i_reg[2]_0\,
      I2 => mm2s_error,
      I3 => s2mm_error,
      O => \^gen_mm2s_dma_control.mm2s_stop_reg_0\
    );
\i__i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF1"
    )
        port map (
      I0 => p_16_out,
      I1 => \^mm2s_halted_clr_reg\,
      I2 => s2mm_error,
      I3 => mm2s_error,
      I4 => \dmacr_i_reg[2]_0\,
      I5 => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      O => mm2s_ns12_out
    );
idle_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => all_is_idle_d1_reg,
      Q => idle_reg_0,
      R => '0'
    );
introut_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000F8F8F800"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_dly_irq_set_i_reg\,
      I2 => introut_i_2_n_0,
      I3 => s2mm_scndry_resetn,
      I4 => mm2s_scndry_resetn,
      I5 => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      O => introut_i_1_n_0
    );
introut_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \dmacr_i_reg_n_0_[14]\,
      I1 => err_irq_reg_n_0,
      I2 => \dmacr_i_reg_n_0_[12]\,
      I3 => \^ioc_irq_reg_0\,
      O => introut_i_2_n_0
    );
introut_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => introut_i_1_n_0,
      Q => prmry_in,
      R => '0'
    );
ioc_irq_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\,
      Q => \^ioc_irq_reg_0\,
      R => SR(0)
    );
irqdelay_wren_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA8"
    )
        port map (
      I0 => p_2_out(0),
      I1 => irqdelay_wren_i_2_n_0,
      I2 => irqdelay_wren_i_3_n_0,
      I3 => irqdelay_wren_i_4_n_0,
      I4 => irqdelay_wren_i_5_n_0,
      O => irqdelay_wren0
    );
irqdelay_wren_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(9),
      I1 => scndry_vect_out(22),
      I2 => \^irqdelay_wren_reg_0\(8),
      I3 => scndry_vect_out(21),
      O => irqdelay_wren_i_2_n_0
    );
irqdelay_wren_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(12),
      I1 => scndry_vect_out(28),
      I2 => \^irqdelay_wren_reg_0\(11),
      I3 => scndry_vect_out(27),
      O => irqdelay_wren_i_3_n_0
    );
irqdelay_wren_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^mm2s_dmacr\(4),
      I1 => scndry_vect_out(26),
      I2 => \^mm2s_dmacr\(3),
      I3 => scndry_vect_out(25),
      O => irqdelay_wren_i_4_n_0
    );
irqdelay_wren_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^mm2s_dmacr\(2),
      I1 => scndry_vect_out(24),
      I2 => \^irqdelay_wren_reg_0\(10),
      I3 => scndry_vect_out(23),
      O => irqdelay_wren_i_5_n_0
    );
irqdelay_wren_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => irqdelay_wren0,
      Q => mm2s_irqdelay_wren,
      R => SR(0)
    );
irqthresh_wren_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA8"
    )
        port map (
      I0 => p_2_out(0),
      I1 => irqthresh_wren_i_2_n_0,
      I2 => irqthresh_wren_i_3_n_0,
      I3 => irqthresh_wren_i_4_n_0,
      I4 => irqthresh_wren_i_5_n_0,
      O => irqthresh_wren0
    );
irqthresh_wren_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(1),
      I1 => scndry_vect_out(14),
      I2 => \^irqdelay_wren_reg_0\(0),
      I3 => scndry_vect_out(13),
      O => irqthresh_wren_i_2_n_0
    );
irqthresh_wren_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(7),
      I1 => scndry_vect_out(20),
      I2 => \^irqdelay_wren_reg_0\(6),
      I3 => scndry_vect_out(19),
      O => irqthresh_wren_i_3_n_0
    );
irqthresh_wren_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(5),
      I1 => scndry_vect_out(18),
      I2 => \^irqdelay_wren_reg_0\(4),
      I3 => scndry_vect_out(17),
      O => irqthresh_wren_i_4_n_0
    );
irqthresh_wren_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(3),
      I1 => scndry_vect_out(16),
      I2 => \^irqdelay_wren_reg_0\(2),
      I3 => scndry_vect_out(15),
      O => irqthresh_wren_i_5_n_0
    );
irqthresh_wren_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => irqthresh_wren0,
      Q => \^mm2s_irqthresh_wren\,
      R => SR(0)
    );
mm2s_halted_set_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4500"
    )
        port map (
      I0 => \^mm2s_halted_clr_reg\,
      I1 => mm2s_halt_cmplt,
      I2 => \^gen_mm2s_dma_control.mm2s_stop_reg_0\,
      I3 => mm2s_all_idle,
      O => mm2s_halted_set0
    );
\p_1_out_carry__0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(17),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(17),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(15),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(15),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(16),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(16),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(3)
    );
\p_1_out_carry__0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(12),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(12),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(13),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(13),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(14),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(14),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(2)
    );
\p_1_out_carry__0_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(9),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(9),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(10),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(10),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(11),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(11),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(1)
    );
\p_1_out_carry__0_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(6),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(6),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(7),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(7),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(8),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(8),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(0)
    );
\p_1_out_carry__1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(21),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(21),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(22),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(22),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(23),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(23),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\(1)
    );
\p_1_out_carry__1_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(18),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(18),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(19),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(19),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(20),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(20),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\(0)
    );
p_1_out_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(4),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(4),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(3),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(3),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(5),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(5),
      O => S(1)
    );
p_1_out_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(2),
      I1 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(2),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(0),
      I3 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(0),
      I4 => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(1),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(1),
      O => S(0)
    );
sg_decerr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\,
      Q => \^error_d1_reg_2\,
      R => SR(0)
    );
sg_ftch_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sg_ftch_error0,
      Q => sg_ftch_error,
      R => SR(0)
    );
sg_interr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_interr_set_reg\,
      Q => \^error_d1_reg_0\,
      R => SR(0)
    );
sg_slverr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\,
      Q => \^error_d1_reg_1\,
      R => SR(0)
    );
sg_updt_error_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^sg_updt_error_reg_2\,
      I1 => p_52_out,
      I2 => \^sg_updt_error_reg_1\,
      I3 => \^sg_updt_error_reg_0\,
      I4 => p_51_out,
      I5 => p_50_out,
      O => sg_updt_error0
    );
sg_updt_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sg_updt_error0,
      Q => sg_updt_error,
      R => SR(0)
    );
soft_reset_re_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      I1 => \dmacr_i_reg[2]_0\,
      I2 => soft_reset_d1,
      O => soft_reset_re_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_register_s2mm is
  port (
    s2mm_halted_clr_reg : out STD_LOGIC;
    soft_reset_d1_reg : out STD_LOGIC;
    s2mm_irqthresh_wren : out STD_LOGIC;
    s2mm_irqdelay_wren : out STD_LOGIC;
    sg_updt_error_reg_0 : out STD_LOGIC;
    sg_updt_error_reg_1 : out STD_LOGIC;
    sg_updt_error_reg_2 : out STD_LOGIC;
    error_d1_reg_0 : out STD_LOGIC;
    error_d1_reg_1 : out STD_LOGIC;
    error_d1_reg_2 : out STD_LOGIC;
    p_74_out : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\ : out STD_LOGIC;
    prmry_in : out STD_LOGIC;
    ioc_irq_reg_0 : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    irqdelay_wren_reg_0 : out STD_LOGIC_VECTOR ( 14 downto 0 );
    s2mm_dmacr : out STD_LOGIC_VECTOR ( 2 downto 0 );
    soft_reset : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\ : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\ : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_3_out : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_1\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_2\ : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    dmacr_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH2_UPDATE.ch2_dma_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\ : in STD_LOGIC;
    sg_ftch_error0_0 : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    all_is_idle_d1_reg : in STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\ : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    p_14_out : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ : in STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 3 downto 0 );
    scndry_vect_out : in STD_LOGIC_VECTOR ( 28 downto 0 );
    p_26_out : in STD_LOGIC;
    p_25_out : in STD_LOGIC;
    p_24_out : in STD_LOGIC;
    p_10_out : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[90]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    p_8_out : in STD_LOGIC;
    p_19_out : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    irqdelay_wren_reg_1 : in STD_LOGIC;
    m_axi_sg_rdata : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[6]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\ : in STD_LOGIC_VECTOR ( 23 downto 0 );
    s2mm_error : in STD_LOGIC;
    mm2s_error : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_register_s2mm : entity is "axi_dma_register_s2mm";
end axi_dma_ctrl_axi_dma_register_s2mm;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_register_s2mm is
  signal \^gen_async_read.lite_rdata_cdc_from_reg[31]\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \^gen_desc_reg_for_sg.error_pointer_set_reg_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_6_n_0\ : STD_LOGIC;
  signal \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\ : STD_LOGIC;
  signal \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal curdesc_lsb_i : STD_LOGIC;
  signal dmacr_i_reg0 : STD_LOGIC;
  signal \dmacr_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \dmacr_i_reg_n_0_[14]\ : STD_LOGIC;
  signal \err_irq_i_1__0_n_0\ : STD_LOGIC;
  signal err_irq_reg_n_0 : STD_LOGIC;
  signal error_d1 : STD_LOGIC;
  signal \^error_d1_reg_0\ : STD_LOGIC;
  signal \^error_d1_reg_1\ : STD_LOGIC;
  signal \^error_d1_reg_2\ : STD_LOGIC;
  signal error_pointer_set : STD_LOGIC;
  signal \introut_i_1__0_n_0\ : STD_LOGIC;
  signal \introut_i_2__0_n_0\ : STD_LOGIC;
  signal \^ioc_irq_reg_0\ : STD_LOGIC;
  signal irqdelay_wren0 : STD_LOGIC;
  signal \irqdelay_wren_i_2__0_n_0\ : STD_LOGIC;
  signal \irqdelay_wren_i_3__0_n_0\ : STD_LOGIC;
  signal \irqdelay_wren_i_4__0_n_0\ : STD_LOGIC;
  signal \irqdelay_wren_i_5__0_n_0\ : STD_LOGIC;
  signal \^irqdelay_wren_reg_0\ : STD_LOGIC_VECTOR ( 14 downto 0 );
  signal irqthresh_wren0 : STD_LOGIC;
  signal \irqthresh_wren_i_2__0_n_0\ : STD_LOGIC;
  signal \irqthresh_wren_i_3__0_n_0\ : STD_LOGIC;
  signal \irqthresh_wren_i_4__0_n_0\ : STD_LOGIC;
  signal \irqthresh_wren_i_5__0_n_0\ : STD_LOGIC;
  signal p_10_out_0 : STD_LOGIC;
  signal p_1_in : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \^p_3_out\ : STD_LOGIC;
  signal \^p_74_out\ : STD_LOGIC;
  signal \^s2mm_dmacr\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^s2mm_halted_clr_reg\ : STD_LOGIC;
  signal \^s2mm_irqthresh_wren\ : STD_LOGIC;
  signal sg_ftch_error : STD_LOGIC;
  signal sg_updt_error : STD_LOGIC;
  signal sg_updt_error0 : STD_LOGIC;
  signal \^sg_updt_error_reg_0\ : STD_LOGIC;
  signal \^sg_updt_error_reg_1\ : STD_LOGIC;
  signal \^sg_updt_error_reg_2\ : STD_LOGIC;
  signal \^soft_reset_d1_reg\ : STD_LOGIC;
  signal tailpntr_updated_d1 : STD_LOGIC;
  signal tailpntr_updated_d2 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_i_1\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of soft_reset_d1_i_1 : label is "soft_lutpair135";
begin
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(25 downto 0) <= \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25 downto 0);
  \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ <= \^gen_desc_reg_for_sg.error_pointer_set_reg_0\;
  \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ <= \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\;
  \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\ <= \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg_0\;
  Q(0) <= \^q\(0);
  error_d1_reg_0 <= \^error_d1_reg_0\;
  error_d1_reg_1 <= \^error_d1_reg_1\;
  error_d1_reg_2 <= \^error_d1_reg_2\;
  ioc_irq_reg_0 <= \^ioc_irq_reg_0\;
  irqdelay_wren_reg_0(14 downto 0) <= \^irqdelay_wren_reg_0\(14 downto 0);
  p_3_out <= \^p_3_out\;
  p_74_out <= \^p_74_out\;
  s2mm_dmacr(2 downto 0) <= \^s2mm_dmacr\(2 downto 0);
  s2mm_halted_clr_reg <= \^s2mm_halted_clr_reg\;
  s2mm_irqthresh_wren <= \^s2mm_irqthresh_wren\;
  sg_updt_error_reg_0 <= \^sg_updt_error_reg_0\;
  sg_updt_error_reg_1 <= \^sg_updt_error_reg_1\;
  sg_updt_error_reg_2 <= \^sg_updt_error_reg_2\;
  soft_reset_d1_reg <= \^soft_reset_d1_reg\;
\GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]_0\(0),
      I1 => \dmacr_i_reg_n_0_[12]\,
      I2 => \^ioc_irq_reg_0\,
      I3 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1),
      I4 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]_0\(1),
      I1 => \^q\(0),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\,
      I3 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1),
      I4 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]_0\(2),
      I1 => \dmacr_i_reg_n_0_[14]\,
      I2 => err_irq_reg_n_0,
      I3 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1),
      I4 => \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\
    );
\GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\,
      Q => tailpntr_updated_d1,
      R => '0'
    );
\GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => tailpntr_updated_d1,
      Q => tailpntr_updated_d2,
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[10]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(7),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(4),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(4),
      O => p_1_in(4)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[11]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(8),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(5),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(5),
      O => p_1_in(5)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[12]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(9),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(6),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(6),
      O => p_1_in(6)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[13]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(10),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(7),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(7),
      O => p_1_in(7)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[14]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(11),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(8),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(8),
      O => p_1_in(8)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[15]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(12),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(9),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(9),
      O => p_1_in(9)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[16]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(13),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(10),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(10),
      O => p_1_in(10)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[17]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(14),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(11),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(11),
      O => p_1_in(11)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[18]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(15),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(12),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(12),
      O => p_1_in(12)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[19]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(16),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(13),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(13),
      O => p_1_in(13)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[20]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(17),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(14),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(14),
      O => p_1_in(14)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[21]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(18),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(15),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(15),
      O => p_1_in(15)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[22]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(19),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(16),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(16),
      O => p_1_in(16)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[23]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(20),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(17),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(17),
      O => p_1_in(17)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[24]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(21),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(18),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(18),
      O => p_1_in(18)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[25]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(22),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(19),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(19),
      O => p_1_in(19)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[26]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(23),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(20),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(20),
      O => p_1_in(20)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[27]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(24),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(21),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(21),
      O => p_1_in(21)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[28]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(25),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(22),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(22),
      O => p_1_in(22)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[29]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(26),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(23),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(23),
      O => p_1_in(23)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[30]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(27),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(24),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(24),
      O => p_1_in(24)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[31]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0F0F0F0F080808"
    )
        port map (
      I0 => \^gen_desc_reg_for_sg.error_pointer_set_reg_0\,
      I1 => p_2_out(2),
      I2 => error_pointer_set,
      I3 => p_10_out,
      I4 => \^s2mm_halted_clr_reg\,
      I5 => p_10_out_0,
      O => curdesc_lsb_i
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[31]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(28),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(25),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(25),
      O => p_1_in(25)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[6]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(3),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(0),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(0),
      O => p_1_in(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[7]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(4),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(1),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(1),
      O => p_1_in(1)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[8]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(5),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(2),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(2),
      O => p_1_in(2)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i[9]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEA2A0000EA2A"
    )
        port map (
      I0 => scndry_vect_out(6),
      I1 => \^s2mm_halted_clr_reg\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[90]\(3),
      I4 => p_10_out_0,
      I5 => \ftch_error_addr_reg[31]\(3),
      O => p_1_in(3)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(4),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(4),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(5),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(5),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(6),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(6),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(7),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(7),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(8),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(8),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(9),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(9),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(10),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(10),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(11),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(11),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(12),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(12),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(13),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(13),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(14),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(14),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(15),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(15),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(16),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(16),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(17),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(17),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(18),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(18),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(19),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(19),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(20),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(20),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(21),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(21),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(22),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(22),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(23),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(23),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(24),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(24),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(25),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(25),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(0),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(0),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(1),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(1),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(2),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(2),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_1_in(3),
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(3),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.error_pointer_set_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sg_ftch_error,
      I1 => sg_updt_error,
      O => p_10_out_0
    );
\GEN_DESC_REG_FOR_SG.error_pointer_set_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => curdesc_lsb_i,
      D => p_10_out_0,
      Q => error_pointer_set,
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(7),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(4),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(8),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(5),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(9),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(6),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(10),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(7),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(11),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(8),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(12),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(9),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(13),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(10),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(14),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(11),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(15),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(12),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(16),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(13),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(17),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(14),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(18),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(15),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(19),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(16),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(20),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(17),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(21),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(18),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(22),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(19),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(23),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(20),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(24),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(21),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(25),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(22),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(26),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(23),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(27),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(24),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(28),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(3),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(0),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(4),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(1),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(5),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(2),
      R => SR(0)
    );
\GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(3),
      D => scndry_vect_out(6),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(3),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEFFFFFFFFFFF"
    )
        port map (
      I0 => p_19_out,
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\,
      I2 => \^s2mm_halted_clr_reg\,
      I3 => m_axi_sg_aresetn,
      I4 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg_0\,
      I5 => irqdelay_wren_reg_1,
      O => \^p_3_out\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(10),
      I1 => \^irqdelay_wren_reg_0\(11),
      I2 => \^irqdelay_wren_reg_0\(8),
      I3 => \^irqdelay_wren_reg_0\(9),
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_6_n_0\,
      O => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^s2mm_dmacr\(2),
      I1 => \^irqdelay_wren_reg_0\(12),
      I2 => \^irqdelay_wren_reg_0\(13),
      I3 => \^irqdelay_wren_reg_0\(14),
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_6_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000005400"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg_0\,
      I1 => mm2s_scndry_resetn,
      I2 => s2mm_scndry_resetn,
      I3 => \^s2mm_halted_clr_reg\,
      I4 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\,
      I5 => p_19_out,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^p_3_out\,
      I1 => p_8_out,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6F66"
    )
        port map (
      I0 => \^s2mm_dmacr\(2),
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[6]\(0),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[6]\(1),
      I3 => \^irqdelay_wren_reg_0\(13),
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_1\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[1]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => \^s2mm_irqthresh_wren\,
      I1 => \^q\(0),
      I2 => p_19_out,
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\
    );
\GEN_MM2S.reg1[64]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => m_axi_sg_rdata(0),
      I1 => \^s2mm_dmacr\(1),
      I2 => \GEN_CH1_FETCH.ch1_active_i_reg\(0),
      I3 => mm2s_dmacr(0),
      O => D(0)
    );
\GEN_PNTR_FOR_CH2.ch2_sg_idle_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => tailpntr_updated_d1,
      I1 => tailpntr_updated_d2,
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_2\
    );
\GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFEFFFF"
    )
        port map (
      I0 => s2mm_error,
      I1 => \dmacr_i_reg[2]_0\,
      I2 => \^soft_reset_d1_reg\,
      I3 => mm2s_error,
      I4 => \^s2mm_halted_clr_reg\,
      O => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg[23]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^s2mm_dmacr\(0),
      O => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\(0)
    );
dly_irq_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\,
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\,
      R => SR(0)
    );
dma_decerr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\,
      Q => \^sg_updt_error_reg_2\,
      R => SR(0)
    );
dma_interr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_dma_interr_set_reg\,
      Q => \^sg_updt_error_reg_0\,
      R => SR(0)
    );
dma_slverr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\,
      Q => \^sg_updt_error_reg_1\,
      R => SR(0)
    );
\dmacr_i[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000044400040"
    )
        port map (
      I0 => p_14_out,
      I1 => \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\,
      I2 => \^s2mm_halted_clr_reg\,
      I3 => p_2_out(0),
      I4 => scndry_vect_out(0),
      I5 => \^p_74_out\,
      O => dmacr_i_reg0
    );
\dmacr_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dmacr_i_reg0,
      Q => \^s2mm_halted_clr_reg\,
      R => '0'
    );
\dmacr_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(9),
      Q => \dmacr_i_reg_n_0_[12]\,
      R => SR(0)
    );
\dmacr_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(10),
      Q => \^q\(0),
      R => SR(0)
    );
\dmacr_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(11),
      Q => \dmacr_i_reg_n_0_[14]\,
      R => SR(0)
    );
\dmacr_i_reg[16]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(13),
      Q => \^irqdelay_wren_reg_0\(0),
      S => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(14),
      Q => \^irqdelay_wren_reg_0\(1),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(15),
      Q => \^irqdelay_wren_reg_0\(2),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(16),
      Q => \^irqdelay_wren_reg_0\(3),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(17),
      Q => \^irqdelay_wren_reg_0\(4),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(18),
      Q => \^irqdelay_wren_reg_0\(5),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(19),
      Q => \^irqdelay_wren_reg_0\(6),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(20),
      Q => \^irqdelay_wren_reg_0\(7),
      R => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0)
    );
\dmacr_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(21),
      Q => \^irqdelay_wren_reg_0\(8),
      R => SR(0)
    );
\dmacr_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(22),
      Q => \^irqdelay_wren_reg_0\(9),
      R => SR(0)
    );
\dmacr_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(23),
      Q => \^irqdelay_wren_reg_0\(10),
      R => SR(0)
    );
\dmacr_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(24),
      Q => \^irqdelay_wren_reg_0\(11),
      R => SR(0)
    );
\dmacr_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(25),
      Q => \^irqdelay_wren_reg_0\(12),
      R => SR(0)
    );
\dmacr_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(26),
      Q => \^s2mm_dmacr\(2),
      R => SR(0)
    );
\dmacr_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dmacr_i(0),
      Q => \^soft_reset_d1_reg\,
      R => '0'
    );
\dmacr_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(27),
      Q => \^irqdelay_wren_reg_0\(13),
      R => SR(0)
    );
\dmacr_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(28),
      Q => \^irqdelay_wren_reg_0\(14),
      R => SR(0)
    );
\dmacr_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(1),
      Q => \^s2mm_dmacr\(0),
      R => SR(0)
    );
\dmacr_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_2_out(0),
      D => scndry_vect_out(2),
      Q => \^s2mm_dmacr\(1),
      R => SR(0)
    );
\err_irq_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5DFF0C0C"
    )
        port map (
      I0 => scndry_vect_out(11),
      I1 => \^p_74_out\,
      I2 => error_d1,
      I3 => p_2_out(1),
      I4 => err_irq_reg_n_0,
      O => \err_irq_i_1__0_n_0\
    );
err_irq_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \err_irq_i_1__0_n_0\,
      Q => err_irq_reg_n_0,
      R => SR(0)
    );
\error_d1_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^sg_updt_error_reg_2\,
      I1 => \^error_d1_reg_2\,
      I2 => \^sg_updt_error_reg_1\,
      I3 => \^sg_updt_error_reg_0\,
      I4 => \^error_d1_reg_1\,
      I5 => \^error_d1_reg_0\,
      O => \^p_74_out\
    );
error_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \^p_74_out\,
      Q => error_d1,
      R => SR(0)
    );
halted_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      Q => \^gen_desc_reg_for_sg.error_pointer_set_reg_0\,
      R => '0'
    );
idle_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => all_is_idle_d1_reg,
      Q => \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\,
      R => '0'
    );
\introut_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000F8F8F800"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_dly_irq_set_i_reg\,
      I2 => \introut_i_2__0_n_0\,
      I3 => s2mm_scndry_resetn,
      I4 => mm2s_scndry_resetn,
      I5 => \^soft_reset_d1_reg\,
      O => \introut_i_1__0_n_0\
    );
\introut_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \dmacr_i_reg_n_0_[14]\,
      I1 => err_irq_reg_n_0,
      I2 => \dmacr_i_reg_n_0_[12]\,
      I3 => \^ioc_irq_reg_0\,
      O => \introut_i_2__0_n_0\
    );
introut_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \introut_i_1__0_n_0\,
      Q => prmry_in,
      R => '0'
    );
ioc_irq_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\,
      Q => \^ioc_irq_reg_0\,
      R => SR(0)
    );
\irqdelay_wren_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA8"
    )
        port map (
      I0 => p_2_out(0),
      I1 => \irqdelay_wren_i_2__0_n_0\,
      I2 => \irqdelay_wren_i_3__0_n_0\,
      I3 => \irqdelay_wren_i_4__0_n_0\,
      I4 => \irqdelay_wren_i_5__0_n_0\,
      O => irqdelay_wren0
    );
\irqdelay_wren_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(9),
      I1 => scndry_vect_out(22),
      I2 => \^irqdelay_wren_reg_0\(8),
      I3 => scndry_vect_out(21),
      O => \irqdelay_wren_i_2__0_n_0\
    );
\irqdelay_wren_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(14),
      I1 => scndry_vect_out(28),
      I2 => \^irqdelay_wren_reg_0\(13),
      I3 => scndry_vect_out(27),
      O => \irqdelay_wren_i_3__0_n_0\
    );
\irqdelay_wren_i_4__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^s2mm_dmacr\(2),
      I1 => scndry_vect_out(26),
      I2 => \^irqdelay_wren_reg_0\(12),
      I3 => scndry_vect_out(25),
      O => \irqdelay_wren_i_4__0_n_0\
    );
\irqdelay_wren_i_5__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(11),
      I1 => scndry_vect_out(24),
      I2 => \^irqdelay_wren_reg_0\(10),
      I3 => scndry_vect_out(23),
      O => \irqdelay_wren_i_5__0_n_0\
    );
irqdelay_wren_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => irqdelay_wren0,
      Q => s2mm_irqdelay_wren,
      R => SR(0)
    );
\irqthresh_wren_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA8"
    )
        port map (
      I0 => p_2_out(0),
      I1 => \irqthresh_wren_i_2__0_n_0\,
      I2 => \irqthresh_wren_i_3__0_n_0\,
      I3 => \irqthresh_wren_i_4__0_n_0\,
      I4 => \irqthresh_wren_i_5__0_n_0\,
      O => irqthresh_wren0
    );
\irqthresh_wren_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(1),
      I1 => scndry_vect_out(14),
      I2 => \^irqdelay_wren_reg_0\(0),
      I3 => scndry_vect_out(13),
      O => \irqthresh_wren_i_2__0_n_0\
    );
\irqthresh_wren_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(7),
      I1 => scndry_vect_out(20),
      I2 => \^irqdelay_wren_reg_0\(6),
      I3 => scndry_vect_out(19),
      O => \irqthresh_wren_i_3__0_n_0\
    );
\irqthresh_wren_i_4__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(5),
      I1 => scndry_vect_out(18),
      I2 => \^irqdelay_wren_reg_0\(4),
      I3 => scndry_vect_out(17),
      O => \irqthresh_wren_i_4__0_n_0\
    );
\irqthresh_wren_i_5__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^irqdelay_wren_reg_0\(3),
      I1 => scndry_vect_out(16),
      I2 => \^irqdelay_wren_reg_0\(2),
      I3 => scndry_vect_out(15),
      O => \irqthresh_wren_i_5__0_n_0\
    );
irqthresh_wren_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => irqthresh_wren0,
      Q => \^s2mm_irqthresh_wren\,
      R => SR(0)
    );
\p_0_out_carry__0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(15),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(15),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(16),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(16),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(17),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(17),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(3)
    );
\p_0_out_carry__0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(13),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(13),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(12),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(12),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(14),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(14),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(2)
    );
\p_0_out_carry__0_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(9),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(9),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(10),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(10),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(11),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(11),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(1)
    );
\p_0_out_carry__0_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(6),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(6),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(7),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(7),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(8),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(8),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(0)
    );
\p_0_out_carry__1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(23),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(23),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(21),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(21),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(22),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(22),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\(1)
    );
\p_0_out_carry__1_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(20),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(20),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(18),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(18),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(19),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(19),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\(0)
    );
p_0_out_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(5),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(5),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(3),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(3),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(4),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(4),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\(1)
    );
p_0_out_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(0),
      I1 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(0),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(1),
      I3 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(1),
      I4 => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(2),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(2),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\(0)
    );
sg_decerr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\,
      Q => \^error_d1_reg_2\,
      R => SR(0)
    );
sg_ftch_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sg_ftch_error0_0,
      Q => sg_ftch_error,
      R => SR(0)
    );
sg_interr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_interr_set_reg\,
      Q => \^error_d1_reg_0\,
      R => SR(0)
    );
sg_slverr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\,
      Q => \^error_d1_reg_1\,
      R => SR(0)
    );
\sg_updt_error_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^sg_updt_error_reg_2\,
      I1 => p_26_out,
      I2 => \^sg_updt_error_reg_1\,
      I3 => \^sg_updt_error_reg_0\,
      I4 => p_25_out,
      I5 => p_24_out,
      O => sg_updt_error0
    );
sg_updt_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sg_updt_error0,
      Q => sg_updt_error,
      R => SR(0)
    );
soft_reset_d1_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^soft_reset_d1_reg\,
      I1 => \dmacr_i_reg[2]_0\,
      O => soft_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_s2mm_cmdsts_if is
  port (
    p_5_out : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    p_3_out_0 : out STD_LOGIC;
    \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[1]\ : out STD_LOGIC;
    \GEN_DESC_UPDT_QUEUE.sts_received_d1_reg\ : out STD_LOGIC;
    \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[26]\ : out STD_LOGIC;
    m_axis_s2mm_sts_tready : out STD_LOGIC;
    \GEN_SOF_QUEUE_MODE.sof_count_reg[2]\ : out STD_LOGIC;
    \GEN_SOF_QUEUE_MODE.cmd_wr_mask_reg\ : out STD_LOGIC;
    \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ : out STD_LOGIC;
    dma_s2mm_error : out STD_LOGIC;
    updt_data1 : in STD_LOGIC;
    s2mm_interr_i : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_slverr_i : in STD_LOGIC;
    s2mm_decerr_i : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[64]\ : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    m_axis_s2mm_sts_tvalid_int : in STD_LOGIC;
    sts_received_d1 : in STD_LOGIC;
    s2mm_halt : in STD_LOGIC;
    cmd_wr_mask : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    s2mm_stop_i2_out : in STD_LOGIC;
    p_10_out : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[64]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_s2mm_cmdsts_if : entity is "axi_dma_s2mm_cmdsts_if";
end axi_dma_ctrl_axi_dma_s2mm_cmdsts_if;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_s2mm_cmdsts_if is
  signal \^fsm_sequential_gen_sm_for_no_length.s2mm_cs_reg[1]\ : STD_LOGIC;
  signal \^gen_desc_updt_queue.gen_desc_updt_no_stsapp.updt_desc_sts_reg[26]\ : STD_LOGIC;
  signal \^gen_desc_updt_queue.sts_received_d1_reg\ : STD_LOGIC;
  signal \^dma_s2mm_error\ : STD_LOGIC;
  signal \^m_axis_s2mm_sts_tready\ : STD_LOGIC;
  signal \^p_3_out_0\ : STD_LOGIC;
  signal \^p_4_out\ : STD_LOGIC;
  signal \^p_5_out\ : STD_LOGIC;
  signal s2mm_error_i_1_n_0 : STD_LOGIC;
  signal \sts_tready_i_1__0_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_SOF_QUEUE_MODE.cmd_wr_mask_i_1\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \GEN_SOF_QUEUE_MODE.sof_count[2]_i_2\ : label is "soft_lutpair116";
begin
  \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[1]\ <= \^fsm_sequential_gen_sm_for_no_length.s2mm_cs_reg[1]\;
  \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[26]\ <= \^gen_desc_updt_queue.gen_desc_updt_no_stsapp.updt_desc_sts_reg[26]\;
  \GEN_DESC_UPDT_QUEUE.sts_received_d1_reg\ <= \^gen_desc_updt_queue.sts_received_d1_reg\;
  dma_s2mm_error <= \^dma_s2mm_error\;
  m_axis_s2mm_sts_tready <= \^m_axis_s2mm_sts_tready\;
  p_3_out_0 <= \^p_3_out_0\;
  p_4_out <= \^p_4_out\;
  p_5_out <= \^p_5_out\;
\DETERMINATE_BTT_MODE.s2mm_decerr_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_decerr_i,
      Q => \^p_3_out_0\,
      R => updt_data1
    );
\DETERMINATE_BTT_MODE.s2mm_interr_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_interr_i,
      Q => \^p_5_out\,
      R => updt_data1
    );
\DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      Q => \^gen_desc_updt_queue.gen_desc_updt_no_stsapp.updt_desc_sts_reg[26]\,
      R => '0'
    );
\DETERMINATE_BTT_MODE.s2mm_slverr_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_slverr_i,
      Q => \^p_4_out\,
      R => updt_data1
    );
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^fsm_sequential_gen_sm_for_no_length.s2mm_cs_reg[1]\,
      I1 => p_0_in,
      I2 => s2mm_stop_i2_out,
      O => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\
    );
\GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_S2MM.queue_dout2_new_reg[64]\,
      Q => \^fsm_sequential_gen_sm_for_no_length.s2mm_cs_reg[1]\,
      R => updt_data1
    );
\GEN_SOF_QUEUE_MODE.cmd_wr_mask_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FDFF0100"
    )
        port map (
      I0 => \^gen_desc_updt_queue.gen_desc_updt_no_stsapp.updt_desc_sts_reg[26]\,
      I1 => s2mm_halt,
      I2 => sts_received_d1,
      I3 => \^gen_desc_updt_queue.sts_received_d1_reg\,
      I4 => cmd_wr_mask,
      O => \GEN_SOF_QUEUE_MODE.cmd_wr_mask_reg\
    );
\GEN_SOF_QUEUE_MODE.sof_count[2]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FD"
    )
        port map (
      I0 => \^gen_desc_updt_queue.sts_received_d1_reg\,
      I1 => sts_received_d1,
      I2 => s2mm_halt,
      O => \GEN_SOF_QUEUE_MODE.sof_count_reg[2]\
    );
s2mm_error_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \^p_4_out\,
      I1 => \^p_3_out_0\,
      I2 => p_10_out,
      I3 => \GEN_S2MM.queue_dout2_new_reg[64]_0\(0),
      I4 => \^p_5_out\,
      I5 => \^dma_s2mm_error\,
      O => s2mm_error_i_1_n_0
    );
s2mm_error_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_error_i_1_n_0,
      Q => \^dma_s2mm_error\,
      R => updt_data1
    );
sts_received_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_reg\,
      Q => \^gen_desc_updt_queue.sts_received_d1_reg\,
      R => '0'
    );
\sts_tready_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"04C4"
    )
        port map (
      I0 => \^gen_desc_updt_queue.sts_received_d1_reg\,
      I1 => s2mm_scndry_resetn,
      I2 => \^m_axis_s2mm_sts_tready\,
      I3 => m_axis_s2mm_sts_tvalid_int,
      O => \sts_tready_i_1__0_n_0\
    );
sts_tready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sts_tready_i_1__0_n_0\,
      Q => \^m_axis_s2mm_sts_tready\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_s2mm_sg_if is
  port (
    sts_received_d1 : out STD_LOGIC;
    p_19_out : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\ : out STD_LOGIC;
    cmd_wr_mask : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\ : out STD_LOGIC;
    \QUEUE_COUNT.cmnds_queued_shift_reg[3]\ : out STD_LOGIC;
    sts_received_i_reg : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[31]\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 25 downto 0 );
    s_axis_s2mm_updtsts_tdata : out STD_LOGIC_VECTOR ( 4 downto 0 );
    updt_data1 : in STD_LOGIC;
    sts_received_i_reg_0 : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_valid_reg\ : in STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ : in STD_LOGIC;
    p_3_out : in STD_LOGIC;
    \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axis_s2mm_sts_tvalid_int : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    sts2_queue_full : in STD_LOGIC;
    sts_received_i_reg_1 : in STD_LOGIC;
    p_10_out : in STD_LOGIC;
    s2mm_halt : in STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ : in STD_LOGIC;
    ptr2_queue_full : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[90]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    p_3_out_0 : in STD_LOGIC;
    p_4_out : in STD_LOGIC;
    p_5_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_s2mm_sg_if : entity is "axi_dma_s2mm_sg_if";
end axi_dma_ctrl_axi_dma_s2mm_sg_if;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_s2mm_sg_if is
  signal \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[31]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_DESC_UPDT_QUEUE.updt_sts_i_1_n_0\ : STD_LOGIC;
  signal \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\ : STD_LOGIC;
  signal \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\ : STD_LOGIC;
  signal \^gen_q_for_sync.s2mm_channel.ptr2_queue_dout_reg[6]\ : STD_LOGIC;
  signal \GEN_SOF_QUEUE_MODE.sof_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_SOF_QUEUE_MODE.sof_count[1]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_SOF_QUEUE_MODE.sof_count[2]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_SOF_QUEUE_MODE.sof_received_i_1_n_0\ : STD_LOGIC;
  signal \GEN_SOF_QUEUE_MODE.sof_received_i_2_n_0\ : STD_LOGIC;
  signal \^cmd_wr_mask\ : STD_LOGIC;
  signal \^p_19_out\ : STD_LOGIC;
  signal p_20_out : STD_LOGIC;
  signal sof_count : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal sof_received : STD_LOGIC;
  signal \^sts_received_d1\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_DESC_UPDT_QUEUE.updt_sts_i_1\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout[31]_i_1\ : label is "soft_lutpair115";
begin
  \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\ <= \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\;
  \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[31]\ <= \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\;
  \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\ <= \^gen_q_for_sync.s2mm_channel.ptr2_queue_dout_reg[6]\;
  cmd_wr_mask <= \^cmd_wr_mask\;
  p_19_out <= \^p_19_out\;
  sts_received_d1 <= \^sts_received_d1\;
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => s2mm_halt,
      I1 => \^sts_received_d1\,
      I2 => sts_received_i_reg_0,
      O => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF001000"
    )
        port map (
      I0 => s2mm_halt,
      I1 => \^sts_received_d1\,
      I2 => sts_received_i_reg_0,
      I3 => s2mm_scndry_resetn,
      I4 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\,
      O => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[31]_i_1_n_0\
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\,
      D => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\,
      Q => s_axis_s2mm_updtsts_tdata(0),
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\,
      D => sof_received,
      Q => s_axis_s2mm_updtsts_tdata(1),
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\,
      D => p_5_out,
      Q => s_axis_s2mm_updtsts_tdata(2),
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\,
      D => p_4_out,
      Q => s_axis_s2mm_updtsts_tdata(3),
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[30]_i_1_n_0\,
      D => p_3_out_0,
      Q => s_axis_s2mm_updtsts_tdata(4),
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts[31]_i_1_n_0\,
      Q => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\,
      R => '0'
    );
\GEN_DESC_UPDT_QUEUE.desc_update_done_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => sts2_queue_full,
      I1 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\,
      I2 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\,
      O => p_20_out
    );
\GEN_DESC_UPDT_QUEUE.desc_update_done_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_20_out,
      Q => \^p_19_out\,
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.sts_received_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sts_received_i_reg_0,
      Q => \^sts_received_d1\,
      R => updt_data1
    );
\GEN_DESC_UPDT_QUEUE.updt_sts_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0AA2222"
    )
        port map (
      I0 => s2mm_scndry_resetn,
      I1 => sts_received_i_reg_1,
      I2 => sts2_queue_full,
      I3 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\,
      I4 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\,
      O => \GEN_DESC_UPDT_QUEUE.updt_sts_i_1_n_0\
    );
\GEN_DESC_UPDT_QUEUE.updt_sts_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_DESC_UPDT_QUEUE.updt_sts_i_1_n_0\,
      Q => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\,
      I1 => sts2_queue_full,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]_0\(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^gen_q_for_sync.s2mm_channel.ptr2_queue_dout_reg[6]\,
      I1 => ptr2_queue_full,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]_0\(0)
    );
\GEN_SOF_QUEUE_MODE.cmd_wr_mask_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\,
      Q => \^cmd_wr_mask\,
      R => updt_data1
    );
\GEN_SOF_QUEUE_MODE.sof_count[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10EFEF10"
    )
        port map (
      I0 => s2mm_halt,
      I1 => \^sts_received_d1\,
      I2 => sts_received_i_reg_0,
      I3 => p_10_out,
      I4 => sof_count(0),
      O => \GEN_SOF_QUEUE_MODE.sof_count[0]_i_1_n_0\
    );
\GEN_SOF_QUEUE_MODE.sof_count[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"777777E788888818"
    )
        port map (
      I0 => sof_count(0),
      I1 => p_10_out,
      I2 => sts_received_i_reg_0,
      I3 => \^sts_received_d1\,
      I4 => s2mm_halt,
      I5 => sof_count(1),
      O => \GEN_SOF_QUEUE_MODE.sof_count[1]_i_1_n_0\
    );
\GEN_SOF_QUEUE_MODE.sof_count[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFE8001"
    )
        port map (
      I0 => sof_count(0),
      I1 => sof_count(1),
      I2 => p_10_out,
      I3 => sts_received_i_reg_1,
      I4 => sof_count(2),
      O => \GEN_SOF_QUEUE_MODE.sof_count[2]_i_1_n_0\
    );
\GEN_SOF_QUEUE_MODE.sof_count_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_SOF_QUEUE_MODE.sof_count[0]_i_1_n_0\,
      Q => sof_count(0),
      R => updt_data1
    );
\GEN_SOF_QUEUE_MODE.sof_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_SOF_QUEUE_MODE.sof_count[1]_i_1_n_0\,
      Q => sof_count(1),
      R => updt_data1
    );
\GEN_SOF_QUEUE_MODE.sof_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_SOF_QUEUE_MODE.sof_count[2]_i_1_n_0\,
      Q => sof_count(2),
      R => updt_data1
    );
\GEN_SOF_QUEUE_MODE.sof_received_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFFCCCECCCC"
    )
        port map (
      I0 => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\,
      I1 => \GEN_SOF_QUEUE_MODE.sof_received_i_2_n_0\,
      I2 => s2mm_halt,
      I3 => \^sts_received_d1\,
      I4 => sts_received_i_reg_0,
      I5 => sof_received,
      O => \GEN_SOF_QUEUE_MODE.sof_received_i_1_n_0\
    );
\GEN_SOF_QUEUE_MODE.sof_received_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => \^cmd_wr_mask\,
      I1 => p_10_out,
      I2 => sof_count(2),
      I3 => sof_count(1),
      I4 => sof_count(0),
      O => \GEN_SOF_QUEUE_MODE.sof_received_i_2_n_0\
    );
\GEN_SOF_QUEUE_MODE.sof_received_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_SOF_QUEUE_MODE.sof_received_i_1_n_0\,
      Q => sof_received,
      R => updt_data1
    );
\QUEUE_COUNT.cmnds_queued_shift[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFEFFFF"
    )
        port map (
      I0 => \^p_19_out\,
      I1 => p_3_out,
      I2 => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\,
      I3 => \^gen_q_for_sync.s2mm_channel.ptr2_queue_dout_reg[6]\,
      I4 => \out\(0),
      I5 => \out\(1),
      O => \QUEUE_COUNT.cmnds_queued_shift_reg[3]\
    );
\sts_received_i_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E000E0E0E0E0E0E0"
    )
        port map (
      I0 => m_axis_s2mm_sts_tvalid_int,
      I1 => sts_received_i_reg_0,
      I2 => s2mm_scndry_resetn,
      I3 => sts2_queue_full,
      I4 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[31]\,
      I5 => \^gen_q_for_sync.s2mm_channel.no_app_update.sts2_queue_dout_reg[26]\,
      O => sts_received_i_reg
    );
updt_data_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_S2MM.queue_dout2_valid_reg\,
      Q => \^gen_q_for_sync.s2mm_channel.ptr2_queue_dout_reg[6]\,
      R => '0'
    );
\updt_desc_reg0_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(4),
      Q => Q(4),
      R => updt_data1
    );
\updt_desc_reg0_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(5),
      Q => Q(5),
      R => updt_data1
    );
\updt_desc_reg0_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(6),
      Q => Q(6),
      R => updt_data1
    );
\updt_desc_reg0_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(7),
      Q => Q(7),
      R => updt_data1
    );
\updt_desc_reg0_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(8),
      Q => Q(8),
      R => updt_data1
    );
\updt_desc_reg0_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(9),
      Q => Q(9),
      R => updt_data1
    );
\updt_desc_reg0_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(10),
      Q => Q(10),
      R => updt_data1
    );
\updt_desc_reg0_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(11),
      Q => Q(11),
      R => updt_data1
    );
\updt_desc_reg0_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(12),
      Q => Q(12),
      R => updt_data1
    );
\updt_desc_reg0_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(13),
      Q => Q(13),
      R => updt_data1
    );
\updt_desc_reg0_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(14),
      Q => Q(14),
      R => updt_data1
    );
\updt_desc_reg0_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(15),
      Q => Q(15),
      R => updt_data1
    );
\updt_desc_reg0_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(16),
      Q => Q(16),
      R => updt_data1
    );
\updt_desc_reg0_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(17),
      Q => Q(17),
      R => updt_data1
    );
\updt_desc_reg0_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(18),
      Q => Q(18),
      R => updt_data1
    );
\updt_desc_reg0_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(19),
      Q => Q(19),
      R => updt_data1
    );
\updt_desc_reg0_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(20),
      Q => Q(20),
      R => updt_data1
    );
\updt_desc_reg0_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(21),
      Q => Q(21),
      R => updt_data1
    );
\updt_desc_reg0_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(22),
      Q => Q(22),
      R => updt_data1
    );
\updt_desc_reg0_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(23),
      Q => Q(23),
      R => updt_data1
    );
\updt_desc_reg0_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(24),
      Q => Q(24),
      R => updt_data1
    );
\updt_desc_reg0_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(25),
      Q => Q(25),
      R => updt_data1
    );
\updt_desc_reg0_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(0),
      Q => Q(0),
      R => updt_data1
    );
\updt_desc_reg0_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(1),
      Q => Q(1),
      R => updt_data1
    );
\updt_desc_reg0_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(2),
      Q => Q(2),
      R => updt_data1
    );
\updt_desc_reg0_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_10_out,
      D => \GEN_S2MM.queue_dout2_new_reg[90]\(3),
      Q => Q(3),
      R => updt_data1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_s2mm_sm is
  port (
    \GEN_S2MM.queue_dout2_valid_reg\ : out STD_LOGIC;
    queue_rden2_new : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \QUEUE_COUNT.cmnds_queued_shift_reg[0]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    p_10_out : in STD_LOGIC;
    updt_data_reg : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_stop_i2_out : in STD_LOGIC;
    ch2_ftch_queue_empty : in STD_LOGIC;
    \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ : in STD_LOGIC;
    p_3_out : in STD_LOGIC;
    p_19_out : in STD_LOGIC;
    \GEN_DESC_UPDT_QUEUE.desc_update_done_reg\ : in STD_LOGIC;
    p_1_out : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    \dmacr_i_reg[0]\ : in STD_LOGIC;
    \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg_0\ : in STD_LOGIC;
    updt_data1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_s2mm_sm : entity is "axi_dma_s2mm_sm";
end axi_dma_ctrl_axi_dma_s2mm_sm;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_s2mm_sm is
  signal \/i__n_0\ : STD_LOGIC;
  signal \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_2_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[0]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[1]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[2]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[3]_i_1_n_0\ : STD_LOGIC;
  signal \QUEUE_COUNT.cmnds_queued_shift[3]_i_2_n_0\ : STD_LOGIC;
  signal \^queue_count.cmnds_queued_shift_reg[0]_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal cmnds_queued_shift : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \^out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \^out\ : signal is "yes";
  signal \^queue_rden2_new\ : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ : label is "idle:00,fetch_descriptor:01,wait_status:10,iSTATE:10";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[1]\ : label is "idle:00,fetch_descriptor:01,wait_status:10,iSTATE:10";
  attribute KEEP of \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[1]\ : label is "yes";
begin
  \QUEUE_COUNT.cmnds_queued_shift_reg[0]_0\(0) <= \^queue_count.cmnds_queued_shift_reg[0]_0\(0);
  \out\(1 downto 0) <= \^out\(1 downto 0);
  queue_rden2_new <= \^queue_rden2_new\;
\/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF7"
    )
        port map (
      I0 => \^out\(0),
      I1 => updt_data_reg,
      I2 => s2mm_stop_i2_out,
      I3 => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      I4 => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\,
      I5 => \^out\(1),
      O => \/i__n_0\
    );
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => \dmacr_i_reg[0]\,
      I1 => \^out\(0),
      I2 => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg_0\,
      I3 => \^out\(1),
      I4 => \/i__n_0\,
      I5 => \^out\(0),
      O => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_1_n_0\
    );
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000800000000"
    )
        port map (
      I0 => \^out\(0),
      I1 => updt_data_reg,
      I2 => p_3_out,
      I3 => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\,
      I4 => \^out\(1),
      I5 => \^out\(1),
      O => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_2_n_0\
    );
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_1_n_0\,
      Q => \^out\(0),
      R => updt_data1
    );
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_2_n_0\,
      Q => \^out\(1),
      R => updt_data1
    );
\GEN_S2MM.queue_dout2_new[90]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000004"
    )
        port map (
      I0 => updt_data_reg,
      I1 => s2mm_dmacr(0),
      I2 => s2mm_stop_i2_out,
      I3 => \^out\(0),
      I4 => \^out\(1),
      I5 => ch2_ftch_queue_empty,
      O => \^queue_rden2_new\
    );
\GEN_S2MM.queue_dout2_valid_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00005400"
    )
        port map (
      I0 => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      I1 => mm2s_scndry_resetn,
      I2 => s2mm_scndry_resetn,
      I3 => \^queue_rden2_new\,
      I4 => p_10_out,
      O => \GEN_S2MM.queue_dout2_valid_reg\
    );
\QUEUE_COUNT.cmnds_queued_shift[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000EE2E"
    )
        port map (
      I0 => \^queue_count.cmnds_queued_shift_reg[0]_0\(0),
      I1 => \QUEUE_COUNT.cmnds_queued_shift[3]_i_2_n_0\,
      I2 => \GEN_DESC_UPDT_QUEUE.desc_update_done_reg\,
      I3 => cmnds_queued_shift(1),
      I4 => p_1_out,
      O => \QUEUE_COUNT.cmnds_queued_shift[0]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEE222E2"
    )
        port map (
      I0 => cmnds_queued_shift(1),
      I1 => \QUEUE_COUNT.cmnds_queued_shift[3]_i_2_n_0\,
      I2 => \^queue_count.cmnds_queued_shift_reg[0]_0\(0),
      I3 => \GEN_DESC_UPDT_QUEUE.desc_update_done_reg\,
      I4 => cmnds_queued_shift(2),
      I5 => p_1_out,
      O => \QUEUE_COUNT.cmnds_queued_shift[1]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEE222E2"
    )
        port map (
      I0 => cmnds_queued_shift(2),
      I1 => \QUEUE_COUNT.cmnds_queued_shift[3]_i_2_n_0\,
      I2 => cmnds_queued_shift(1),
      I3 => \GEN_DESC_UPDT_QUEUE.desc_update_done_reg\,
      I4 => cmnds_queued_shift(3),
      I5 => p_1_out,
      O => \QUEUE_COUNT.cmnds_queued_shift[2]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00002E22"
    )
        port map (
      I0 => cmnds_queued_shift(3),
      I1 => \QUEUE_COUNT.cmnds_queued_shift[3]_i_2_n_0\,
      I2 => \GEN_DESC_UPDT_QUEUE.desc_update_done_reg\,
      I3 => cmnds_queued_shift(2),
      I4 => p_1_out,
      O => \QUEUE_COUNT.cmnds_queued_shift[3]_i_1_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFB00000004"
    )
        port map (
      I0 => \^out\(1),
      I1 => \^out\(0),
      I2 => updt_data_reg,
      I3 => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\,
      I4 => p_3_out,
      I5 => p_19_out,
      O => \QUEUE_COUNT.cmnds_queued_shift[3]_i_2_n_0\
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[0]_i_1_n_0\,
      Q => \^queue_count.cmnds_queued_shift_reg[0]_0\(0),
      R => '0'
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[1]_i_1_n_0\,
      Q => cmnds_queued_shift(1),
      R => '0'
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[2]_i_1_n_0\,
      Q => cmnds_queued_shift(2),
      R => '0'
    );
\QUEUE_COUNT.cmnds_queued_shift_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \QUEUE_COUNT.cmnds_queued_shift[3]_i_1_n_0\,
      Q => cmnds_queued_shift(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_s2mm_sts_mngr is
  port (
    s2mm_halted_clr : out STD_LOGIC;
    s2mm_halted_set : out STD_LOGIC;
    idle_reg : out STD_LOGIC;
    updt_data1 : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_halted_set0 : in STD_LOGIC;
    s2mm_all_idle : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_idle_reg\ : in STD_LOGIC;
    idle_reg_0 : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_s2mm_sts_mngr : entity is "axi_dma_s2mm_sts_mngr";
end axi_dma_ctrl_axi_dma_s2mm_sts_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_s2mm_sts_mngr is
  signal all_is_idle_d1 : STD_LOGIC;
  signal \^s2mm_halted_set\ : STD_LOGIC;
begin
  s2mm_halted_set <= \^s2mm_halted_set\;
all_is_idle_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_all_idle,
      Q => all_is_idle_d1,
      R => updt_data1
    );
\idle_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000077100000"
    )
        port map (
      I0 => \GEN_CH2_UPDATE.ch2_updt_idle_reg\,
      I1 => all_is_idle_d1,
      I2 => s2mm_dmacr(0),
      I3 => idle_reg_0,
      I4 => m_axi_sg_aresetn,
      I5 => \^s2mm_halted_set\,
      O => idle_reg
    );
s2mm_halted_clr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_dmacr(0),
      Q => s2mm_halted_clr,
      R => updt_data1
    );
s2mm_halted_set_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_halted_set0,
      Q => \^s2mm_halted_set\,
      R => updt_data1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_sofeof_gen is
  port (
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ : out STD_LOGIC;
    axi_dma_tstvec : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ : out STD_LOGIC;
    p_0_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    m_axis_mm2s_tvalid : in STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axis_mm2s_tlast : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    ch1_delay_cnt_en : in STD_LOGIC;
    mm2s_irqdelay_wren : in STD_LOGIC;
    mm2s_prmry_resetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_sofeof_gen : entity is "axi_dma_sofeof_gen";
end axi_dma_ctrl_axi_dma_sofeof_gen;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_sofeof_gen is
  signal \GEN_FOR_SYNC.s_sof_generated_i_1_n_0\ : STD_LOGIC;
  signal \^axi_dma_tstvec\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal p_0_out : STD_LOGIC;
  signal p_5_in : STD_LOGIC;
  signal s_last : STD_LOGIC;
  signal s_last_d1 : STD_LOGIC;
  signal s_ready : STD_LOGIC;
  signal s_sof_d1_cdc_tig : STD_LOGIC;
  signal s_sof_generated : STD_LOGIC;
  signal s_valid : STD_LOGIC;
  signal s_valid_d1 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_FOR_SYNC.s_valid_d1_i_1\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \axi_dma_tstvec[0]_INST_0\ : label is "soft_lutpair114";
begin
  axi_dma_tstvec(1 downto 0) <= \^axi_dma_tstvec\(1 downto 0);
\GEN_FOR_SYNC.s_last_d1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => s_valid,
      I1 => s_ready,
      I2 => s_last,
      O => p_0_out
    );
\GEN_FOR_SYNC.s_last_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_0_out,
      Q => s_last_d1,
      R => p_0_in
    );
\GEN_FOR_SYNC.s_last_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => m_axis_mm2s_tlast,
      Q => s_last,
      R => p_0_in
    );
\GEN_FOR_SYNC.s_ready_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => m_axis_mm2s_tready,
      Q => s_ready,
      R => p_0_in
    );
\GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_sof_generated,
      Q => s_sof_d1_cdc_tig,
      R => p_0_in
    );
\GEN_FOR_SYNC.s_sof_generated_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FBAA0000"
    )
        port map (
      I0 => s_sof_generated,
      I1 => s_valid_d1,
      I2 => s_sof_d1_cdc_tig,
      I3 => p_5_in,
      I4 => mm2s_prmry_resetn,
      I5 => \^axi_dma_tstvec\(1),
      O => \GEN_FOR_SYNC.s_sof_generated_i_1_n_0\
    );
\GEN_FOR_SYNC.s_sof_generated_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_FOR_SYNC.s_sof_generated_i_1_n_0\,
      Q => s_sof_generated,
      R => '0'
    );
\GEN_FOR_SYNC.s_valid_d1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_ready,
      I1 => s_valid,
      O => p_5_in
    );
\GEN_FOR_SYNC.s_valid_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_5_in,
      Q => s_valid_d1,
      R => p_0_in
    );
\GEN_FOR_SYNC.s_valid_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => m_axis_mm2s_tvalid,
      Q => s_valid,
      R => p_0_in
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4404444444004444"
    )
        port map (
      I0 => mm2s_irqdelay_wren,
      I1 => ch1_delay_cnt_en,
      I2 => s_sof_d1_cdc_tig,
      I3 => s_sof_generated,
      I4 => p_5_in,
      I5 => s_valid_d1,
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A2A0"
    )
        port map (
      I0 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      I1 => \^axi_dma_tstvec\(0),
      I2 => \^axi_dma_tstvec\(1),
      I3 => ch1_delay_cnt_en,
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\
    );
\axi_dma_tstvec[0]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20003000"
    )
        port map (
      I0 => s_sof_d1_cdc_tig,
      I1 => s_sof_generated,
      I2 => s_valid,
      I3 => s_ready,
      I4 => s_valid_d1,
      O => \^axi_dma_tstvec\(0)
    );
\axi_dma_tstvec[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080808000800080"
    )
        port map (
      I0 => s_last,
      I1 => s_valid,
      I2 => s_ready,
      I3 => s_last_d1,
      I4 => s_sof_generated,
      I5 => s_sof_d1_cdc_tig,
      O => \^axi_dma_tstvec\(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_sofeof_gen_0 is
  port (
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ : out STD_LOGIC;
    axi_dma_tstvec : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ : out STD_LOGIC;
    updt_data1 : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s_axis_s2mm_tvalid : in STD_LOGIC;
    s_axis_s2mm_tready : in STD_LOGIC;
    s_axis_s2mm_tlast : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    ch2_delay_cnt_en : in STD_LOGIC;
    s2mm_irqdelay_wren : in STD_LOGIC;
    s2mm_prmry_resetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_sofeof_gen_0 : entity is "axi_dma_sofeof_gen";
end axi_dma_ctrl_axi_dma_sofeof_gen_0;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_sofeof_gen_0 is
  signal \GEN_FOR_SYNC.s_sof_generated_i_1__0_n_0\ : STD_LOGIC;
  signal \^axi_dma_tstvec\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal p_0_out : STD_LOGIC;
  signal p_5_in : STD_LOGIC;
  signal s_last : STD_LOGIC;
  signal s_last_d1 : STD_LOGIC;
  signal s_ready : STD_LOGIC;
  signal s_sof_d1_cdc_tig : STD_LOGIC;
  signal s_sof_generated : STD_LOGIC;
  signal s_valid : STD_LOGIC;
  signal s_valid_d1 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_FOR_SYNC.s_valid_d1_i_1__0\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \axi_dma_tstvec[2]_INST_0\ : label is "soft_lutpair117";
begin
  axi_dma_tstvec(1 downto 0) <= \^axi_dma_tstvec\(1 downto 0);
\GEN_FOR_SYNC.s_last_d1_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => s_valid,
      I1 => s_ready,
      I2 => s_last,
      O => p_0_out
    );
\GEN_FOR_SYNC.s_last_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_0_out,
      Q => s_last_d1,
      R => updt_data1
    );
\GEN_FOR_SYNC.s_last_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axis_s2mm_tlast,
      Q => s_last,
      R => updt_data1
    );
\GEN_FOR_SYNC.s_ready_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axis_s2mm_tready,
      Q => s_ready,
      R => updt_data1
    );
\GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_sof_generated,
      Q => s_sof_d1_cdc_tig,
      R => updt_data1
    );
\GEN_FOR_SYNC.s_sof_generated_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FBAA0000"
    )
        port map (
      I0 => s_sof_generated,
      I1 => s_valid_d1,
      I2 => s_sof_d1_cdc_tig,
      I3 => p_5_in,
      I4 => s2mm_prmry_resetn,
      I5 => \^axi_dma_tstvec\(1),
      O => \GEN_FOR_SYNC.s_sof_generated_i_1__0_n_0\
    );
\GEN_FOR_SYNC.s_sof_generated_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_FOR_SYNC.s_sof_generated_i_1__0_n_0\,
      Q => s_sof_generated,
      R => '0'
    );
\GEN_FOR_SYNC.s_valid_d1_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_ready,
      I1 => s_valid,
      O => p_5_in
    );
\GEN_FOR_SYNC.s_valid_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_5_in,
      Q => s_valid_d1,
      R => updt_data1
    );
\GEN_FOR_SYNC.s_valid_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axis_s2mm_tvalid,
      Q => s_valid,
      R => updt_data1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4404444444004444"
    )
        port map (
      I0 => s2mm_irqdelay_wren,
      I1 => ch2_delay_cnt_en,
      I2 => s_sof_d1_cdc_tig,
      I3 => s_sof_generated,
      I4 => p_5_in,
      I5 => s_valid_d1,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A2A0"
    )
        port map (
      I0 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      I1 => \^axi_dma_tstvec\(0),
      I2 => \^axi_dma_tstvec\(1),
      I3 => ch2_delay_cnt_en,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\
    );
\axi_dma_tstvec[2]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20003000"
    )
        port map (
      I0 => s_sof_d1_cdc_tig,
      I1 => s_sof_generated,
      I2 => s_valid,
      I3 => s_ready,
      I4 => s_valid_d1,
      O => \^axi_dma_tstvec\(0)
    );
\axi_dma_tstvec[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080808000800080"
    )
        port map (
      I0 => s_last,
      I1 => s_valid,
      I2 => s_ready,
      I3 => s_last_d1,
      I4 => s_sof_generated,
      I5 => s_sof_d1_cdc_tig,
      O => \^axi_dma_tstvec\(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_addr_cntl is
  port (
    sig_addr2rsc_cmd_fifo_empty : out STD_LOGIC;
    m_axi_sg_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_arvalid : out STD_LOGIC;
    m_axi_sg_arlen : out STD_LOGIC_VECTOR ( 0 to 0 );
    \sig_cmd_addr_reg_reg[6]\ : out STD_LOGIC;
    m_axi_sg_araddr : out STD_LOGIC_VECTOR ( 25 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    sm_set_error : in STD_LOGIC;
    sig_cmd_burst_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    sm_set_error_reg : in STD_LOGIC;
    sig_cmd2addr_valid1_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    m_axi_sg_arready : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 25 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_addr_cntl : entity is "axi_sg_addr_cntl";
end axi_dma_ctrl_axi_sg_addr_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_addr_cntl is
  signal \^m_axi_sg_arlen\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_addr2rsc_calc_error : STD_LOGIC;
  signal \^sig_addr2rsc_cmd_fifo_empty\ : STD_LOGIC;
  signal \sig_next_addr_reg[31]_i_1__1_n_0\ : STD_LOGIC;
  signal sig_posted_to_axi : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_posted_to_axi : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_posted_to_axi : signal is "no";
  signal sig_posted_to_axi_2 : STD_LOGIC;
  attribute RTL_KEEP of sig_posted_to_axi_2 : signal is "true";
  attribute equivalent_register_removal of sig_posted_to_axi_2 : signal is "no";
  signal sig_push_addr_reg1_out : STD_LOGIC;
  attribute KEEP : string;
  attribute KEEP of sig_posted_to_axi_2_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_2_reg : label is "no";
  attribute KEEP of sig_posted_to_axi_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_reg : label is "no";
begin
  m_axi_sg_arlen(0) <= \^m_axi_sg_arlen\(0);
  sig_addr2rsc_cmd_fifo_empty <= \^sig_addr2rsc_cmd_fifo_empty\;
sig_addr_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => '0',
      Q => \^sig_addr2rsc_cmd_fifo_empty\,
      S => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
sig_addr_valid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => sm_set_error_reg,
      Q => m_axi_sg_arvalid,
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
sig_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => sm_set_error,
      Q => sig_addr2rsc_calc_error,
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
sig_cmd_reg_empty_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^sig_addr2rsc_cmd_fifo_empty\,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_cmd_addr_reg_reg[6]\
    );
\sig_next_addr_reg[31]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"40FF"
    )
        port map (
      I0 => sig_addr2rsc_calc_error,
      I1 => m_axi_sg_arready,
      I2 => \^m_axi_sg_arlen\(0),
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg[31]_i_2__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^sig_addr2rsc_cmd_fifo_empty\,
      I1 => sig_mstr2addr_cmd_valid,
      O => sig_push_addr_reg1_out
    );
\sig_next_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(4),
      Q => m_axi_sg_araddr(4),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(5),
      Q => m_axi_sg_araddr(5),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(6),
      Q => m_axi_sg_araddr(6),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(7),
      Q => m_axi_sg_araddr(7),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(8),
      Q => m_axi_sg_araddr(8),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(9),
      Q => m_axi_sg_araddr(9),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(10),
      Q => m_axi_sg_araddr(10),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(11),
      Q => m_axi_sg_araddr(11),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(12),
      Q => m_axi_sg_araddr(12),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(13),
      Q => m_axi_sg_araddr(13),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(14),
      Q => m_axi_sg_araddr(14),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(15),
      Q => m_axi_sg_araddr(15),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(16),
      Q => m_axi_sg_araddr(16),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(17),
      Q => m_axi_sg_araddr(17),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(18),
      Q => m_axi_sg_araddr(18),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(19),
      Q => m_axi_sg_araddr(19),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(20),
      Q => m_axi_sg_araddr(20),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(21),
      Q => m_axi_sg_araddr(21),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(22),
      Q => m_axi_sg_araddr(22),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(23),
      Q => m_axi_sg_araddr(23),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(24),
      Q => m_axi_sg_araddr(24),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(25),
      Q => m_axi_sg_araddr(25),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(0),
      Q => m_axi_sg_araddr(0),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(1),
      Q => m_axi_sg_araddr(1),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(2),
      Q => m_axi_sg_araddr(2),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(3),
      Q => m_axi_sg_araddr(3),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_burst_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => sig_cmd_burst_reg(0),
      Q => m_axi_sg_arburst(0),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
\sig_next_len_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => '1',
      Q => \^m_axi_sg_arlen\(0),
      R => \sig_next_addr_reg[31]_i_1__1_n_0\
    );
sig_posted_to_axi_2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_cmd2addr_valid1_reg,
      Q => sig_posted_to_axi_2,
      R => '0'
    );
sig_posted_to_axi_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_cmd2addr_valid1_reg,
      Q => sig_posted_to_axi,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_sg_addr_cntl__parameterized0\ is
  port (
    \out\ : out STD_LOGIC;
    sig_addr2wsc_cmd_fifo_empty : out STD_LOGIC;
    m_axi_sg_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_awvalid : out STD_LOGIC;
    m_axi_sg_awaddr : out STD_LOGIC_VECTOR ( 27 downto 0 );
    \sig_cmd_addr_reg_reg[3]\ : out STD_LOGIC;
    sig_push_addr_reg1_out : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_calc2dm_calc_err : in STD_LOGIC;
    sm_set_error_reg : in STD_LOGIC;
    sig_cmd2addr_valid1_reg : in STD_LOGIC;
    \sig_cmd_addr_reg_reg[3]_0\ : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    m_axi_sg_awready : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 26 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_sg_addr_cntl__parameterized0\ : entity is "axi_sg_addr_cntl";
end \axi_dma_ctrl_axi_sg_addr_cntl__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_axi_sg_addr_cntl__parameterized0\ is
  signal sig_addr2wsc_calc_error : STD_LOGIC;
  signal \^sig_addr2wsc_cmd_fifo_empty\ : STD_LOGIC;
  signal sig_addr_reg_full : STD_LOGIC;
  signal \sig_next_addr_reg[31]_i_1__2_n_0\ : STD_LOGIC;
  signal sig_posted_to_axi : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_posted_to_axi : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_posted_to_axi : signal is "no";
  signal sig_posted_to_axi_2 : STD_LOGIC;
  attribute RTL_KEEP of sig_posted_to_axi_2 : signal is "true";
  attribute equivalent_register_removal of sig_posted_to_axi_2 : signal is "no";
  attribute KEEP : string;
  attribute KEEP of sig_posted_to_axi_2_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_2_reg : label is "no";
  attribute KEEP of sig_posted_to_axi_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_reg : label is "no";
begin
  \out\ <= sig_posted_to_axi;
  sig_addr2wsc_cmd_fifo_empty <= \^sig_addr2wsc_cmd_fifo_empty\;
sig_addr_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => '0',
      Q => \^sig_addr2wsc_cmd_fifo_empty\,
      S => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
sig_addr_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => sig_push_addr_reg1_out,
      Q => sig_addr_reg_full,
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
sig_addr_valid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => sm_set_error_reg,
      Q => m_axi_sg_awvalid,
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
sig_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => sig_calc2dm_calc_err,
      Q => sig_addr2wsc_calc_error,
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_cmd_reg_empty_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => \^sig_addr2wsc_cmd_fifo_empty\,
      I1 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_cmd_addr_reg_reg[3]\
    );
\sig_next_addr_reg[31]_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"40FF"
    )
        port map (
      I0 => sig_addr2wsc_calc_error,
      I1 => m_axi_sg_awready,
      I2 => sig_addr_reg_full,
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(5),
      Q => m_axi_sg_awaddr(6),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(6),
      Q => m_axi_sg_awaddr(7),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(7),
      Q => m_axi_sg_awaddr(8),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(8),
      Q => m_axi_sg_awaddr(9),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(9),
      Q => m_axi_sg_awaddr(10),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(10),
      Q => m_axi_sg_awaddr(11),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(11),
      Q => m_axi_sg_awaddr(12),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(12),
      Q => m_axi_sg_awaddr(13),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(13),
      Q => m_axi_sg_awaddr(14),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(14),
      Q => m_axi_sg_awaddr(15),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(15),
      Q => m_axi_sg_awaddr(16),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(16),
      Q => m_axi_sg_awaddr(17),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(17),
      Q => m_axi_sg_awaddr(18),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(18),
      Q => m_axi_sg_awaddr(19),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(19),
      Q => m_axi_sg_awaddr(20),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(20),
      Q => m_axi_sg_awaddr(21),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(21),
      Q => m_axi_sg_awaddr(22),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(22),
      Q => m_axi_sg_awaddr(23),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(23),
      Q => m_axi_sg_awaddr(24),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(24),
      Q => m_axi_sg_awaddr(25),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(25),
      Q => m_axi_sg_awaddr(26),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(26),
      Q => m_axi_sg_awaddr(27),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => \sig_cmd_addr_reg_reg[3]_0\,
      Q => m_axi_sg_awaddr(0),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(0),
      Q => m_axi_sg_awaddr(1),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(1),
      Q => m_axi_sg_awaddr(2),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(2),
      Q => m_axi_sg_awaddr(3),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(3),
      Q => m_axi_sg_awaddr(4),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => Q(4),
      Q => m_axi_sg_awaddr(5),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
\sig_next_size_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_addr_reg1_out,
      D => '1',
      Q => m_axi_sg_awsize(0),
      R => \sig_next_addr_reg[31]_i_1__2_n_0\
    );
sig_posted_to_axi_2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_cmd2addr_valid1_reg,
      Q => sig_posted_to_axi_2,
      R => '0'
    );
sig_posted_to_axi_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_cmd2addr_valid1_reg,
      Q => sig_posted_to_axi,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_fifo is
  port (
    s_axis_updt_cmd_tready : out STD_LOGIC;
    sig_load_input_cmd : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_init_done_reg_1 : out STD_LOGIC;
    sig_init_done_reg_2 : out STD_LOGIC;
    sig_init_done_reg_3 : out STD_LOGIC;
    sig_init_done_reg_4 : out STD_LOGIC;
    sig_btt_is_zero : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 27 downto 0 );
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ : in STD_LOGIC;
    sig_addr2wsc_cmd_fifo_empty : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    p_20_out_0 : in STD_LOGIC;
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    sig_init_done_3 : in STD_LOGIC;
    sig_init_done_1 : in STD_LOGIC;
    sig_init_done_2 : in STD_LOGIC;
    \update_address_reg[31]\ : in STD_LOGIC_VECTOR ( 26 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_fifo : entity is "axi_sg_fifo";
end axi_dma_ctrl_axi_sg_fifo;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_fifo is
  signal \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\ : STD_LOGIC;
  signal \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 27 downto 0 );
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__5_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__5_n_0\ : STD_LOGIC;
  signal \^s_axis_updt_cmd_tready\ : STD_LOGIC;
  signal sig_cmd2mstr_cmd_valid : STD_LOGIC;
  signal sig_init_done_4 : STD_LOGIC;
  signal \sig_init_done_i_1__11_n_0\ : STD_LOGIC;
  signal \^sig_load_input_cmd\ : STD_LOGIC;
  signal sig_push_regfifo : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_init_done_i_1__10\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__11\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__12\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__13\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__14\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \sig_init_done_i_1__9\ : label is "soft_lutpair54";
begin
  Q(27 downto 0) <= \^q\(27 downto 0);
  s_axis_updt_cmd_tready <= \^s_axis_updt_cmd_tready\;
  sig_load_input_cmd <= \^sig_load_input_cmd\;
\USE_SINGLE_REG.sig_regfifo_dout_reg[63]_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^s_axis_updt_cmd_tready\,
      I1 => p_20_out_0,
      O => sig_push_regfifo
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => '1',
      Q => \^q\(0),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(0),
      Q => \^q\(1),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(1),
      Q => \^q\(2),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(2),
      Q => \^q\(3),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(3),
      Q => \^q\(4),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(4),
      Q => \^q\(5),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(5),
      Q => \^q\(6),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(6),
      Q => \^q\(7),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(7),
      Q => \^q\(8),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(8),
      Q => \^q\(9),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(9),
      Q => \^q\(10),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(10),
      Q => \^q\(11),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(11),
      Q => \^q\(12),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(12),
      Q => \^q\(13),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(13),
      Q => \^q\(14),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(14),
      Q => \^q\(15),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(15),
      Q => \^q\(16),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(16),
      Q => \^q\(17),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(17),
      Q => \^q\(18),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(18),
      Q => \^q\(19),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(19),
      Q => \^q\(20),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(20),
      Q => \^q\(21),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(21),
      Q => \^q\(22),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(22),
      Q => \^q\(23),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(23),
      Q => \^q\(24),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(24),
      Q => \^q\(25),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(25),
      Q => \^q\(26),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => \update_address_reg[31]\(26),
      Q => \^q\(27),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF4444F444"
    )
        port map (
      I0 => p_20_out_0,
      I1 => \^s_axis_updt_cmd_tready\,
      I2 => \^sig_load_input_cmd\,
      I3 => sig_addr2wsc_cmd_fifo_empty,
      I4 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\,
      I5 => sig_init_done_4,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__5_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__5_n_0\,
      Q => \^s_axis_updt_cmd_tready\,
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0CC8888CCCC8888"
    )
        port map (
      I0 => sig_push_regfifo,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I2 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\,
      I3 => sig_addr2wsc_cmd_fifo_empty,
      I4 => sig_cmd2mstr_cmd_valid,
      I5 => sig_cmd_reg_empty,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__5_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__5_n_0\,
      Q => sig_cmd2mstr_cmd_valid,
      R => '0'
    );
\sig_btt_is_zero_reg_i_1__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => sig_btt_is_zero
    );
\sig_cmd_reg_empty_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => sig_cmd2mstr_cmd_valid,
      I1 => sig_cmd_reg_empty,
      O => \^sig_load_input_cmd\
    );
\sig_init_done_i_1__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      I1 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_0,
      O => sig_init_done_reg_1
    );
\sig_init_done_i_1__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      I1 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_4,
      O => \sig_init_done_i_1__11_n_0\
    );
\sig_init_done_i_1__12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      I1 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_3,
      O => sig_init_done_reg_2
    );
\sig_init_done_i_1__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      I1 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_1,
      O => sig_init_done_reg_3
    );
\sig_init_done_i_1__14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      I1 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done_2,
      O => sig_init_done_reg_4
    );
\sig_init_done_i_1__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      I1 => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_init_done,
      O => sig_init_done_reg_0
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_init_done_i_1__11_n_0\,
      Q => sig_init_done_4,
      R => '0'
    );
sig_init_reg2_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      Q => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg2\,
      S => sig_stream_rst
    );
sig_init_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_stream_rst,
      Q => \I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_reg\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_fifo_33 is
  port (
    sig_init_done : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]_0\ : out STD_LOGIC;
    sig_load_input_cmd : out STD_LOGIC;
    sig_btt_is_zero : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 26 downto 0 );
    sig_init_reg_reg : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    s_axis_ftch_cmd_tvalid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    sig_addr2rsc_cmd_fifo_empty : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 25 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_fifo_33 : entity is "axi_sg_fifo";
end axi_dma_ctrl_axi_sg_fifo_33;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_fifo_33 is
  signal \^q\ : STD_LOGIC_VECTOR ( 26 downto 0 );
  signal \^use_single_reg.sig_regfifo_dout_reg_reg[23]_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__3_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__3_n_0\ : STD_LOGIC;
  signal sig_cmd2mstr_cmd_valid : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
  signal sig_push_regfifo : STD_LOGIC;
begin
  Q(26 downto 0) <= \^q\(26 downto 0);
  \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]_0\ <= \^use_single_reg.sig_regfifo_dout_reg_reg[23]_0\;
  sig_init_done <= \^sig_init_done\;
\USE_SINGLE_REG.sig_regfifo_dout_reg[63]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^use_single_reg.sig_regfifo_dout_reg_reg[23]_0\,
      I1 => s_axis_ftch_cmd_tvalid,
      O => sig_push_regfifo
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => '1',
      Q => \^q\(0),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(0),
      Q => \^q\(1),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(1),
      Q => \^q\(2),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(2),
      Q => \^q\(3),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(3),
      Q => \^q\(4),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(4),
      Q => \^q\(5),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(5),
      Q => \^q\(6),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(6),
      Q => \^q\(7),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(7),
      Q => \^q\(8),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(8),
      Q => \^q\(9),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(9),
      Q => \^q\(10),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(10),
      Q => \^q\(11),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(11),
      Q => \^q\(12),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(12),
      Q => \^q\(13),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(13),
      Q => \^q\(14),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(14),
      Q => \^q\(15),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(15),
      Q => \^q\(16),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(16),
      Q => \^q\(17),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(17),
      Q => \^q\(18),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(18),
      Q => \^q\(19),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(19),
      Q => \^q\(20),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(20),
      Q => \^q\(21),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(21),
      Q => \^q\(22),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(22),
      Q => \^q\(23),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(23),
      Q => \^q\(24),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(24),
      Q => \^q\(25),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(25),
      Q => \^q\(26),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFF4444444"
    )
        port map (
      I0 => s_axis_ftch_cmd_tvalid,
      I1 => \^use_single_reg.sig_regfifo_dout_reg_reg[23]_0\,
      I2 => sig_addr2rsc_cmd_fifo_empty,
      I3 => sig_cmd_reg_empty,
      I4 => sig_cmd2mstr_cmd_valid,
      I5 => \^sig_init_done\,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__3_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__3_n_0\,
      Q => \^use_single_reg.sig_regfifo_dout_reg_reg[23]_0\,
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080F080F080F080"
    )
        port map (
      I0 => s_axis_ftch_cmd_tvalid,
      I1 => \^use_single_reg.sig_regfifo_dout_reg_reg[23]_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      I3 => sig_cmd2mstr_cmd_valid,
      I4 => sig_cmd_reg_empty,
      I5 => sig_addr2rsc_cmd_fifo_empty,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__3_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__3_n_0\,
      Q => sig_cmd2mstr_cmd_valid,
      R => '0'
    );
\sig_btt_is_zero_reg_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => sig_btt_is_zero
    );
sig_cmd_reg_empty_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => sig_cmd2mstr_cmd_valid,
      I1 => sig_cmd_reg_empty,
      O => sig_load_input_cmd
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_sg_fifo__parameterized0\ is
  port (
    sig_init_done : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]_0\ : out STD_LOGIC;
    updt_done_reg : out STD_LOGIC;
    updt_decerr_i : out STD_LOGIC;
    updt_interr_i : out STD_LOGIC;
    updt_slverr_i : out STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    sig_wsc2stat_status_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_sg_fifo__parameterized0\ : entity is "axi_sg_fifo";
end \axi_dma_ctrl_axi_sg_fifo__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_axi_sg_fifo__parameterized0\ is
  signal \^use_single_reg.sig_regfifo_dout_reg_reg[4]_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__6_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__6_n_0\ : STD_LOGIC;
  signal m_axis_updt_sts_tdata : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal m_axis_updt_sts_tvalid : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
  signal sig_push_regfifo : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of updt_decerr_i_i_1 : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of updt_interr_i_i_1 : label is "soft_lutpair53";
begin
  \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]_0\ <= \^use_single_reg.sig_regfifo_dout_reg_reg[4]_0\;
  sig_init_done <= \^sig_init_done\;
\USE_SINGLE_REG.sig_regfifo_dout_reg[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^use_single_reg.sig_regfifo_dout_reg_reg[4]_0\,
      I1 => sig_wsc2stat_status_valid,
      O => sig_push_regfifo
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(0),
      Q => m_axis_updt_sts_tdata(4),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(1),
      Q => m_axis_updt_sts_tdata(5),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(2),
      Q => m_axis_updt_sts_tdata(6),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_regfifo,
      D => D(3),
      Q => m_axis_updt_sts_tdata(7),
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F8FFF8F8"
    )
        port map (
      I0 => p_18_out,
      I1 => m_axis_updt_sts_tvalid,
      I2 => \^sig_init_done\,
      I3 => sig_wsc2stat_status_valid,
      I4 => \^use_single_reg.sig_regfifo_dout_reg_reg[4]_0\,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__6_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__6_n_0\,
      Q => \^use_single_reg.sig_regfifo_dout_reg_reg[4]_0\,
      R => sig_stream_rst
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0080F080"
    )
        port map (
      I0 => sig_wsc2stat_status_valid,
      I1 => \^use_single_reg.sig_regfifo_dout_reg_reg[4]_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => m_axis_updt_sts_tvalid,
      I4 => p_18_out,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__6_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__6_n_0\,
      Q => m_axis_updt_sts_tvalid,
      R => '0'
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
updt_decerr_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axis_updt_sts_tvalid,
      I1 => m_axis_updt_sts_tdata(5),
      O => updt_decerr_i
    );
updt_done_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFE000000000000"
    )
        port map (
      I0 => m_axis_updt_sts_tdata(5),
      I1 => m_axis_updt_sts_tdata(4),
      I2 => m_axis_updt_sts_tdata(6),
      I3 => m_axis_updt_sts_tdata(7),
      I4 => m_axi_sg_aresetn,
      I5 => m_axis_updt_sts_tvalid,
      O => updt_done_reg
    );
updt_interr_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axis_updt_sts_tvalid,
      I1 => m_axis_updt_sts_tdata(4),
      O => updt_interr_i
    );
updt_slverr_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axis_updt_sts_tvalid,
      I1 => m_axis_updt_sts_tdata(6),
      O => updt_slverr_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_sg_fifo__parameterized0_32\ is
  port (
    sig_init_done_0 : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg_0\ : out STD_LOGIC;
    ftch_done_reg : out STD_LOGIC;
    ftch_decerr_i : out STD_LOGIC;
    ftch_slverr_i : out STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    sig_rd_sts_okay_reg : in STD_LOGIC;
    sig_rsc2stat_status : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_sg_fifo__parameterized0_32\ : entity is "axi_sg_fifo";
end \axi_dma_ctrl_axi_sg_fifo__parameterized0_32\;

architecture STRUCTURE of \axi_dma_ctrl_axi_sg_fifo__parameterized0_32\ is
  signal \USE_SINGLE_REG.sig_regfifo_dout_reg[5]_i_1_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_dout_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__4_n_0\ : STD_LOGIC;
  signal \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__4_n_0\ : STD_LOGIC;
  signal \^use_single_reg.sig_regfifo_full_reg_reg_0\ : STD_LOGIC;
  signal m_axis_ftch_sts_tdata : STD_LOGIC_VECTOR ( 7 downto 5 );
  signal m_axis_ftch_sts_tvalid : STD_LOGIC;
  signal \^sig_init_done_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \USE_SINGLE_REG.sig_regfifo_dout_reg[5]_i_1\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \USE_SINGLE_REG.sig_regfifo_dout_reg[7]_i_1\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of ftch_decerr_i_i_1 : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of ftch_done_i_1 : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of ftch_slverr_i_i_1 : label is "soft_lutpair50";
begin
  \USE_SINGLE_REG.sig_regfifo_full_reg_reg_0\ <= \^use_single_reg.sig_regfifo_full_reg_reg_0\;
  sig_init_done_0 <= \^sig_init_done_0\;
\USE_SINGLE_REG.sig_regfifo_dout_reg[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => sig_rsc2stat_status(0),
      I1 => \^use_single_reg.sig_regfifo_full_reg_reg_0\,
      I2 => sig_rsc2stat_status_valid,
      I3 => m_axis_ftch_sts_tdata(5),
      O => \USE_SINGLE_REG.sig_regfifo_dout_reg[5]_i_1_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => sig_rsc2stat_status(1),
      I1 => \^use_single_reg.sig_regfifo_full_reg_reg_0\,
      I2 => sig_rsc2stat_status_valid,
      I3 => m_axis_ftch_sts_tdata(6),
      O => \USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => sig_rd_sts_okay_reg,
      I1 => \^use_single_reg.sig_regfifo_full_reg_reg_0\,
      I2 => sig_rsc2stat_status_valid,
      I3 => m_axis_ftch_sts_tdata(7),
      O => \USE_SINGLE_REG.sig_regfifo_dout_reg[7]_i_1_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_dout_reg[5]_i_1_n_0\,
      Q => m_axis_ftch_sts_tdata(5),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_dout_reg[6]_i_1_n_0\,
      Q => m_axis_ftch_sts_tdata(6),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_dout_reg[7]_i_1_n_0\,
      Q => m_axis_ftch_sts_tdata(7),
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF444"
    )
        port map (
      I0 => sig_rsc2stat_status_valid,
      I1 => \^use_single_reg.sig_regfifo_full_reg_reg_0\,
      I2 => m_axis_ftch_sts_tvalid,
      I3 => p_18_out,
      I4 => \^sig_init_done_0\,
      O => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__4_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_empty_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__4_n_0\,
      Q => \^use_single_reg.sig_regfifo_full_reg_reg_0\,
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00F08080"
    )
        port map (
      I0 => sig_rsc2stat_status_valid,
      I1 => \^use_single_reg.sig_regfifo_full_reg_reg_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      I3 => p_18_out,
      I4 => m_axis_ftch_sts_tvalid,
      O => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__4_n_0\
    );
\USE_SINGLE_REG.sig_regfifo_full_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__4_n_0\,
      Q => m_axis_ftch_sts_tvalid,
      R => '0'
    );
ftch_decerr_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axis_ftch_sts_tvalid,
      I1 => m_axis_ftch_sts_tdata(5),
      O => ftch_decerr_i
    );
ftch_done_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axis_ftch_sts_tdata(7),
      I1 => m_axis_ftch_sts_tvalid,
      O => ftch_done_reg
    );
ftch_slverr_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axis_ftch_sts_tvalid,
      I1 => m_axis_ftch_sts_tdata(6),
      O => ftch_slverr_i
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => \^sig_init_done_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_ftch_cmdsts_if is
  port (
    p_18_out : out STD_LOGIC;
    ftch_done : out STD_LOGIC;
    ftch_decerr : out STD_LOGIC;
    ftch_slverr : out STD_LOGIC;
    s_axis_ftch_cmd_tvalid : out STD_LOGIC;
    ch1_active_set : out STD_LOGIC;
    \ftch_cs_reg[0]\ : out STD_LOGIC;
    ftch_error_reg_0 : out STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ : out STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_0\ : out STD_LOGIC;
    p_3_out : out STD_LOGIC;
    s2mm_halted_set0 : out STD_LOGIC;
    s2mm_halted_set_reg : out STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_1\ : out STD_LOGIC;
    s2mm_all_idle : out STD_LOGIC;
    p_1_out : out STD_LOGIC;
    \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ : out STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\ : in STD_LOGIC;
    ftch_decerr_i : in STD_LOGIC;
    ftch_slverr_i : in STD_LOGIC;
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_rvalid : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_CH2_FETCH.ch2_active_i_reg\ : in STD_LOGIC;
    ch1_ftch_pause : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    packet_in_progress_reg : in STD_LOGIC;
    \dmacr_i_reg[0]\ : in STD_LOGIC;
    p_55_out : in STD_LOGIC;
    dma_mm2s_error : in STD_LOGIC;
    p_5_out : in STD_LOGIC;
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_halt_cmplt : in STD_LOGIC;
    p_28_out : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    p_34_out : in STD_LOGIC;
    cmnds_queued_shift : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    \GEN_S2MM.queue_empty2_new_reg\ : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    p_29_out : in STD_LOGIC;
    dma_s2mm_error : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_ftch_cmdsts_if : entity is "axi_sg_ftch_cmdsts_if";
end axi_dma_ctrl_axi_sg_ftch_cmdsts_if;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_ftch_cmdsts_if is
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_4_n_0\ : STD_LOGIC;
  signal \^gen_s2mm_dma_control.s2mm_stop_reg\ : STD_LOGIC;
  signal \^gen_s2mm_dma_control.s2mm_stop_reg_0\ : STD_LOGIC;
  signal \^gen_s2mm_dma_control.s2mm_stop_reg_1\ : STD_LOGIC;
  signal \^ftch_cs_reg[0]\ : STD_LOGIC;
  signal \^ftch_decerr\ : STD_LOGIC;
  signal \^ftch_done\ : STD_LOGIC;
  signal ftch_error_early : STD_LOGIC;
  signal ftch_error_early_i_1_n_0 : STD_LOGIC;
  signal ftch_error_i_1_n_0 : STD_LOGIC;
  signal \^ftch_error_reg_0\ : STD_LOGIC;
  signal \^ftch_slverr\ : STD_LOGIC;
  signal \^s2mm_halted_set_reg\ : STD_LOGIC;
  signal sg_rresp : STD_LOGIC_VECTOR ( 1 to 1 );
  signal sg_rvalid : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_2\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_3\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_2__0\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \QUEUE_COUNT.cmnds_queued_shift[3]_i_4\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \i__i_1__1\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of s2mm_halted_set_i_1 : label is "soft_lutpair74";
begin
  \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ <= \^gen_s2mm_dma_control.s2mm_stop_reg\;
  \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_0\ <= \^gen_s2mm_dma_control.s2mm_stop_reg_0\;
  \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_1\ <= \^gen_s2mm_dma_control.s2mm_stop_reg_1\;
  \ftch_cs_reg[0]\ <= \^ftch_cs_reg[0]\;
  ftch_decerr <= \^ftch_decerr\;
  ftch_done <= \^ftch_done\;
  ftch_error_reg_0 <= \^ftch_error_reg_0\;
  ftch_slverr <= \^ftch_slverr\;
  s2mm_halted_set_reg <= \^s2mm_halted_set_reg\;
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \^gen_s2mm_dma_control.s2mm_stop_reg_1\,
      I1 => s2mm_dmacr(0),
      I2 => \GEN_S2MM.queue_empty2_new_reg\,
      I3 => s_axis_s2mm_updtptr_tvalid,
      O => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\
    );
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^gen_s2mm_dma_control.s2mm_stop_reg\,
      I1 => \dmacr_i_reg[2]\,
      I2 => \dmacr_i_reg[2]_0\,
      I3 => \^gen_s2mm_dma_control.s2mm_stop_reg_0\,
      I4 => p_0_in,
      O => p_3_out
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_2__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^s2mm_halted_set_reg\,
      O => s2mm_all_idle
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFF7FFFF"
    )
        port map (
      I0 => p_28_out,
      I1 => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_4_n_0\,
      I2 => \out\(0),
      I3 => \out\(1),
      I4 => p_34_out,
      I5 => cmnds_queued_shift(0),
      O => \^s2mm_halted_set_reg\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFEF"
    )
        port map (
      I0 => s_axis_s2mm_updtptr_tvalid,
      I1 => \GEN_S2MM.queue_empty2_new_reg\,
      I2 => s2mm_dmacr(0),
      I3 => \^gen_s2mm_dma_control.s2mm_stop_reg_0\,
      I4 => soft_reset,
      I5 => \^gen_s2mm_dma_control.s2mm_stop_reg\,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_4_n_0\
    );
\GEN_CH2_FETCH.ch2_active_i_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000A200000022"
    )
        port map (
      I0 => \^ftch_cs_reg[0]\,
      I1 => Q(1),
      I2 => \GEN_CH2_FETCH.ch2_active_i_reg\,
      I3 => Q(0),
      I4 => \^ftch_error_reg_0\,
      I5 => \^ftch_done\,
      O => ch1_active_set
    );
\QUEUE_COUNT.cmnds_queued_shift[3]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^gen_s2mm_dma_control.s2mm_stop_reg_1\,
      I1 => s2mm_scndry_resetn,
      O => p_1_out
    );
\ftch_cs[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => ch1_ftch_pause,
      I1 => \^gen_s2mm_dma_control.s2mm_stop_reg\,
      I2 => \^gen_s2mm_dma_control.s2mm_stop_reg_0\,
      I3 => soft_reset,
      I4 => packet_in_progress_reg,
      I5 => \dmacr_i_reg[0]\,
      O => \^ftch_cs_reg[0]\
    );
ftch_decerr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ftch_decerr_i,
      Q => \^ftch_decerr\,
      R => SR(0)
    );
ftch_done_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\,
      Q => \^ftch_done\,
      R => SR(0)
    );
ftch_error_early_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => sg_rresp(1),
      I1 => sg_rvalid,
      I2 => ftch_error_early,
      O => ftch_error_early_i_1_n_0
    );
ftch_error_early_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ftch_error_early_i_1_n_0,
      Q => ftch_error_early,
      R => SR(0)
    );
ftch_error_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^ftch_decerr\,
      I1 => \^ftch_slverr\,
      I2 => \^ftch_error_reg_0\,
      O => ftch_error_i_1_n_0
    );
ftch_error_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ftch_error_i_1_n_0,
      Q => \^ftch_error_reg_0\,
      R => SR(0)
    );
ftch_slverr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ftch_slverr_i,
      Q => \^ftch_slverr\,
      R => SR(0)
    );
\i__i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^gen_s2mm_dma_control.s2mm_stop_reg_0\,
      I1 => \dmacr_i_reg[2]_0\,
      I2 => \dmacr_i_reg[2]\,
      I3 => \^gen_s2mm_dma_control.s2mm_stop_reg\,
      O => \^gen_s2mm_dma_control.s2mm_stop_reg_1\
    );
\i__i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFEFFFEFFFE"
    )
        port map (
      I0 => \^ftch_error_reg_0\,
      I1 => p_55_out,
      I2 => dma_mm2s_error,
      I3 => p_5_out,
      I4 => ftch_error_early,
      I5 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      O => \^gen_s2mm_dma_control.s2mm_stop_reg_0\
    );
\i__i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFEFEFE"
    )
        port map (
      I0 => \^ftch_error_reg_0\,
      I1 => p_29_out,
      I2 => dma_s2mm_error,
      I3 => \GEN_CH2_FETCH.ch2_active_i_reg\,
      I4 => ftch_error_early,
      I5 => p_5_out,
      O => \^gen_s2mm_dma_control.s2mm_stop_reg\
    );
m_axis_ftch_sts_tready_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => m_axi_sg_aresetn,
      Q => p_18_out,
      R => '0'
    );
s2mm_halted_set_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1101"
    )
        port map (
      I0 => s2mm_dmacr(0),
      I1 => \^s2mm_halted_set_reg\,
      I2 => \^gen_s2mm_dma_control.s2mm_stop_reg_1\,
      I3 => s2mm_halt_cmplt,
      O => s2mm_halted_set0
    );
s_axis_ftch_cmd_tvalid_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      Q => s_axis_ftch_cmd_tvalid,
      R => SR(0)
    );
\sg_rresp_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => m_axi_sg_rresp(0),
      Q => sg_rresp(1),
      R => SR(0)
    );
sg_rvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => m_axi_sg_rvalid,
      Q => sg_rvalid,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_ftch_pntr is
  port (
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    ch1_use_crntdesc : out STD_LOGIC;
    ch1_sg_idle : out STD_LOGIC;
    ch2_use_crntdesc : out STD_LOGIC;
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\ : out STD_LOGIC;
    \ftch_cs_reg[0]\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[29]\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    \ftch_error_addr_reg[29]_0\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ : in STD_LOGIC;
    ch2_nxtdesc_wren : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    ch1_nxtdesc_wren : in STD_LOGIC;
    p_5_out : in STD_LOGIC;
    p_55_out : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC;
    \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_ftch_pntr : entity is "axi_sg_ftch_pntr";
end axi_dma_ctrl_axi_sg_ftch_pntr;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_ftch_pntr is
  signal \GEN_PNTR_FOR_CH1.ch1_use_crntdesc_i_1_n_0\ : STD_LOGIC;
  signal \GEN_PNTR_FOR_CH2.ch2_sg_idle_i_1_n_0\ : STD_LOGIC;
  signal \^gen_pntr_for_ch2.ch2_sg_idle_reg_0\ : STD_LOGIC;
  signal \GEN_PNTR_FOR_CH2.ch2_use_crntdesc_i_1_n_0\ : STD_LOGIC;
  signal ch1_fetch_address_i : STD_LOGIC_VECTOR ( 31 downto 30 );
  signal ch1_run_stop_d1 : STD_LOGIC;
  signal \^ch1_sg_idle\ : STD_LOGIC;
  signal \^ch1_use_crntdesc\ : STD_LOGIC;
  signal ch2_fetch_address_i : STD_LOGIC_VECTOR ( 31 downto 30 );
  signal ch2_run_stop_d1 : STD_LOGIC;
  signal \^ch2_use_crntdesc\ : STD_LOGIC;
  signal \^ftch_error_addr_reg[29]\ : STD_LOGIC_VECTOR ( 23 downto 0 );
  signal \^ftch_error_addr_reg[29]_0\ : STD_LOGIC_VECTOR ( 23 downto 0 );
  signal p_0_out : STD_LOGIC;
  signal \p_0_out_carry__0_n_0\ : STD_LOGIC;
  signal \p_0_out_carry__0_n_1\ : STD_LOGIC;
  signal \p_0_out_carry__0_n_2\ : STD_LOGIC;
  signal \p_0_out_carry__0_n_3\ : STD_LOGIC;
  signal \p_0_out_carry__1_i_1_n_0\ : STD_LOGIC;
  signal \p_0_out_carry__1_n_2\ : STD_LOGIC;
  signal \p_0_out_carry__1_n_3\ : STD_LOGIC;
  signal p_0_out_carry_n_0 : STD_LOGIC;
  signal p_0_out_carry_n_1 : STD_LOGIC;
  signal p_0_out_carry_n_2 : STD_LOGIC;
  signal p_0_out_carry_n_3 : STD_LOGIC;
  signal \p_1_out_carry__0_n_0\ : STD_LOGIC;
  signal \p_1_out_carry__0_n_1\ : STD_LOGIC;
  signal \p_1_out_carry__0_n_2\ : STD_LOGIC;
  signal \p_1_out_carry__0_n_3\ : STD_LOGIC;
  signal \p_1_out_carry__1_i_1_n_0\ : STD_LOGIC;
  signal \p_1_out_carry__1_n_2\ : STD_LOGIC;
  signal \p_1_out_carry__1_n_3\ : STD_LOGIC;
  signal p_1_out_carry_n_0 : STD_LOGIC;
  signal p_1_out_carry_n_1 : STD_LOGIC;
  signal p_1_out_carry_n_2 : STD_LOGIC;
  signal p_1_out_carry_n_3 : STD_LOGIC;
  signal NLW_p_0_out_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_p_0_out_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_p_0_out_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_p_0_out_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_p_1_out_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_p_1_out_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_p_1_out_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_p_1_out_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \ftch_error_addr[10]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \ftch_error_addr[11]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \ftch_error_addr[12]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \ftch_error_addr[13]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \ftch_error_addr[14]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \ftch_error_addr[15]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \ftch_error_addr[16]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \ftch_error_addr[17]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \ftch_error_addr[18]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \ftch_error_addr[19]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \ftch_error_addr[20]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \ftch_error_addr[21]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \ftch_error_addr[22]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \ftch_error_addr[23]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \ftch_error_addr[24]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \ftch_error_addr[25]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \ftch_error_addr[26]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \ftch_error_addr[27]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \ftch_error_addr[28]_i_1\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \ftch_error_addr[29]_i_1\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \ftch_error_addr[30]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \ftch_error_addr[31]_i_2\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \ftch_error_addr[6]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \ftch_error_addr[7]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \ftch_error_addr[8]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \ftch_error_addr[9]_i_1\ : label is "soft_lutpair87";
begin
  \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\ <= \^gen_pntr_for_ch2.ch2_sg_idle_reg_0\;
  ch1_sg_idle <= \^ch1_sg_idle\;
  ch1_use_crntdesc <= \^ch1_use_crntdesc\;
  ch2_use_crntdesc <= \^ch2_use_crntdesc\;
  \ftch_error_addr_reg[29]\(23 downto 0) <= \^ftch_error_addr_reg[29]\(23 downto 0);
  \ftch_error_addr_reg[29]_0\(23 downto 0) <= \^ftch_error_addr_reg[29]_0\(23 downto 0);
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(4),
      Q => \^ftch_error_addr_reg[29]\(4),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(5),
      Q => \^ftch_error_addr_reg[29]\(5),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(6),
      Q => \^ftch_error_addr_reg[29]\(6),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(7),
      Q => \^ftch_error_addr_reg[29]\(7),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(8),
      Q => \^ftch_error_addr_reg[29]\(8),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(9),
      Q => \^ftch_error_addr_reg[29]\(9),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(10),
      Q => \^ftch_error_addr_reg[29]\(10),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(11),
      Q => \^ftch_error_addr_reg[29]\(11),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(12),
      Q => \^ftch_error_addr_reg[29]\(12),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(13),
      Q => \^ftch_error_addr_reg[29]\(13),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(14),
      Q => \^ftch_error_addr_reg[29]\(14),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(15),
      Q => \^ftch_error_addr_reg[29]\(15),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(16),
      Q => \^ftch_error_addr_reg[29]\(16),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(17),
      Q => \^ftch_error_addr_reg[29]\(17),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(18),
      Q => \^ftch_error_addr_reg[29]\(18),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(19),
      Q => \^ftch_error_addr_reg[29]\(19),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(20),
      Q => \^ftch_error_addr_reg[29]\(20),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(21),
      Q => \^ftch_error_addr_reg[29]\(21),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(22),
      Q => \^ftch_error_addr_reg[29]\(22),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(23),
      Q => \^ftch_error_addr_reg[29]\(23),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(24),
      Q => ch1_fetch_address_i(30),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25),
      Q => ch1_fetch_address_i(31),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(0),
      Q => \^ftch_error_addr_reg[29]\(0),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(1),
      Q => \^ftch_error_addr_reg[29]\(1),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(2),
      Q => \^ftch_error_addr_reg[29]\(2),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(3),
      Q => \^ftch_error_addr_reg[29]\(3),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_run_stop_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_dmacr(0),
      Q => ch1_run_stop_d1,
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\,
      Q => \^ch1_sg_idle\,
      R => '0'
    );
\GEN_PNTR_FOR_CH1.ch1_use_crntdesc_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AEAEAE00"
    )
        port map (
      I0 => \^ch1_use_crntdesc\,
      I1 => mm2s_dmacr(0),
      I2 => ch1_run_stop_d1,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => ch1_nxtdesc_wren,
      O => \GEN_PNTR_FOR_CH1.ch1_use_crntdesc_i_1_n_0\
    );
\GEN_PNTR_FOR_CH1.ch1_use_crntdesc_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_PNTR_FOR_CH1.ch1_use_crntdesc_i_1_n_0\,
      Q => \^ch1_use_crntdesc\,
      R => '0'
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(4),
      Q => \^ftch_error_addr_reg[29]_0\(4),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(5),
      Q => \^ftch_error_addr_reg[29]_0\(5),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(6),
      Q => \^ftch_error_addr_reg[29]_0\(6),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(7),
      Q => \^ftch_error_addr_reg[29]_0\(7),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(8),
      Q => \^ftch_error_addr_reg[29]_0\(8),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(9),
      Q => \^ftch_error_addr_reg[29]_0\(9),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(10),
      Q => \^ftch_error_addr_reg[29]_0\(10),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(11),
      Q => \^ftch_error_addr_reg[29]_0\(11),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(12),
      Q => \^ftch_error_addr_reg[29]_0\(12),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(13),
      Q => \^ftch_error_addr_reg[29]_0\(13),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(14),
      Q => \^ftch_error_addr_reg[29]_0\(14),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(15),
      Q => \^ftch_error_addr_reg[29]_0\(15),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(16),
      Q => \^ftch_error_addr_reg[29]_0\(16),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(17),
      Q => \^ftch_error_addr_reg[29]_0\(17),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(18),
      Q => \^ftch_error_addr_reg[29]_0\(18),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(19),
      Q => \^ftch_error_addr_reg[29]_0\(19),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(20),
      Q => \^ftch_error_addr_reg[29]_0\(20),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(21),
      Q => \^ftch_error_addr_reg[29]_0\(21),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(22),
      Q => \^ftch_error_addr_reg[29]_0\(22),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(23),
      Q => \^ftch_error_addr_reg[29]_0\(23),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(24),
      Q => ch2_fetch_address_i(30),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25),
      Q => ch2_fetch_address_i(31),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(0),
      Q => \^ftch_error_addr_reg[29]_0\(0),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(1),
      Q => \^ftch_error_addr_reg[29]_0\(1),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(2),
      Q => \^ftch_error_addr_reg[29]_0\(2),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0),
      D => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(3),
      Q => \^ftch_error_addr_reg[29]_0\(3),
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_run_stop_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_dmacr(0),
      Q => ch2_run_stop_d1,
      R => SR(0)
    );
\GEN_PNTR_FOR_CH2.ch2_sg_idle_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77777555FFFFFFFF"
    )
        port map (
      I0 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      I1 => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\,
      I2 => p_0_out,
      I3 => ch2_nxtdesc_wren,
      I4 => \^gen_pntr_for_ch2.ch2_sg_idle_reg_0\,
      I5 => s2mm_dmacr(0),
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_i_1_n_0\
    );
\GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_PNTR_FOR_CH2.ch2_sg_idle_i_1_n_0\,
      Q => \^gen_pntr_for_ch2.ch2_sg_idle_reg_0\,
      R => '0'
    );
\GEN_PNTR_FOR_CH2.ch2_use_crntdesc_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AEAEAE00"
    )
        port map (
      I0 => \^ch2_use_crntdesc\,
      I1 => s2mm_dmacr(0),
      I2 => ch2_run_stop_d1,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => ch2_nxtdesc_wren,
      O => \GEN_PNTR_FOR_CH2.ch2_use_crntdesc_i_1_n_0\
    );
\GEN_PNTR_FOR_CH2.ch2_use_crntdesc_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_PNTR_FOR_CH2.ch2_use_crntdesc_i_1_n_0\,
      Q => \^ch2_use_crntdesc\,
      R => '0'
    );
\ftch_cs[0]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => mm2s_dmacr(0),
      I1 => \^ch1_sg_idle\,
      I2 => p_5_out,
      I3 => p_55_out,
      O => \ftch_cs_reg[0]\
    );
\ftch_error_addr[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(4),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(4),
      O => D(4)
    );
\ftch_error_addr[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(5),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(5),
      O => D(5)
    );
\ftch_error_addr[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(6),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(6),
      O => D(6)
    );
\ftch_error_addr[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(7),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(7),
      O => D(7)
    );
\ftch_error_addr[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(8),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(8),
      O => D(8)
    );
\ftch_error_addr[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(9),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(9),
      O => D(9)
    );
\ftch_error_addr[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(10),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(10),
      O => D(10)
    );
\ftch_error_addr[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(11),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(11),
      O => D(11)
    );
\ftch_error_addr[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(12),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(12),
      O => D(12)
    );
\ftch_error_addr[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(13),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(13),
      O => D(13)
    );
\ftch_error_addr[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(14),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(14),
      O => D(14)
    );
\ftch_error_addr[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(15),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(15),
      O => D(15)
    );
\ftch_error_addr[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(16),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(16),
      O => D(16)
    );
\ftch_error_addr[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(17),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(17),
      O => D(17)
    );
\ftch_error_addr[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(18),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(18),
      O => D(18)
    );
\ftch_error_addr[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(19),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(19),
      O => D(19)
    );
\ftch_error_addr[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(20),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(20),
      O => D(20)
    );
\ftch_error_addr[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(21),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(21),
      O => D(21)
    );
\ftch_error_addr[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(22),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(22),
      O => D(22)
    );
\ftch_error_addr[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(23),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(23),
      O => D(23)
    );
\ftch_error_addr[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ch1_fetch_address_i(30),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => ch2_fetch_address_i(30),
      O => D(24)
    );
\ftch_error_addr[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ch1_fetch_address_i(31),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => ch2_fetch_address_i(31),
      O => D(25)
    );
\ftch_error_addr[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(0),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(0),
      O => D(0)
    );
\ftch_error_addr[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(1),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(1),
      O => D(1)
    );
\ftch_error_addr[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(2),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(2),
      O => D(2)
    );
\ftch_error_addr[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ftch_error_addr_reg[29]\(3),
      I1 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      I2 => \^ftch_error_addr_reg[29]_0\(3),
      O => D(3)
    );
p_0_out_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => p_0_out_carry_n_0,
      CO(2) => p_0_out_carry_n_1,
      CO(1) => p_0_out_carry_n_2,
      CO(0) => p_0_out_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_p_0_out_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 2) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(1 downto 0),
      S(1 downto 0) => B"11"
    );
\p_0_out_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => p_0_out_carry_n_0,
      CO(3) => \p_0_out_carry__0_n_0\,
      CO(2) => \p_0_out_carry__0_n_1\,
      CO(1) => \p_0_out_carry__0_n_2\,
      CO(0) => \p_0_out_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_p_0_out_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(3 downto 0)
    );
\p_0_out_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \p_0_out_carry__0_n_0\,
      CO(3) => \NLW_p_0_out_carry__1_CO_UNCONNECTED\(3),
      CO(2) => p_0_out,
      CO(1) => \p_0_out_carry__1_n_2\,
      CO(0) => \p_0_out_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_p_0_out_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \p_0_out_carry__1_i_1_n_0\,
      S(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(1 downto 0)
    );
\p_0_out_carry__1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => ch2_fetch_address_i(31),
      I1 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(1),
      I2 => ch2_fetch_address_i(30),
      I3 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(0),
      O => \p_0_out_carry__1_i_1_n_0\
    );
p_1_out_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => p_1_out_carry_n_0,
      CO(2) => p_1_out_carry_n_1,
      CO(1) => p_1_out_carry_n_2,
      CO(0) => p_1_out_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_p_1_out_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 2) => S(1 downto 0),
      S(1 downto 0) => B"11"
    );
\p_1_out_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => p_1_out_carry_n_0,
      CO(3) => \p_1_out_carry__0_n_0\,
      CO(2) => \p_1_out_carry__0_n_1\,
      CO(1) => \p_1_out_carry__0_n_2\,
      CO(0) => \p_1_out_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_p_1_out_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(3 downto 0)
    );
\p_1_out_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \p_1_out_carry__0_n_0\,
      CO(3) => \NLW_p_1_out_carry__1_CO_UNCONNECTED\(3),
      CO(2) => CO(0),
      CO(1) => \p_1_out_carry__1_n_2\,
      CO(0) => \p_1_out_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_p_1_out_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \p_1_out_carry__1_i_1_n_0\,
      S(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(1 downto 0)
    );
\p_1_out_carry__1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => ch1_fetch_address_i(31),
      I1 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1),
      I2 => ch1_fetch_address_i(30),
      I3 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(0),
      O => \p_1_out_carry__1_i_1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_ftch_queue is
  port (
    ch1_ftch_queue_empty : out STD_LOGIC;
    ch1_ftch_pause : out STD_LOGIC;
    ch2_ftch_queue_empty : out STD_LOGIC;
    \GEN_S2MM.reg2_reg[0]_0\ : out STD_LOGIC;
    \updt_desc_reg0_reg[6]\ : out STD_LOGIC;
    p_10_out : out STD_LOGIC;
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ : out STD_LOGIC;
    packet_in_progress_reg : out STD_LOGIC;
    \updt_desc_reg0_reg[31]\ : out STD_LOGIC_VECTOR ( 66 downto 0 );
    \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ : out STD_LOGIC;
    \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ : out STD_LOGIC;
    updt_data_reg : out STD_LOGIC;
    \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ : out STD_LOGIC;
    \updt_desc_reg0_reg[31]_0\ : out STD_LOGIC_VECTOR ( 66 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg_0\ : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    ch2_ftch_active : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_rvalid : in STD_LOGIC;
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    queue_rden_new : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    queue_rden2_new : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    ptr_queue_full : in STD_LOGIC;
    s_axis_mm2s_cmd_tready : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    ptr2_queue_full : in STD_LOGIC;
    s_axis_s2mm_cmd_tready : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \ftch_cs_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \dmacr_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \dmacr_i_reg[4]\ : in STD_LOGIC_VECTOR ( 41 downto 0 );
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_ftch_queue : entity is "axi_sg_ftch_queue";
end axi_dma_ctrl_axi_sg_ftch_queue;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_ftch_queue is
  signal \GEN_MM2S.queue_empty_new_i_1_n_0\ : STD_LOGIC;
  signal \GEN_MM2S.queue_full_new_i_1_n_0\ : STD_LOGIC;
  signal \GEN_S2MM.queue_empty2_new_i_1_n_0\ : STD_LOGIC;
  signal \GEN_S2MM.queue_full2_new_i_1_n_0\ : STD_LOGIC;
  signal \^gen_s2mm.reg2_reg[0]_0\ : STD_LOGIC;
  signal \^ch1_ftch_pause\ : STD_LOGIC;
  signal \^ch1_ftch_queue_empty\ : STD_LOGIC;
  signal \^ch2_ftch_queue_empty\ : STD_LOGIC;
  signal current_bd : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal \^p_10_out\ : STD_LOGIC;
  signal p_39_out : STD_LOGIC_VECTOR ( 59 to 59 );
  signal queue_wren2_new : STD_LOGIC;
  signal queue_wren_new : STD_LOGIC;
  signal reg1 : STD_LOGIC_VECTOR ( 90 downto 0 );
  signal reg2 : STD_LOGIC_VECTOR ( 90 downto 0 );
  signal \^updt_desc_reg0_reg[31]\ : STD_LOGIC_VECTOR ( 66 downto 0 );
  signal \^updt_desc_reg0_reg[31]_0\ : STD_LOGIC_VECTOR ( 66 downto 0 );
  signal \^updt_desc_reg0_reg[6]\ : STD_LOGIC;
begin
  \GEN_S2MM.reg2_reg[0]_0\ <= \^gen_s2mm.reg2_reg[0]_0\;
  ch1_ftch_pause <= \^ch1_ftch_pause\;
  ch1_ftch_queue_empty <= \^ch1_ftch_queue_empty\;
  ch2_ftch_queue_empty <= \^ch2_ftch_queue_empty\;
  p_10_out <= \^p_10_out\;
  \updt_desc_reg0_reg[31]\(66 downto 0) <= \^updt_desc_reg0_reg[31]\(66 downto 0);
  \updt_desc_reg0_reg[31]_0\(66 downto 0) <= \^updt_desc_reg0_reg[31]_0\(66 downto 0);
  \updt_desc_reg0_reg[6]\ <= \^updt_desc_reg0_reg[6]\;
\CURRENT_BD_32.current_bd_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(4),
      Q => current_bd(10),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(5),
      Q => current_bd(11),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(6),
      Q => current_bd(12),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(7),
      Q => current_bd(13),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(8),
      Q => current_bd(14),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(9),
      Q => current_bd(15),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(10),
      Q => current_bd(16),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(11),
      Q => current_bd(17),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(12),
      Q => current_bd(18),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(13),
      Q => current_bd(19),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(14),
      Q => current_bd(20),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(15),
      Q => current_bd(21),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(16),
      Q => current_bd(22),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(17),
      Q => current_bd(23),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(18),
      Q => current_bd(24),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(19),
      Q => current_bd(25),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(20),
      Q => current_bd(26),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(21),
      Q => current_bd(27),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(22),
      Q => current_bd(28),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(23),
      Q => current_bd(29),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(24),
      Q => current_bd(30),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(25),
      Q => current_bd(31),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(0),
      Q => current_bd(6),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(1),
      Q => current_bd(7),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(2),
      Q => current_bd(8),
      R => SR(0)
    );
\CURRENT_BD_32.current_bd_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \ftch_cs_reg[1]\(0),
      D => D(3),
      Q => current_bd(9),
      R => SR(0)
    );
\GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \^updt_desc_reg0_reg[31]_0\(40),
      I1 => \^p_10_out\,
      I2 => s_axis_s2mm_cmd_tready,
      I3 => s_axis_s2mm_cmd_tvalid_split,
      O => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\
    );
\GEN_MM2S.queue_dout_new_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(0),
      Q => \^updt_desc_reg0_reg[31]\(0),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(10),
      Q => \^updt_desc_reg0_reg[31]\(10),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(11),
      Q => \^updt_desc_reg0_reg[31]\(11),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(12),
      Q => \^updt_desc_reg0_reg[31]\(12),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(13),
      Q => \^updt_desc_reg0_reg[31]\(13),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(14),
      Q => \^updt_desc_reg0_reg[31]\(14),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(15),
      Q => \^updt_desc_reg0_reg[31]\(15),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(16),
      Q => \^updt_desc_reg0_reg[31]\(16),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(17),
      Q => \^updt_desc_reg0_reg[31]\(17),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(18),
      Q => \^updt_desc_reg0_reg[31]\(18),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(19),
      Q => \^updt_desc_reg0_reg[31]\(19),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(1),
      Q => \^updt_desc_reg0_reg[31]\(1),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(20),
      Q => \^updt_desc_reg0_reg[31]\(20),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(21),
      Q => \^updt_desc_reg0_reg[31]\(21),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(22),
      Q => \^updt_desc_reg0_reg[31]\(22),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(23),
      Q => \^updt_desc_reg0_reg[31]\(23),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(24),
      Q => \^updt_desc_reg0_reg[31]\(24),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(25),
      Q => \^updt_desc_reg0_reg[31]\(25),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(26),
      Q => \^updt_desc_reg0_reg[31]\(26),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(27),
      Q => \^updt_desc_reg0_reg[31]\(27),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(28),
      Q => \^updt_desc_reg0_reg[31]\(28),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(29),
      Q => \^updt_desc_reg0_reg[31]\(29),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(2),
      Q => \^updt_desc_reg0_reg[31]\(2),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(30),
      Q => \^updt_desc_reg0_reg[31]\(30),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(31),
      Q => \^updt_desc_reg0_reg[31]\(31),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(32),
      Q => \^updt_desc_reg0_reg[31]\(32),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(33),
      Q => \^updt_desc_reg0_reg[31]\(33),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(34),
      Q => \^updt_desc_reg0_reg[31]\(34),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(35),
      Q => \^updt_desc_reg0_reg[31]\(35),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(36),
      Q => \^updt_desc_reg0_reg[31]\(36),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(37),
      Q => \^updt_desc_reg0_reg[31]\(37),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(38),
      Q => \^updt_desc_reg0_reg[31]\(38),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(3),
      Q => \^updt_desc_reg0_reg[31]\(3),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(4),
      Q => \^updt_desc_reg0_reg[31]\(4),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(58),
      Q => \^updt_desc_reg0_reg[31]\(39),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(59),
      Q => p_39_out(59),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(5),
      Q => \^updt_desc_reg0_reg[31]\(5),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(64),
      Q => \^updt_desc_reg0_reg[31]\(40),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(65),
      Q => \^updt_desc_reg0_reg[31]\(41),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(66),
      Q => \^updt_desc_reg0_reg[31]\(42),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(67),
      Q => \^updt_desc_reg0_reg[31]\(43),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(68),
      Q => \^updt_desc_reg0_reg[31]\(44),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(69),
      Q => \^updt_desc_reg0_reg[31]\(45),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(6),
      Q => \^updt_desc_reg0_reg[31]\(6),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(70),
      Q => \^updt_desc_reg0_reg[31]\(46),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(71),
      Q => \^updt_desc_reg0_reg[31]\(47),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(72),
      Q => \^updt_desc_reg0_reg[31]\(48),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(73),
      Q => \^updt_desc_reg0_reg[31]\(49),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(74),
      Q => \^updt_desc_reg0_reg[31]\(50),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(75),
      Q => \^updt_desc_reg0_reg[31]\(51),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(76),
      Q => \^updt_desc_reg0_reg[31]\(52),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(77),
      Q => \^updt_desc_reg0_reg[31]\(53),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(78),
      Q => \^updt_desc_reg0_reg[31]\(54),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(79),
      Q => \^updt_desc_reg0_reg[31]\(55),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(7),
      Q => \^updt_desc_reg0_reg[31]\(7),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(80),
      Q => \^updt_desc_reg0_reg[31]\(56),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(81),
      Q => \^updt_desc_reg0_reg[31]\(57),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(82),
      Q => \^updt_desc_reg0_reg[31]\(58),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(83),
      Q => \^updt_desc_reg0_reg[31]\(59),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(84),
      Q => \^updt_desc_reg0_reg[31]\(60),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(85),
      Q => \^updt_desc_reg0_reg[31]\(61),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(86),
      Q => \^updt_desc_reg0_reg[31]\(62),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(87),
      Q => \^updt_desc_reg0_reg[31]\(63),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(88),
      Q => \^updt_desc_reg0_reg[31]\(64),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(89),
      Q => \^updt_desc_reg0_reg[31]\(65),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(8),
      Q => \^updt_desc_reg0_reg[31]\(8),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(90),
      Q => \^updt_desc_reg0_reg[31]\(66),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_new_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden_new,
      D => reg1(9),
      Q => \^updt_desc_reg0_reg[31]\(9),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.queue_dout_valid_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_MM2S.queue_dout_valid_reg_0\,
      Q => \^updt_desc_reg0_reg[6]\,
      R => '0'
    );
\GEN_MM2S.queue_empty_new_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF2F"
    )
        port map (
      I0 => \^ch1_ftch_queue_empty\,
      I1 => queue_wren_new,
      I2 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      I3 => queue_rden_new,
      O => \GEN_MM2S.queue_empty_new_i_1_n_0\
    );
\GEN_MM2S.queue_empty_new_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_MM2S.queue_empty_new_i_1_n_0\,
      Q => \^ch1_ftch_queue_empty\,
      R => '0'
    );
\GEN_MM2S.queue_full_new_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EAAA0000"
    )
        port map (
      I0 => \^ch1_ftch_pause\,
      I1 => Q(2),
      I2 => m_axi_sg_rvalid,
      I3 => \GEN_CH1_FETCH.ch1_active_i_reg\(0),
      I4 => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      I5 => queue_rden_new,
      O => \GEN_MM2S.queue_full_new_i_1_n_0\
    );
\GEN_MM2S.queue_full_new_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_MM2S.queue_full_new_i_1_n_0\,
      Q => \^ch1_ftch_pause\,
      R => '0'
    );
\GEN_MM2S.reg1[90]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => Q(2),
      I1 => m_axi_sg_rvalid,
      I2 => \GEN_CH1_FETCH.ch1_active_i_reg\(0),
      I3 => \^ch1_ftch_pause\,
      O => queue_wren_new
    );
\GEN_MM2S.reg1_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(0),
      Q => reg1(0),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(10),
      Q => reg1(10),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(11),
      Q => reg1(11),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(12),
      Q => reg1(12),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(13),
      Q => reg1(13),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(14),
      Q => reg1(14),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(15),
      Q => reg1(15),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(16),
      Q => reg1(16),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(17),
      Q => reg1(17),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(18),
      Q => reg1(18),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(19),
      Q => reg1(19),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(1),
      Q => reg1(1),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(20),
      Q => reg1(20),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(21),
      Q => reg1(21),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(22),
      Q => reg1(22),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(23),
      Q => reg1(23),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(24),
      Q => reg1(24),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(25),
      Q => reg1(25),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(26),
      Q => reg1(26),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(27),
      Q => reg1(27),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(28),
      Q => reg1(28),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(29),
      Q => reg1(29),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(2),
      Q => reg1(2),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(30),
      Q => reg1(30),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(31),
      Q => reg1(31),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(32),
      Q => reg1(32),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(33),
      Q => reg1(33),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(34),
      Q => reg1(34),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(35),
      Q => reg1(35),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(36),
      Q => reg1(36),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(37),
      Q => reg1(37),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(38),
      Q => reg1(38),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(3),
      Q => reg1(3),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(4),
      Q => reg1(4),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(39),
      Q => reg1(58),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(40),
      Q => reg1(59),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(5),
      Q => reg1(5),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(41),
      Q => reg1(64),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(6),
      Q => reg1(65),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(7),
      Q => reg1(66),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(8),
      Q => reg1(67),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(9),
      Q => reg1(68),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(10),
      Q => reg1(69),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(6),
      Q => reg1(6),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(11),
      Q => reg1(70),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(12),
      Q => reg1(71),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(13),
      Q => reg1(72),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(14),
      Q => reg1(73),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(15),
      Q => reg1(74),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(16),
      Q => reg1(75),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(17),
      Q => reg1(76),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(18),
      Q => reg1(77),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(19),
      Q => reg1(78),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(20),
      Q => reg1(79),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(7),
      Q => reg1(7),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(21),
      Q => reg1(80),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(22),
      Q => reg1(81),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(23),
      Q => reg1(82),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(24),
      Q => reg1(83),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(25),
      Q => reg1(84),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(26),
      Q => reg1(85),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(27),
      Q => reg1(86),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(28),
      Q => reg1(87),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(29),
      Q => reg1(88),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(30),
      Q => reg1(89),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(8),
      Q => reg1(8),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => current_bd(31),
      Q => reg1(90),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_MM2S.reg1_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren_new,
      D => \dmacr_i_reg[4]\(9),
      Q => reg1(9),
      R => \dmacr_i_reg[0]\(0)
    );
\GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \^updt_desc_reg0_reg[31]\(40),
      I1 => \^updt_desc_reg0_reg[6]\,
      I2 => s_axis_mm2s_cmd_tready,
      I3 => s_axis_mm2s_cmd_tvalid_split,
      O => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\
    );
\GEN_S2MM.queue_dout2_new_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(0),
      Q => \^updt_desc_reg0_reg[31]_0\(0),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(10),
      Q => \^updt_desc_reg0_reg[31]_0\(10),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(11),
      Q => \^updt_desc_reg0_reg[31]_0\(11),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(12),
      Q => \^updt_desc_reg0_reg[31]_0\(12),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(13),
      Q => \^updt_desc_reg0_reg[31]_0\(13),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(14),
      Q => \^updt_desc_reg0_reg[31]_0\(14),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(15),
      Q => \^updt_desc_reg0_reg[31]_0\(15),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(16),
      Q => \^updt_desc_reg0_reg[31]_0\(16),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(17),
      Q => \^updt_desc_reg0_reg[31]_0\(17),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(18),
      Q => \^updt_desc_reg0_reg[31]_0\(18),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(19),
      Q => \^updt_desc_reg0_reg[31]_0\(19),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(1),
      Q => \^updt_desc_reg0_reg[31]_0\(1),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(20),
      Q => \^updt_desc_reg0_reg[31]_0\(20),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(21),
      Q => \^updt_desc_reg0_reg[31]_0\(21),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(22),
      Q => \^updt_desc_reg0_reg[31]_0\(22),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(23),
      Q => \^updt_desc_reg0_reg[31]_0\(23),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(24),
      Q => \^updt_desc_reg0_reg[31]_0\(24),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(25),
      Q => \^updt_desc_reg0_reg[31]_0\(25),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(26),
      Q => \^updt_desc_reg0_reg[31]_0\(26),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(27),
      Q => \^updt_desc_reg0_reg[31]_0\(27),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(28),
      Q => \^updt_desc_reg0_reg[31]_0\(28),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(29),
      Q => \^updt_desc_reg0_reg[31]_0\(29),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(2),
      Q => \^updt_desc_reg0_reg[31]_0\(2),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(30),
      Q => \^updt_desc_reg0_reg[31]_0\(30),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(31),
      Q => \^updt_desc_reg0_reg[31]_0\(31),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(32),
      Q => \^updt_desc_reg0_reg[31]_0\(32),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(33),
      Q => \^updt_desc_reg0_reg[31]_0\(33),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(34),
      Q => \^updt_desc_reg0_reg[31]_0\(34),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(35),
      Q => \^updt_desc_reg0_reg[31]_0\(35),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(36),
      Q => \^updt_desc_reg0_reg[31]_0\(36),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(37),
      Q => \^updt_desc_reg0_reg[31]_0\(37),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(38),
      Q => \^updt_desc_reg0_reg[31]_0\(38),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(3),
      Q => \^updt_desc_reg0_reg[31]_0\(3),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(4),
      Q => \^updt_desc_reg0_reg[31]_0\(4),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(58),
      Q => \^updt_desc_reg0_reg[31]_0\(39),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(5),
      Q => \^updt_desc_reg0_reg[31]_0\(5),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(64),
      Q => \^updt_desc_reg0_reg[31]_0\(40),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(65),
      Q => \^updt_desc_reg0_reg[31]_0\(41),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(66),
      Q => \^updt_desc_reg0_reg[31]_0\(42),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(67),
      Q => \^updt_desc_reg0_reg[31]_0\(43),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(68),
      Q => \^updt_desc_reg0_reg[31]_0\(44),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(69),
      Q => \^updt_desc_reg0_reg[31]_0\(45),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(6),
      Q => \^updt_desc_reg0_reg[31]_0\(6),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(70),
      Q => \^updt_desc_reg0_reg[31]_0\(46),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(71),
      Q => \^updt_desc_reg0_reg[31]_0\(47),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(72),
      Q => \^updt_desc_reg0_reg[31]_0\(48),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(73),
      Q => \^updt_desc_reg0_reg[31]_0\(49),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(74),
      Q => \^updt_desc_reg0_reg[31]_0\(50),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(75),
      Q => \^updt_desc_reg0_reg[31]_0\(51),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(76),
      Q => \^updt_desc_reg0_reg[31]_0\(52),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(77),
      Q => \^updt_desc_reg0_reg[31]_0\(53),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(78),
      Q => \^updt_desc_reg0_reg[31]_0\(54),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(79),
      Q => \^updt_desc_reg0_reg[31]_0\(55),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(7),
      Q => \^updt_desc_reg0_reg[31]_0\(7),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(80),
      Q => \^updt_desc_reg0_reg[31]_0\(56),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(81),
      Q => \^updt_desc_reg0_reg[31]_0\(57),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(82),
      Q => \^updt_desc_reg0_reg[31]_0\(58),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(83),
      Q => \^updt_desc_reg0_reg[31]_0\(59),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(84),
      Q => \^updt_desc_reg0_reg[31]_0\(60),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(85),
      Q => \^updt_desc_reg0_reg[31]_0\(61),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(86),
      Q => \^updt_desc_reg0_reg[31]_0\(62),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(87),
      Q => \^updt_desc_reg0_reg[31]_0\(63),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(88),
      Q => \^updt_desc_reg0_reg[31]_0\(64),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(89),
      Q => \^updt_desc_reg0_reg[31]_0\(65),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(8),
      Q => \^updt_desc_reg0_reg[31]_0\(8),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(90),
      Q => \^updt_desc_reg0_reg[31]_0\(66),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_new_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_rden2_new,
      D => reg2(9),
      Q => \^updt_desc_reg0_reg[31]_0\(9),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.queue_dout2_valid_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      Q => \^p_10_out\,
      R => '0'
    );
\GEN_S2MM.queue_empty2_new_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF222F"
    )
        port map (
      I0 => \^ch2_ftch_queue_empty\,
      I1 => queue_wren2_new,
      I2 => s2mm_scndry_resetn,
      I3 => mm2s_scndry_resetn,
      I4 => p_0_in,
      I5 => queue_rden2_new,
      O => \GEN_S2MM.queue_empty2_new_i_1_n_0\
    );
\GEN_S2MM.queue_empty2_new_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_S2MM.queue_empty2_new_i_1_n_0\,
      Q => \^ch2_ftch_queue_empty\,
      R => '0'
    );
\GEN_S2MM.queue_full2_new_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000EEE0"
    )
        port map (
      I0 => \^gen_s2mm.reg2_reg[0]_0\,
      I1 => queue_wren2_new,
      I2 => s2mm_scndry_resetn,
      I3 => mm2s_scndry_resetn,
      I4 => p_0_in,
      I5 => queue_rden2_new,
      O => \GEN_S2MM.queue_full2_new_i_1_n_0\
    );
\GEN_S2MM.queue_full2_new_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_S2MM.queue_full2_new_i_1_n_0\,
      Q => \^gen_s2mm.reg2_reg[0]_0\,
      R => '0'
    );
\GEN_S2MM.reg2[90]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => \^gen_s2mm.reg2_reg[0]_0\,
      I1 => ch2_ftch_active,
      I2 => Q(2),
      I3 => m_axi_sg_rvalid,
      O => queue_wren2_new
    );
\GEN_S2MM.reg2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(0),
      Q => reg2(0),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(10),
      Q => reg2(10),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(11),
      Q => reg2(11),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(12),
      Q => reg2(12),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(13),
      Q => reg2(13),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(14),
      Q => reg2(14),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(15),
      Q => reg2(15),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(16),
      Q => reg2(16),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(17),
      Q => reg2(17),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(18),
      Q => reg2(18),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(19),
      Q => reg2(19),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(1),
      Q => reg2(1),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(20),
      Q => reg2(20),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(21),
      Q => reg2(21),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(22),
      Q => reg2(22),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(23),
      Q => reg2(23),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(24),
      Q => reg2(24),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(25),
      Q => reg2(25),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(26),
      Q => reg2(26),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(27),
      Q => reg2(27),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(28),
      Q => reg2(28),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(29),
      Q => reg2(29),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(2),
      Q => reg2(2),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(30),
      Q => reg2(30),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(31),
      Q => reg2(31),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(32),
      Q => reg2(32),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(33),
      Q => reg2(33),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(34),
      Q => reg2(34),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(35),
      Q => reg2(35),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(36),
      Q => reg2(36),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(37),
      Q => reg2(37),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(38),
      Q => reg2(38),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(3),
      Q => reg2(3),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(4),
      Q => reg2(4),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(39),
      Q => reg2(58),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(5),
      Q => reg2(5),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(41),
      Q => reg2(64),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(6),
      Q => reg2(65),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(7),
      Q => reg2(66),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(8),
      Q => reg2(67),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(9),
      Q => reg2(68),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(10),
      Q => reg2(69),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(6),
      Q => reg2(6),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(11),
      Q => reg2(70),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(12),
      Q => reg2(71),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(13),
      Q => reg2(72),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(14),
      Q => reg2(73),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(15),
      Q => reg2(74),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(16),
      Q => reg2(75),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(17),
      Q => reg2(76),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(18),
      Q => reg2(77),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(19),
      Q => reg2(78),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(20),
      Q => reg2(79),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(7),
      Q => reg2(7),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(21),
      Q => reg2(80),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(22),
      Q => reg2(81),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(23),
      Q => reg2(82),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(24),
      Q => reg2(83),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(25),
      Q => reg2(84),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(26),
      Q => reg2(85),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(27),
      Q => reg2(86),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(28),
      Q => reg2(87),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(29),
      Q => reg2(88),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(30),
      Q => reg2(89),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(8),
      Q => reg2(8),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => current_bd(31),
      Q => reg2(90),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_S2MM.reg2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => queue_wren2_new,
      D => \dmacr_i_reg[4]\(9),
      Q => reg2(9),
      R => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0)
    );
\GEN_STALE_DESC_CHECK.ftch_stale_desc_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BB33BB33BB33AB00"
    )
        port map (
      I0 => p_0_in,
      I1 => E(0),
      I2 => \^gen_s2mm.reg2_reg[0]_0\,
      I3 => ch2_ftch_active,
      I4 => Q(0),
      I5 => Q(1),
      O => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\
    );
\GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C808"
    )
        port map (
      I0 => \^updt_desc_reg0_reg[6]\,
      I1 => mm2s_scndry_resetn,
      I2 => s_axis_mm2s_updtptr_tvalid,
      I3 => ptr_queue_full,
      O => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\
    );
packet_in_progress_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00A0E0A0"
    )
        port map (
      I0 => p_16_out,
      I1 => p_39_out(59),
      I2 => mm2s_scndry_resetn,
      I3 => \^updt_desc_reg0_reg[6]\,
      I4 => \^updt_desc_reg0_reg[31]\(39),
      O => packet_in_progress_reg
    );
updt_data_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C808"
    )
        port map (
      I0 => \^p_10_out\,
      I1 => s2mm_scndry_resetn,
      I2 => s_axis_s2mm_updtptr_tvalid,
      I3 => ptr2_queue_full,
      O => updt_data_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_ftch_sm is
  port (
    \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\ : out STD_LOGIC;
    \GEN_CH1_FETCH.ch1_active_i_reg_0\ : out STD_LOGIC;
    p_60_out : out STD_LOGIC;
    p_34_out : out STD_LOGIC;
    sg_ftch_error0 : out STD_LOGIC;
    \GEN_CH1_FETCH.ch1_ftch_interr_set_i_reg_0\ : out STD_LOGIC;
    \GEN_CH1_FETCH.ch1_ftch_decerr_set_reg_0\ : out STD_LOGIC;
    \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg_0\ : out STD_LOGIC;
    sg_ftch_error0_0 : out STD_LOGIC;
    \GEN_CH2_FETCH.ch2_ftch_interr_set_i_reg_0\ : out STD_LOGIC;
    \GEN_CH2_FETCH.ch2_ftch_decerr_set_reg_0\ : out STD_LOGIC;
    \GEN_CH2_FETCH.ch2_ftch_slverr_set_reg_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_29_out : out STD_LOGIC;
    \CURRENT_BD_32.current_bd_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg_0\ : out STD_LOGIC;
    \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ : out STD_LOGIC;
    \ftch_error_addr_reg[31]_0\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[31]_1\ : out STD_LOGIC;
    s_axis_ftch_cmd_tvalid_reg : out STD_LOGIC;
    p_55_out : out STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    ch1_active_set : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    ftch_error_reg : in STD_LOGIC;
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ : in STD_LOGIC;
    ch1_sg_idle : in STD_LOGIC;
    \GEN_MM2S.queue_full_new_reg\ : in STD_LOGIC;
    ch1_ftch_queue_empty : in STD_LOGIC;
    ftch_done : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_stop_i : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : in STD_LOGIC;
    \GEN_S2MM.queue_empty2_new_reg\ : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    ch2_ftch_pause : in STD_LOGIC;
    p_5_out : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    \counter_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_error_addr_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    s_axis_ftch_cmd_tready : in STD_LOGIC;
    s_axis_ftch_cmd_tvalid : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 25 downto 0 );
    ftch_stale_desc : in STD_LOGIC;
    ftch_slverr : in STD_LOGIC;
    ftch_decerr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_ftch_sm : entity is "axi_sg_ftch_sm";
end axi_dma_ctrl_axi_sg_ftch_sm;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_ftch_sm is
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \GEN_CH1_FETCH.GEN_CH1_STALE_CHECK.ch1_stale_descriptor_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_active_i_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_fetch.ch1_active_i_reg_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_decerr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_fetch.ch1_ftch_decerr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_idle_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_idle_i_2_n_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_idle_i_3_n_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_idle_i_4_n_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_interr_set_i_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\ : STD_LOGIC;
  signal \GEN_CH1_FETCH.ch1_ftch_slverr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_fetch.ch1_ftch_slverr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.GEN_CH2_STALE_CHECK.ch2_stale_descriptor_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_active_i_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_active_i_i_4_n_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_ftch_decerr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch2_fetch.ch2_ftch_decerr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_ftch_idle_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_ftch_idle_i_2_n_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_ftch_interr_set_i_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\ : STD_LOGIC;
  signal \GEN_CH2_FETCH.ch2_ftch_slverr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch2_fetch.ch2_ftch_slverr_set_reg_0\ : STD_LOGIC;
  signal \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal ch2_active_set : STD_LOGIC;
  signal \ftch_cs[0]_i_2_n_0\ : STD_LOGIC;
  signal \ftch_cs[0]_i_4_n_0\ : STD_LOGIC;
  signal ftch_error_addr_1 : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal \^ftch_error_addr_reg[31]_1\ : STD_LOGIC;
  signal ftch_ns : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^p_29_out\ : STD_LOGIC;
  signal \^p_34_out\ : STD_LOGIC;
  signal \^p_55_out\ : STD_LOGIC;
  signal \^p_60_out\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \CURRENT_BD_32.current_bd[31]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \GEN_CH1_FETCH.GEN_CH1_STALE_CHECK.ch1_stale_descriptor_i_1\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \GEN_CH1_FETCH.ch1_ftch_decerr_set_i_1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \GEN_CH1_FETCH.ch1_ftch_idle_i_4\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \GEN_CH1_FETCH.ch1_ftch_slverr_set_i_1\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \GEN_CH2_FETCH.GEN_CH2_STALE_CHECK.ch2_stale_descriptor_i_1\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \GEN_CH2_FETCH.ch2_active_i_i_4\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \GEN_CH2_FETCH.ch2_ftch_decerr_set_i_1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of \GEN_CH2_FETCH.ch2_ftch_slverr_set_i_1\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_i_1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_i_1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \ftch_cs[1]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \ftch_error_addr[10]_i_1__0\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \ftch_error_addr[11]_i_1__0\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \ftch_error_addr[12]_i_1__0\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \ftch_error_addr[13]_i_1__0\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \ftch_error_addr[14]_i_1__0\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \ftch_error_addr[15]_i_1__0\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \ftch_error_addr[16]_i_1__0\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \ftch_error_addr[17]_i_1__0\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \ftch_error_addr[18]_i_1__0\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \ftch_error_addr[19]_i_1__0\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \ftch_error_addr[20]_i_1__0\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \ftch_error_addr[21]_i_1__0\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \ftch_error_addr[22]_i_1__0\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \ftch_error_addr[23]_i_1__0\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \ftch_error_addr[24]_i_1__0\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \ftch_error_addr[25]_i_1__0\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \ftch_error_addr[26]_i_1__0\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \ftch_error_addr[27]_i_1__0\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \ftch_error_addr[28]_i_1__0\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \ftch_error_addr[29]_i_1__0\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \ftch_error_addr[30]_i_1__0\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \ftch_error_addr[31]_i_2__0\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \ftch_error_addr[6]_i_1__0\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \ftch_error_addr[7]_i_1__0\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \ftch_error_addr[8]_i_1__0\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \ftch_error_addr[9]_i_1__0\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of sg_ftch_error_i_1 : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \sg_ftch_error_i_1__0\ : label is "soft_lutpair105";
begin
  E(0) <= \^e\(0);
  \GEN_CH1_FETCH.ch1_active_i_reg_0\ <= \^gen_ch1_fetch.ch1_active_i_reg_0\;
  \GEN_CH1_FETCH.ch1_ftch_decerr_set_reg_0\ <= \^gen_ch1_fetch.ch1_ftch_decerr_set_reg_0\;
  \GEN_CH1_FETCH.ch1_ftch_interr_set_i_reg_0\ <= \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\;
  \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg_0\ <= \^gen_ch1_fetch.ch1_ftch_slverr_set_reg_0\;
  \GEN_CH2_FETCH.ch2_ftch_decerr_set_reg_0\ <= \^gen_ch2_fetch.ch2_ftch_decerr_set_reg_0\;
  \GEN_CH2_FETCH.ch2_ftch_interr_set_i_reg_0\ <= \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\;
  \GEN_CH2_FETCH.ch2_ftch_slverr_set_reg_0\ <= \^gen_ch2_fetch.ch2_ftch_slverr_set_reg_0\;
  \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\ <= \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\;
  Q(1 downto 0) <= \^q\(1 downto 0);
  \ftch_error_addr_reg[31]_1\ <= \^ftch_error_addr_reg[31]_1\;
  p_29_out <= \^p_29_out\;
  p_34_out <= \^p_34_out\;
  p_55_out <= \^p_55_out\;
  p_60_out <= \^p_60_out\;
\CURRENT_BD_32.current_bd[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04040400"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => ftch_error_reg,
      I3 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I4 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      O => \CURRENT_BD_32.current_bd_reg[6]\(0)
    );
\GEN_CH1_FETCH.GEN_CH1_STALE_CHECK.ch1_stale_descriptor_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I1 => ftch_stale_desc,
      I2 => \^p_55_out\,
      O => \GEN_CH1_FETCH.GEN_CH1_STALE_CHECK.ch1_stale_descriptor_i_1_n_0\
    );
\GEN_CH1_FETCH.GEN_CH1_STALE_CHECK.ch1_stale_descriptor_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.GEN_CH1_STALE_CHECK.ch1_stale_descriptor_i_1_n_0\,
      Q => \^p_55_out\,
      R => SR(0)
    );
\GEN_CH1_FETCH.ch1_active_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000EEE0"
    )
        port map (
      I0 => ch1_active_set,
      I1 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => ch2_active_set,
      O => \GEN_CH1_FETCH.ch1_active_i_i_1_n_0\
    );
\GEN_CH1_FETCH.ch1_active_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.ch1_active_i_i_1_n_0\,
      Q => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      R => '0'
    );
\GEN_CH1_FETCH.ch1_ftch_decerr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => ftch_decerr,
      I1 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I2 => \^gen_ch1_fetch.ch1_ftch_decerr_set_reg_0\,
      O => \GEN_CH1_FETCH.ch1_ftch_decerr_set_i_1_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_decerr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.ch1_ftch_decerr_set_i_1_n_0\,
      Q => \^gen_ch1_fetch.ch1_ftch_decerr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH1_FETCH.ch1_ftch_idle_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFDDFDDD"
    )
        port map (
      I0 => m_axi_sg_aresetn,
      I1 => ftch_error_reg,
      I2 => \GEN_CH1_FETCH.ch1_ftch_idle_i_2_n_0\,
      I3 => ch1_sg_idle,
      I4 => \^p_60_out\,
      I5 => \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\,
      O => \GEN_CH1_FETCH.ch1_ftch_idle_i_1_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_idle_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AA020202"
    )
        port map (
      I0 => ch1_ftch_queue_empty,
      I1 => \GEN_MM2S.queue_full_new_reg\,
      I2 => \GEN_CH1_FETCH.ch1_ftch_idle_i_3_n_0\,
      I3 => \^q\(0),
      I4 => \^q\(1),
      O => \GEN_CH1_FETCH.ch1_ftch_idle_i_2_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_idle_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFFBFFF"
    )
        port map (
      I0 => ftch_error_reg,
      I1 => ftch_done,
      I2 => \^q\(1),
      I3 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I4 => \ftch_cs[0]_i_2_n_0\,
      I5 => \GEN_CH1_FETCH.ch1_ftch_idle_i_4_n_0\,
      O => \GEN_CH1_FETCH.ch1_ftch_idle_i_3_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_idle_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"03F7"
    )
        port map (
      I0 => ftch_error_reg,
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      O => \GEN_CH1_FETCH.ch1_ftch_idle_i_4_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_idle_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.ch1_ftch_idle_i_1_n_0\,
      Q => \^p_60_out\,
      R => '0'
    );
\GEN_CH1_FETCH.ch1_ftch_interr_set_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFE0"
    )
        port map (
      I0 => ftch_error_reg,
      I1 => ftch_done,
      I2 => \^p_55_out\,
      I3 => \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\,
      O => \GEN_CH1_FETCH.ch1_ftch_interr_set_i_i_1_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_interr_set_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.ch1_ftch_interr_set_i_i_1_n_0\,
      Q => \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\,
      R => SR(0)
    );
\GEN_CH1_FETCH.ch1_ftch_slverr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => ftch_slverr,
      I1 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I2 => \^gen_ch1_fetch.ch1_ftch_slverr_set_reg_0\,
      O => \GEN_CH1_FETCH.ch1_ftch_slverr_set_i_1_n_0\
    );
\GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.ch1_ftch_slverr_set_i_1_n_0\,
      Q => \^gen_ch1_fetch.ch1_ftch_slverr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH2_FETCH.GEN_CH2_STALE_CHECK.ch2_stale_descriptor_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I1 => ftch_stale_desc,
      I2 => \^p_29_out\,
      O => \GEN_CH2_FETCH.GEN_CH2_STALE_CHECK.ch2_stale_descriptor_i_1_n_0\
    );
\GEN_CH2_FETCH.GEN_CH2_STALE_CHECK.ch2_stale_descriptor_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.GEN_CH2_STALE_CHECK.ch2_stale_descriptor_i_1_n_0\,
      Q => \^p_29_out\,
      R => SR(0)
    );
\GEN_CH2_FETCH.ch2_active_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000EEE0"
    )
        port map (
      I0 => ch2_active_set,
      I1 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => ch1_active_set,
      O => \GEN_CH2_FETCH.ch2_active_i_i_1_n_0\
    );
\GEN_CH2_FETCH.ch2_active_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000040007333"
    )
        port map (
      I0 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I1 => \^q\(1),
      I2 => ftch_done,
      I3 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I4 => \GEN_MM2S.queue_full_new_reg\,
      I5 => \GEN_CH2_FETCH.ch2_active_i_i_4_n_0\,
      O => ch2_active_set
    );
\GEN_CH2_FETCH.ch2_active_i_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \ftch_cs[0]_i_2_n_0\,
      I1 => \^q\(0),
      I2 => ftch_error_reg,
      O => \GEN_CH2_FETCH.ch2_active_i_i_4_n_0\
    );
\GEN_CH2_FETCH.ch2_active_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.ch2_active_i_i_1_n_0\,
      Q => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      R => '0'
    );
\GEN_CH2_FETCH.ch2_ftch_decerr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => ftch_decerr,
      I1 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I2 => \^gen_ch2_fetch.ch2_ftch_decerr_set_reg_0\,
      O => \GEN_CH2_FETCH.ch2_ftch_decerr_set_i_1_n_0\
    );
\GEN_CH2_FETCH.ch2_ftch_decerr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.ch2_ftch_decerr_set_i_1_n_0\,
      Q => \^gen_ch2_fetch.ch2_ftch_decerr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH2_FETCH.ch2_ftch_idle_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFDDFDDD"
    )
        port map (
      I0 => m_axi_sg_aresetn,
      I1 => ftch_error_reg,
      I2 => \GEN_CH2_FETCH.ch2_ftch_idle_i_2_n_0\,
      I3 => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\,
      I4 => \^p_34_out\,
      I5 => \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\,
      O => \GEN_CH2_FETCH.ch2_ftch_idle_i_1_n_0\
    );
\GEN_CH2_FETCH.ch2_ftch_idle_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A0A0A8A808080888"
    )
        port map (
      I0 => \GEN_S2MM.queue_empty2_new_reg\,
      I1 => \ftch_cs[0]_i_2_n_0\,
      I2 => \^q\(0),
      I3 => ftch_error_reg,
      I4 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I5 => \^q\(1),
      O => \GEN_CH2_FETCH.ch2_ftch_idle_i_2_n_0\
    );
\GEN_CH2_FETCH.ch2_ftch_idle_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.ch2_ftch_idle_i_1_n_0\,
      Q => \^p_34_out\,
      R => '0'
    );
\GEN_CH2_FETCH.ch2_ftch_interr_set_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFE0"
    )
        port map (
      I0 => ftch_error_reg,
      I1 => ftch_done,
      I2 => \^p_29_out\,
      I3 => \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\,
      O => \GEN_CH2_FETCH.ch2_ftch_interr_set_i_i_1_n_0\
    );
\GEN_CH2_FETCH.ch2_ftch_interr_set_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.ch2_ftch_interr_set_i_i_1_n_0\,
      Q => \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\,
      R => SR(0)
    );
\GEN_CH2_FETCH.ch2_ftch_slverr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => ftch_slverr,
      I1 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I2 => \^gen_ch2_fetch.ch2_ftch_slverr_set_reg_0\,
      O => \GEN_CH2_FETCH.ch2_ftch_slverr_set_i_1_n_0\
    );
\GEN_CH2_FETCH.ch2_ftch_slverr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.ch2_ftch_slverr_set_i_1_n_0\,
      Q => \^gen_ch2_fetch.ch2_ftch_slverr_set_reg_0\,
      R => SR(0)
    );
\GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I1 => m_axi_sg_rvalid,
      I2 => \counter_reg[1]\(0),
      O => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\
    );
\GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I1 => m_axi_sg_rvalid,
      I2 => \counter_reg[1]\(0),
      O => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg_0\
    );
\GEN_STALE_DESC_CHECK.ftch_stale_desc_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000005555DDD5"
    )
        port map (
      I0 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I1 => \^e\(0),
      I2 => p_16_out,
      I3 => mm2s_dmacr(0),
      I4 => mm2s_stop_i,
      I5 => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      O => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\
    );
\ftch_cs[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFF000D0D"
    )
        port map (
      I0 => \ftch_cs[0]_i_2_n_0\,
      I1 => \GEN_MM2S.queue_full_new_reg\,
      I2 => \ftch_cs[0]_i_4_n_0\,
      I3 => \^q\(1),
      I4 => \^q\(0),
      I5 => ftch_error_reg,
      O => ftch_ns(0)
    );
\ftch_cs[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEFF"
    )
        port map (
      I0 => \^p_29_out\,
      I1 => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\,
      I2 => p_0_in,
      I3 => s2mm_dmacr(0),
      I4 => ch2_ftch_pause,
      I5 => p_5_out,
      O => \ftch_cs[0]_i_2_n_0\
    );
\ftch_cs[0]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02AA"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^gen_ch1_fetch.ch1_active_i_reg_0\,
      I2 => \^gen_no_upr_msb_nxtdesc.ch2_nxtdesc_wren_reg\,
      I3 => ftch_done,
      O => \ftch_cs[0]_i_4_n_0\
    );
\ftch_cs[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EEFE"
    )
        port map (
      I0 => \^q\(0),
      I1 => ftch_error_reg,
      I2 => \^q\(1),
      I3 => ftch_done,
      O => ftch_ns(1)
    );
\ftch_cs_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ftch_ns(0),
      Q => \^q\(0),
      R => SR(0)
    );
\ftch_cs_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ftch_ns(1),
      Q => \^q\(1),
      R => SR(0)
    );
\ftch_error_addr[10]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(4),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(10),
      O => \ftch_error_addr_reg[31]_0\(4)
    );
\ftch_error_addr[11]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(5),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(11),
      O => \ftch_error_addr_reg[31]_0\(5)
    );
\ftch_error_addr[12]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(6),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(12),
      O => \ftch_error_addr_reg[31]_0\(6)
    );
\ftch_error_addr[13]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(7),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(13),
      O => \ftch_error_addr_reg[31]_0\(7)
    );
\ftch_error_addr[14]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(8),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(14),
      O => \ftch_error_addr_reg[31]_0\(8)
    );
\ftch_error_addr[15]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(9),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(15),
      O => \ftch_error_addr_reg[31]_0\(9)
    );
\ftch_error_addr[16]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(10),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(16),
      O => \ftch_error_addr_reg[31]_0\(10)
    );
\ftch_error_addr[17]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(11),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(17),
      O => \ftch_error_addr_reg[31]_0\(11)
    );
\ftch_error_addr[18]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(12),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(18),
      O => \ftch_error_addr_reg[31]_0\(12)
    );
\ftch_error_addr[19]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(13),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(19),
      O => \ftch_error_addr_reg[31]_0\(13)
    );
\ftch_error_addr[20]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(14),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(20),
      O => \ftch_error_addr_reg[31]_0\(14)
    );
\ftch_error_addr[21]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(15),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(21),
      O => \ftch_error_addr_reg[31]_0\(15)
    );
\ftch_error_addr[22]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(16),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(22),
      O => \ftch_error_addr_reg[31]_0\(16)
    );
\ftch_error_addr[23]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(17),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(23),
      O => \ftch_error_addr_reg[31]_0\(17)
    );
\ftch_error_addr[24]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(18),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(24),
      O => \ftch_error_addr_reg[31]_0\(18)
    );
\ftch_error_addr[25]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(19),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(25),
      O => \ftch_error_addr_reg[31]_0\(19)
    );
\ftch_error_addr[26]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(20),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(26),
      O => \ftch_error_addr_reg[31]_0\(20)
    );
\ftch_error_addr[27]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(21),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(27),
      O => \ftch_error_addr_reg[31]_0\(21)
    );
\ftch_error_addr[28]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(22),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(28),
      O => \ftch_error_addr_reg[31]_0\(22)
    );
\ftch_error_addr[29]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(23),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(29),
      O => \ftch_error_addr_reg[31]_0\(23)
    );
\ftch_error_addr[30]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(24),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(30),
      O => \ftch_error_addr_reg[31]_0\(24)
    );
\ftch_error_addr[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => ftch_error_reg,
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \^e\(0)
    );
\ftch_error_addr[31]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(25),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(31),
      O => \ftch_error_addr_reg[31]_0\(25)
    );
\ftch_error_addr[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \^gen_ch1_fetch.ch1_ftch_slverr_set_reg_0\,
      I1 => \^gen_ch2_fetch.ch2_ftch_slverr_set_reg_0\,
      I2 => \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\,
      I3 => \^gen_ch1_fetch.ch1_ftch_decerr_set_reg_0\,
      I4 => \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\,
      I5 => \^gen_ch2_fetch.ch2_ftch_decerr_set_reg_0\,
      O => \^ftch_error_addr_reg[31]_1\
    );
\ftch_error_addr[6]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(0),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(6),
      O => \ftch_error_addr_reg[31]_0\(0)
    );
\ftch_error_addr[7]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(1),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(7),
      O => \ftch_error_addr_reg[31]_0\(1)
    );
\ftch_error_addr[8]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(2),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(8),
      O => \ftch_error_addr_reg[31]_0\(2)
    );
\ftch_error_addr[9]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \updt_error_addr_reg[31]\(3),
      I1 => \^ftch_error_addr_reg[31]_1\,
      I2 => ftch_error_addr_1(9),
      O => \ftch_error_addr_reg[31]_0\(3)
    );
\ftch_error_addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(4),
      Q => ftch_error_addr_1(10),
      R => SR(0)
    );
\ftch_error_addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(5),
      Q => ftch_error_addr_1(11),
      R => SR(0)
    );
\ftch_error_addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(6),
      Q => ftch_error_addr_1(12),
      R => SR(0)
    );
\ftch_error_addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(7),
      Q => ftch_error_addr_1(13),
      R => SR(0)
    );
\ftch_error_addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(8),
      Q => ftch_error_addr_1(14),
      R => SR(0)
    );
\ftch_error_addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(9),
      Q => ftch_error_addr_1(15),
      R => SR(0)
    );
\ftch_error_addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(10),
      Q => ftch_error_addr_1(16),
      R => SR(0)
    );
\ftch_error_addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(11),
      Q => ftch_error_addr_1(17),
      R => SR(0)
    );
\ftch_error_addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(12),
      Q => ftch_error_addr_1(18),
      R => SR(0)
    );
\ftch_error_addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(13),
      Q => ftch_error_addr_1(19),
      R => SR(0)
    );
\ftch_error_addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(14),
      Q => ftch_error_addr_1(20),
      R => SR(0)
    );
\ftch_error_addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(15),
      Q => ftch_error_addr_1(21),
      R => SR(0)
    );
\ftch_error_addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(16),
      Q => ftch_error_addr_1(22),
      R => SR(0)
    );
\ftch_error_addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(17),
      Q => ftch_error_addr_1(23),
      R => SR(0)
    );
\ftch_error_addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(18),
      Q => ftch_error_addr_1(24),
      R => SR(0)
    );
\ftch_error_addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(19),
      Q => ftch_error_addr_1(25),
      R => SR(0)
    );
\ftch_error_addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(20),
      Q => ftch_error_addr_1(26),
      R => SR(0)
    );
\ftch_error_addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(21),
      Q => ftch_error_addr_1(27),
      R => SR(0)
    );
\ftch_error_addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(22),
      Q => ftch_error_addr_1(28),
      R => SR(0)
    );
\ftch_error_addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(23),
      Q => ftch_error_addr_1(29),
      R => SR(0)
    );
\ftch_error_addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(24),
      Q => ftch_error_addr_1(30),
      R => SR(0)
    );
\ftch_error_addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(25),
      Q => ftch_error_addr_1(31),
      R => SR(0)
    );
\ftch_error_addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(0),
      Q => ftch_error_addr_1(6),
      R => SR(0)
    );
\ftch_error_addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(1),
      Q => ftch_error_addr_1(7),
      R => SR(0)
    );
\ftch_error_addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(2),
      Q => ftch_error_addr_1(8),
      R => SR(0)
    );
\ftch_error_addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \^e\(0),
      D => D(3),
      Q => ftch_error_addr_1(9),
      R => SR(0)
    );
s_axis_ftch_cmd_tvalid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55750030"
    )
        port map (
      I0 => s_axis_ftch_cmd_tready,
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => ftch_error_reg,
      I4 => s_axis_ftch_cmd_tvalid,
      O => s_axis_ftch_cmd_tvalid_reg
    );
sg_ftch_error_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^gen_ch1_fetch.ch1_ftch_interr_set_i_reg_0\,
      I1 => \^gen_ch1_fetch.ch1_ftch_decerr_set_reg_0\,
      I2 => \^gen_ch1_fetch.ch1_ftch_slverr_set_reg_0\,
      O => sg_ftch_error0
    );
\sg_ftch_error_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^gen_ch2_fetch.ch2_ftch_interr_set_i_reg_0\,
      I1 => \^gen_ch2_fetch.ch2_ftch_decerr_set_reg_0\,
      I2 => \^gen_ch2_fetch.ch2_ftch_slverr_set_reg_0\,
      O => sg_ftch_error0_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_intrpt is
  port (
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[0]_0\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[0]_0\ : out STD_LOGIC;
    p_8_out : out STD_LOGIC;
    ch1_delay_cnt_en : out STD_LOGIC;
    p_46_out : out STD_LOGIC;
    ch2_delay_cnt_en : out STD_LOGIC;
    p_20_out : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]_0\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]_0\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    p_7_out : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    p_3_out_1 : in STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg_0\ : in STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg_0\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\ : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    mm2s_irqthresh_wren : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\ : in STD_LOGIC;
    s2mm_irqthresh_wren : in STD_LOGIC;
    \dmacr_i_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \dmacr_i_reg[26]\ : in STD_LOGIC;
    \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ : in STD_LOGIC;
    \dmacr_i_reg[28]\ : in STD_LOGIC;
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 12 downto 0 );
    irqthresh_wren_reg : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \dmacr_i_reg[26]_0\ : in STD_LOGIC;
    \dmacr_i_reg[29]\ : in STD_LOGIC;
    axi_dma_tstvec : in STD_LOGIC_VECTOR ( 0 to 0 );
    irqthresh_wren_reg_0 : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_intrpt : entity is "axi_sg_intrpt";
end axi_dma_ctrl_axi_sg_intrpt;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_intrpt is
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_5_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[5]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[6]\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_3_n_0\ : STD_LOGIC;
  signal \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_3_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_3_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[1]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[2]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[3]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[4]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[6]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\ : STD_LOGIC;
  signal \^gen_include_mm2s.ch1_thresh_count_reg[0]_0\ : STD_LOGIC;
  signal \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_5_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[5]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[6]\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_3_n_0\ : STD_LOGIC;
  signal \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_4_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_5_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_3_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[1]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[2]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[3]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[6]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\ : STD_LOGIC;
  signal \^gen_include_s2mm.ch2_thresh_count_reg[0]_0\ : STD_LOGIC;
  signal \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal ch1_dly_fast_cnt : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal ch1_dly_fast_incr : STD_LOGIC;
  signal ch2_dly_fast_cnt : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal ch2_dly_fast_incr : STD_LOGIC;
  signal p_15_out : STD_LOGIC;
  signal \^p_8_out\ : STD_LOGIC;
  signal plusOp : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \plusOp__0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[0]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[2]_i_1\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[3]_i_1\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[4]_i_1\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_5\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[1]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[2]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[3]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[4]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[6]_i_1\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_2\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.ch1_thresh_count[2]_i_1\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_2\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[0]_i_1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[2]_i_1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[3]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[4]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_5\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[1]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[2]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[3]_i_1\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[4]_i_1\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[6]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_2\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_2\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_2\ : label is "soft_lutpair35";
begin
  \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\(7 downto 0) <= \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(7 downto 0);
  \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[0]_0\ <= \^gen_include_mm2s.ch1_thresh_count_reg[0]_0\;
  \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]_0\(7 downto 0) <= \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(7 downto 0);
  \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\(7 downto 0) <= \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(7 downto 0);
  \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[0]_0\ <= \^gen_include_s2mm.ch2_thresh_count_reg[0]_0\;
  \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]_0\(7 downto 0) <= \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(7 downto 0);
  p_8_out <= \^p_8_out\;
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"32"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_2_n_0\,
      O => ch1_dly_fast_cnt(0)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"98"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_2_n_0\,
      O => ch1_dly_fast_cnt(1)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[5]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I3 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\,
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[6]\,
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[1]_i_2_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A9"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      O => ch1_dly_fast_cnt(2)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FE01"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I3 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      O => ch1_dly_fast_cnt(3)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFE0001"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      I3 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\,
      O => ch1_dly_fast_cnt(4)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\,
      I3 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      I5 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[5]\,
      O => ch1_dly_fast_cnt(5)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_5_n_0\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[5]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      I3 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\,
      I5 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[6]\,
      O => ch1_dly_fast_cnt(6)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_5_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(0),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[0]\,
      R => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(1),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[1]\,
      R => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(2),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      S => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(3),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      S => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(4),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\,
      S => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(5),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[5]\,
      S => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_cnt(6),
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[6]\,
      S => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[6]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[4]\,
      I2 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[2]\,
      I3 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[3]\,
      I4 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt_reg_n_0_[5]\,
      I5 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_cnt[6]_i_5_n_0\,
      O => ch1_dly_fast_incr
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch1_dly_fast_incr,
      Q => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      R => p_7_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg_0\,
      Q => ch1_delay_cnt_en,
      R => '0'
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      O => plusOp(0)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      O => plusOp(1)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      O => plusOp(2)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(3),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      I3 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      O => plusOp(3)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(4),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      I3 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      I4 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(3),
      O => plusOp(4)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAAA"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(5),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(3),
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      I3 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      I4 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      I5 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(4),
      O => plusOp(5)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(6),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_3_n_0\,
      O => plusOp(6)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0004"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_2_n_0\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      I2 => \dmacr_i_reg[26]\,
      I3 => \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\,
      I4 => p_7_out,
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(7),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_3_n_0\,
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(6),
      O => plusOp(7)
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(5),
      I1 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(3),
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      I3 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      I4 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      I5 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(4),
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_3_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(0),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(1),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(2),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(3),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(3),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(4),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(4),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(5),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(5),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(6),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(6),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      D => plusOp(7),
      Q => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(7),
      R => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count[7]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_2_n_0\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.GEN_CH1_FAST_COUNTER.ch1_dly_fast_incr_reg_n_0\,
      I2 => \dmacr_i_reg[26]\,
      I3 => \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\,
      O => p_15_out
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFEFFFFFFFFEFFE"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_3_n_0\,
      I1 => \dmacr_i_reg[28]\,
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(6),
      I3 => mm2s_dmacr(11),
      I4 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(7),
      I5 => mm2s_dmacr(12),
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_2_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(1),
      I1 => mm2s_dmacr(9),
      I2 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(2),
      I3 => mm2s_dmacr(10),
      I4 => mm2s_dmacr(8),
      I5 => \^gen_include_mm2s.gen_ch1_delay_interrupt.ch1_delay_count_reg[7]_0\(0),
      O => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_i_3_n_0\
    );
\GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_15_out,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[0]_0\,
      R => p_7_out
    );
\GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000008000800080"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_2_n_0\,
      I1 => \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\,
      I2 => m_axi_sg_aresetn,
      I3 => mm2s_irqthresh_wren,
      I4 => Q(0),
      I5 => \^gen_include_mm2s.ch1_thresh_count_reg[0]_0\,
      O => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(7),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(6),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(2),
      I3 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(5),
      I4 => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_3_n_0\,
      O => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_2_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(4),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(3),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      O => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_3_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_1_n_0\,
      Q => p_46_out,
      R => '0'
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444444F444F444F"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I1 => mm2s_dmacr(0),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I3 => mm2s_irqthresh_wren,
      I4 => Q(0),
      I5 => \^gen_include_mm2s.ch1_thresh_count_reg[0]_0\,
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[0]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F44F4444"
    )
        port map (
      I0 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I1 => mm2s_dmacr(1),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      I4 => irqthresh_wren_reg,
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[1]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A9FFA900"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(2),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I3 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I4 => mm2s_dmacr(2),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[2]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA9FFFFAAA90000"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(3),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(2),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      I4 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I5 => mm2s_dmacr(3),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[3]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9AFF9A00"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(4),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(3),
      I2 => \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_2_n_0\,
      I3 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I4 => mm2s_dmacr(4),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[4]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A9AAFFFFA9AA0000"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(5),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(3),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(4),
      I3 => \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_2_n_0\,
      I4 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I5 => mm2s_dmacr(5),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(2),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_2_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6F60"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(6),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_3_n_0\,
      I2 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I3 => mm2s_dmacr(6),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[6]_i_1_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9AFF9A00"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(7),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(6),
      I2 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_3_n_0\,
      I3 => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\,
      I4 => mm2s_dmacr(7),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_2_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(3),
      I1 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(4),
      I2 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      I3 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      I4 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(2),
      I5 => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(5),
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_3_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0007"
    )
        port map (
      I0 => \^gen_include_mm2s.ch1_thresh_count_reg[0]_0\,
      I1 => Q(0),
      I2 => mm2s_irqthresh_wren,
      I3 => \GEN_INCLUDE_MM2S.ch1_ioc_irq_set_i_i_2_n_0\,
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_4_n_0\
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[0]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(0),
      S => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[1]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(1),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[2]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(2),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[3]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(3),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[4]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(4),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[5]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(5),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[6]_i_1_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(6),
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_2_n_0\,
      Q => \^gen_include_mm2s.ch1_thresh_count_reg[7]_0\(7),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"32"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_2_n_0\,
      O => ch2_dly_fast_cnt(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"98"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_2_n_0\,
      O => ch2_dly_fast_cnt(1)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[5]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I3 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\,
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[6]\,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[1]_i_2_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A9"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      O => ch2_dly_fast_cnt(2)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FE01"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I3 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      O => ch2_dly_fast_cnt(3)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFE0001"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      I3 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\,
      O => ch2_dly_fast_cnt(4)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\,
      I3 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      I5 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[5]\,
      O => ch2_dly_fast_cnt(5)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_5_n_0\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[5]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      I3 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\,
      I5 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[6]\,
      O => ch2_dly_fast_cnt(6)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_5_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(0),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[0]\,
      R => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(1),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[1]\,
      R => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(2),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      S => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(3),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      S => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(4),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\,
      S => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(5),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[5]\,
      S => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_cnt(6),
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[6]\,
      S => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[6]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[4]\,
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[2]\,
      I3 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[3]\,
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt_reg_n_0_[5]\,
      I5 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_cnt[6]_i_5_n_0\,
      O => ch2_dly_fast_incr
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ch2_dly_fast_incr,
      Q => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      R => p_3_out_1
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg_0\,
      Q => ch2_delay_cnt_en,
      R => '0'
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      O => \plusOp__0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      O => \plusOp__0\(1)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      O => \plusOp__0\(2)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(3),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      I3 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      O => \plusOp__0\(3)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(4),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      I3 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      I4 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(3),
      O => \plusOp__0\(4)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAAA"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(5),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(4),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(3),
      I3 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      I4 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      I5 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      O => \plusOp__0\(5)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(6),
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_3_n_0\,
      O => \plusOp__0\(6)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(7),
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_3_n_0\,
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(6),
      O => \plusOp__0\(7)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(5),
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(4),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(3),
      I3 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      I4 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      I5 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count[7]_i_3_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(0),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(1),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(2),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(3),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(3),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(4),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(4),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(5),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(5),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(6),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(6),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      D => \plusOp__0\(7),
      Q => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(7),
      R => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0)
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000041"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_2_n_0\,
      I1 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(4),
      I2 => s2mm_dmacr(12),
      I3 => \dmacr_i_reg[26]_0\,
      I4 => \dmacr_i_reg[29]\,
      I5 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_4_n_0\,
      O => \^p_8_out\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFFBBFFBFFFFBFFB"
    )
        port map (
      I0 => axi_dma_tstvec(0),
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.GEN_CH2_FAST_COUNTER.ch2_dly_fast_incr_reg_n_0\,
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(7),
      I3 => s2mm_dmacr(14),
      I4 => s2mm_dmacr(8),
      I5 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_2_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF6FF6"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(3),
      I1 => s2mm_dmacr(11),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(2),
      I3 => s2mm_dmacr(10),
      I4 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_5_n_0\,
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_4_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22F2FFFFFFFF22F2"
    )
        port map (
      I0 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(0),
      I1 => s2mm_dmacr(8),
      I2 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(6),
      I3 => s2mm_dmacr(13),
      I4 => s2mm_dmacr(9),
      I5 => \^gen_include_s2mm.gen_ch2_delay_interrupt.ch2_delay_count_reg[7]_0\(1),
      O => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_i_5_n_0\
    );
\GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \^p_8_out\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[0]_0\,
      R => p_3_out_1
    );
\GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000008000800080"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_2_n_0\,
      I1 => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\,
      I2 => m_axi_sg_aresetn,
      I3 => s2mm_irqthresh_wren,
      I4 => \dmacr_i_reg[13]\(0),
      I5 => \^gen_include_s2mm.ch2_thresh_count_reg[0]_0\,
      O => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(6),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      I4 => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_3_n_0\,
      O => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_2_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(5),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(7),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(4),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(3),
      O => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_3_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_1_n_0\,
      Q => p_20_out,
      R => '0'
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444444F444F444F"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I1 => s2mm_dmacr(0),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => s2mm_irqthresh_wren,
      I4 => \dmacr_i_reg[13]\(0),
      I5 => \^gen_include_s2mm.ch2_thresh_count_reg[0]_0\,
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[0]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F44F4444"
    )
        port map (
      I0 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I1 => s2mm_dmacr(1),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I4 => irqthresh_wren_reg_0,
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[1]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A9FFA900"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I4 => s2mm_dmacr(2),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[2]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA9FFFFAAA90000"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(3),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I4 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I5 => s2mm_dmacr(3),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[3]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6F60"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(4),
      I1 => \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_2_n_0\,
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I3 => s2mm_dmacr(4),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(3),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_2_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6F60"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(5),
      I1 => \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_2_n_0\,
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I3 => s2mm_dmacr(5),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(3),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      I4 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(4),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_2_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6F60"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(6),
      I1 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_3_n_0\,
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I3 => s2mm_dmacr(6),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[6]_i_1_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9AFF9A00"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(7),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(6),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_3_n_0\,
      I3 => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\,
      I4 => s2mm_dmacr(7),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_2_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(4),
      I1 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      I2 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      I3 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      I4 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(3),
      I5 => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(5),
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_3_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0007"
    )
        port map (
      I0 => \^gen_include_s2mm.ch2_thresh_count_reg[0]_0\,
      I1 => \dmacr_i_reg[13]\(0),
      I2 => s2mm_irqthresh_wren,
      I3 => \GEN_INCLUDE_S2MM.ch2_ioc_irq_set_i_i_2_n_0\,
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_4_n_0\
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[0]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(0),
      S => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[1]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(1),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[2]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(2),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[3]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(3),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[4]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(4),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[5]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(5),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[6]_i_1_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(6),
      R => SR(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0),
      D => \GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_2_n_0\,
      Q => \^gen_include_s2mm.ch2_thresh_count_reg[7]_0\(7),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_rd_status_cntl is
  port (
    sig_rsc2stat_status : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_rd_sts_okay_reg : out STD_LOGIC;
    sig_rsc2stat_status_valid : out STD_LOGIC;
    sig_rsc2data_ready : out STD_LOGIC;
    sig_rd_sts_decerr_reg0 : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_rd_sts_okay_reg0 : in STD_LOGIC;
    sig_data2rsc_valid : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_data2rsc_slverr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_rd_status_cntl : entity is "axi_sg_rd_status_cntl";
end axi_dma_ctrl_axi_sg_rd_status_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_rd_status_cntl is
  signal sig_push_rd_sts_reg : STD_LOGIC;
  signal \sig_rd_sts_decerr_reg_i_1__0_n_0\ : STD_LOGIC;
  signal sig_rd_sts_slverr_reg0 : STD_LOGIC;
  signal \^sig_rsc2data_ready\ : STD_LOGIC;
  signal \^sig_rsc2stat_status\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^sig_rsc2stat_status_valid\ : STD_LOGIC;
begin
  sig_rsc2data_ready <= \^sig_rsc2data_ready\;
  sig_rsc2stat_status(1 downto 0) <= \^sig_rsc2stat_status\(1 downto 0);
  sig_rsc2stat_status_valid <= \^sig_rsc2stat_status_valid\;
\sig_rd_sts_decerr_reg_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8F"
    )
        port map (
      I0 => \^sig_rsc2stat_status_valid\,
      I1 => sig_stat2rsc_status_ready,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_rd_sts_decerr_reg_i_1__0_n_0\
    );
sig_rd_sts_decerr_reg_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^sig_rsc2data_ready\,
      I1 => sig_data2rsc_valid,
      O => sig_push_rd_sts_reg
    );
sig_rd_sts_decerr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_rd_sts_decerr_reg0,
      Q => \^sig_rsc2stat_status\(0),
      R => \sig_rd_sts_decerr_reg_i_1__0_n_0\
    );
sig_rd_sts_okay_reg_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_rd_sts_okay_reg0,
      Q => sig_rd_sts_okay_reg,
      S => \sig_rd_sts_decerr_reg_i_1__0_n_0\
    );
sig_rd_sts_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_rd_sts_reg,
      D => '0',
      Q => \^sig_rsc2data_ready\,
      S => \sig_rd_sts_decerr_reg_i_1__0_n_0\
    );
sig_rd_sts_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_data2rsc_valid,
      Q => \^sig_rsc2stat_status_valid\,
      R => \sig_rd_sts_decerr_reg_i_1__0_n_0\
    );
\sig_rd_sts_slverr_reg_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_rsc2stat_status\(1),
      I1 => sig_data2rsc_slverr,
      O => sig_rd_sts_slverr_reg0
    );
sig_rd_sts_slverr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_rd_sts_reg,
      D => sig_rd_sts_slverr_reg0,
      Q => \^sig_rsc2stat_status\(1),
      R => \sig_rd_sts_decerr_reg_i_1__0_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_rddata_cntl is
  port (
    m_axi_sg_rready : out STD_LOGIC;
    sig_data2rsc_valid : out STD_LOGIC;
    sig_data2rsc_slverr : out STD_LOGIC;
    sig_rd_sts_okay_reg0 : out STD_LOGIC;
    sig_rd_sts_decerr_reg0 : out STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    m_axi_sg_rlast : in STD_LOGIC;
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 : in STD_LOGIC;
    sig_rsc2data_ready : in STD_LOGIC;
    sig_rsc2stat_status : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_rddata_cntl : entity is "axi_sg_rddata_cntl";
end axi_dma_ctrl_axi_sg_rddata_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_rddata_cntl is
  signal mm2s_rlast_del_i_1_n_0 : STD_LOGIC;
  signal \sig_coelsc_decerr_reg_i_1__0_n_0\ : STD_LOGIC;
  signal sig_coelsc_okay_reg_i_1_n_0 : STD_LOGIC;
  signal \sig_coelsc_slverr_reg_i_1__0_n_0\ : STD_LOGIC;
  signal sig_data2rsc_decerr : STD_LOGIC;
  signal sig_data2rsc_okay : STD_LOGIC;
  signal \^sig_data2rsc_slverr\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of sig_rd_sts_decerr_reg_i_3 : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of sig_rd_sts_okay_reg_i_1 : label is "soft_lutpair52";
begin
  sig_data2rsc_slverr <= \^sig_data2rsc_slverr\;
mm2s_rlast_del_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axi_sg_rvalid,
      I1 => m_axi_sg_rlast,
      O => mm2s_rlast_del_i_1_n_0
    );
mm2s_rlast_del_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_rlast_del_i_1_n_0,
      Q => sig_data2rsc_valid,
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
mm2s_rready_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => '1',
      Q => m_axi_sg_rready,
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
\sig_coelsc_decerr_reg_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EAAA000000000000"
    )
        port map (
      I0 => sig_data2rsc_decerr,
      I1 => m_axi_sg_rvalid,
      I2 => m_axi_sg_rresp(0),
      I3 => m_axi_sg_rresp(1),
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      I5 => sig_rsc2data_ready,
      O => \sig_coelsc_decerr_reg_i_1__0_n_0\
    );
sig_coelsc_decerr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_coelsc_decerr_reg_i_1__0_n_0\,
      Q => sig_data2rsc_decerr,
      R => '0'
    );
sig_coelsc_okay_reg_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2EFFFFFF"
    )
        port map (
      I0 => sig_data2rsc_okay,
      I1 => m_axi_sg_rvalid,
      I2 => m_axi_sg_rresp(1),
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      I4 => sig_rsc2data_ready,
      O => sig_coelsc_okay_reg_i_1_n_0
    );
sig_coelsc_okay_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_coelsc_okay_reg_i_1_n_0,
      Q => sig_data2rsc_okay,
      R => '0'
    );
\sig_coelsc_slverr_reg_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAEA000000000000"
    )
        port map (
      I0 => \^sig_data2rsc_slverr\,
      I1 => m_axi_sg_rvalid,
      I2 => m_axi_sg_rresp(1),
      I3 => m_axi_sg_rresp(0),
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      I5 => sig_rsc2data_ready,
      O => \sig_coelsc_slverr_reg_i_1__0_n_0\
    );
sig_coelsc_slverr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_coelsc_slverr_reg_i_1__0_n_0\,
      Q => \^sig_data2rsc_slverr\,
      R => '0'
    );
sig_rd_sts_decerr_reg_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_data2rsc_decerr,
      I1 => sig_rsc2stat_status(0),
      O => sig_rd_sts_decerr_reg0
    );
sig_rd_sts_okay_reg_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => sig_rsc2stat_status(0),
      I1 => sig_data2rsc_decerr,
      I2 => sig_data2rsc_okay,
      I3 => sig_rsc2stat_status(1),
      I4 => \^sig_data2rsc_slverr\,
      O => sig_rd_sts_okay_reg0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_reset is
  port (
    \m_axi_sg_wstrb[0]\ : out STD_LOGIC;
    mm2s_rlast_del_reg : out STD_LOGIC;
    dm_m_axi_sg_aresetn : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_reset : entity is "axi_sg_reset";
end axi_dma_ctrl_axi_sg_reset;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_reset is
  signal \^m_axi_sg_wstrb[0]\ : STD_LOGIC;
begin
  \m_axi_sg_wstrb[0]\ <= \^m_axi_sg_wstrb[0]\;
mm2s_rready_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^m_axi_sg_wstrb[0]\,
      O => mm2s_rlast_del_reg
    );
sig_cmd_stat_rst_user_reg_n_cdc_from_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dm_m_axi_sg_aresetn,
      Q => \^m_axi_sg_wstrb[0]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_scc is
  port (
    sig_cmd_reg_empty : out STD_LOGIC;
    sig_mstr2addr_cmd_valid : out STD_LOGIC;
    sig_cmd_burst_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_posted_to_axi_2_reg : out STD_LOGIC;
    sig_addr_valid_reg_reg : out STD_LOGIC;
    sm_set_error : out STD_LOGIC;
    \sig_next_addr_reg_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_load_input_cmd : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_btt_is_zero : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 26 downto 0 );
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_addr2rsc_cmd_fifo_empty : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_scc : entity is "axi_sg_scc";
end axi_dma_ctrl_axi_sg_scc;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_scc is
  signal sig_btt_is_zero_reg : STD_LOGIC;
  signal \^sig_mstr2addr_cmd_valid\ : STD_LOGIC;
  signal \^sm_set_error\ : STD_LOGIC;
  signal sm_set_error_i_1_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_addr_valid_reg_i_1__1\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of sm_set_error_i_1 : label is "soft_lutpair51";
begin
  sig_mstr2addr_cmd_valid <= \^sig_mstr2addr_cmd_valid\;
  sm_set_error <= \^sm_set_error\;
\sig_addr_valid_reg_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^sm_set_error\,
      O => sig_addr_valid_reg_reg
    );
sig_btt_is_zero_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => sig_btt_is_zero,
      Q => sig_btt_is_zero_reg,
      R => sig_addr_reg_empty_reg
    );
sig_cmd2addr_valid1_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => '1',
      Q => \^sig_mstr2addr_cmd_valid\,
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(5),
      Q => \sig_next_addr_reg_reg[31]\(4),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(6),
      Q => \sig_next_addr_reg_reg[31]\(5),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(7),
      Q => \sig_next_addr_reg_reg[31]\(6),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(8),
      Q => \sig_next_addr_reg_reg[31]\(7),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(9),
      Q => \sig_next_addr_reg_reg[31]\(8),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(10),
      Q => \sig_next_addr_reg_reg[31]\(9),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(11),
      Q => \sig_next_addr_reg_reg[31]\(10),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(12),
      Q => \sig_next_addr_reg_reg[31]\(11),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(13),
      Q => \sig_next_addr_reg_reg[31]\(12),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(14),
      Q => \sig_next_addr_reg_reg[31]\(13),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(15),
      Q => \sig_next_addr_reg_reg[31]\(14),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(16),
      Q => \sig_next_addr_reg_reg[31]\(15),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(17),
      Q => \sig_next_addr_reg_reg[31]\(16),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(18),
      Q => \sig_next_addr_reg_reg[31]\(17),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(19),
      Q => \sig_next_addr_reg_reg[31]\(18),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(20),
      Q => \sig_next_addr_reg_reg[31]\(19),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(21),
      Q => \sig_next_addr_reg_reg[31]\(20),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(22),
      Q => \sig_next_addr_reg_reg[31]\(21),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(23),
      Q => \sig_next_addr_reg_reg[31]\(22),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(24),
      Q => \sig_next_addr_reg_reg[31]\(23),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(25),
      Q => \sig_next_addr_reg_reg[31]\(24),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(26),
      Q => \sig_next_addr_reg_reg[31]\(25),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(1),
      Q => \sig_next_addr_reg_reg[31]\(0),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(2),
      Q => \sig_next_addr_reg_reg[31]\(1),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(3),
      Q => \sig_next_addr_reg_reg[31]\(2),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(4),
      Q => \sig_next_addr_reg_reg[31]\(3),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_burst_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(0),
      Q => sig_cmd_burst_reg(0),
      R => sig_addr_reg_empty_reg
    );
sig_cmd_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => '0',
      Q => sig_cmd_reg_empty,
      S => sig_addr_reg_empty_reg
    );
\sig_posted_to_axi_2_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^sig_mstr2addr_cmd_valid\,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I2 => sig_addr2rsc_cmd_fifo_empty,
      O => sig_posted_to_axi_2_reg
    );
sm_set_error_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_btt_is_zero_reg,
      I1 => \^sm_set_error\,
      O => sm_set_error_i_1_n_0
    );
sm_set_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sm_set_error_i_1_n_0,
      Q => \^sm_set_error\,
      R => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_scc_wr is
  port (
    sig_cmd_reg_empty : out STD_LOGIC;
    sig_mstr2data_cmd_valid : out STD_LOGIC;
    \sig_next_addr_reg_reg[3]\ : out STD_LOGIC;
    sig_posted_to_axi_2_reg : out STD_LOGIC;
    sig_push_addr_reg1_out : out STD_LOGIC;
    sig_addr_valid_reg_reg : out STD_LOGIC;
    sig_calc2dm_calc_err : out STD_LOGIC;
    \sig_next_addr_reg_reg[31]\ : out STD_LOGIC_VECTOR ( 26 downto 0 );
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_load_input_cmd : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_btt_is_zero : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 27 downto 0 );
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ : in STD_LOGIC;
    sig_addr2wsc_cmd_fifo_empty : in STD_LOGIC;
    sig_stream_rst : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_scc_wr : entity is "axi_sg_scc_wr";
end axi_dma_ctrl_axi_sg_scc_wr;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_scc_wr is
  signal sig_btt_is_zero_reg_reg_n_0 : STD_LOGIC;
  signal \^sig_calc2dm_calc_err\ : STD_LOGIC;
  signal \^sig_mstr2data_cmd_valid\ : STD_LOGIC;
  signal sm_set_error_i_1_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_addr_valid_reg_i_1__2\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \sig_next_addr_reg[31]_i_2__2\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \sig_posted_to_axi_2_i_1__0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of sm_set_error_i_1 : label is "soft_lutpair58";
begin
  sig_calc2dm_calc_err <= \^sig_calc2dm_calc_err\;
  sig_mstr2data_cmd_valid <= \^sig_mstr2data_cmd_valid\;
\sig_addr_valid_reg_i_1__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^sig_calc2dm_calc_err\,
      O => sig_addr_valid_reg_reg
    );
sig_btt_is_zero_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => sig_btt_is_zero,
      Q => sig_btt_is_zero_reg_reg_n_0,
      R => sig_addr_reg_empty_reg
    );
sig_cmd2addr_valid1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => '1',
      Q => \^sig_mstr2data_cmd_valid\,
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(6),
      Q => \sig_next_addr_reg_reg[31]\(5),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(7),
      Q => \sig_next_addr_reg_reg[31]\(6),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(8),
      Q => \sig_next_addr_reg_reg[31]\(7),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(9),
      Q => \sig_next_addr_reg_reg[31]\(8),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(10),
      Q => \sig_next_addr_reg_reg[31]\(9),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(11),
      Q => \sig_next_addr_reg_reg[31]\(10),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(12),
      Q => \sig_next_addr_reg_reg[31]\(11),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(13),
      Q => \sig_next_addr_reg_reg[31]\(12),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(14),
      Q => \sig_next_addr_reg_reg[31]\(13),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(15),
      Q => \sig_next_addr_reg_reg[31]\(14),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(16),
      Q => \sig_next_addr_reg_reg[31]\(15),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(17),
      Q => \sig_next_addr_reg_reg[31]\(16),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(18),
      Q => \sig_next_addr_reg_reg[31]\(17),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(19),
      Q => \sig_next_addr_reg_reg[31]\(18),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(20),
      Q => \sig_next_addr_reg_reg[31]\(19),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(21),
      Q => \sig_next_addr_reg_reg[31]\(20),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(22),
      Q => \sig_next_addr_reg_reg[31]\(21),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(23),
      Q => \sig_next_addr_reg_reg[31]\(22),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(24),
      Q => \sig_next_addr_reg_reg[31]\(23),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(25),
      Q => \sig_next_addr_reg_reg[31]\(24),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(26),
      Q => \sig_next_addr_reg_reg[31]\(25),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(27),
      Q => \sig_next_addr_reg_reg[31]\(26),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(0),
      Q => \sig_next_addr_reg_reg[3]\,
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(1),
      Q => \sig_next_addr_reg_reg[31]\(0),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(2),
      Q => \sig_next_addr_reg_reg[31]\(1),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(3),
      Q => \sig_next_addr_reg_reg[31]\(2),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(4),
      Q => \sig_next_addr_reg_reg[31]\(3),
      R => sig_addr_reg_empty_reg
    );
\sig_cmd_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => Q(5),
      Q => \sig_next_addr_reg_reg[31]\(4),
      R => sig_addr_reg_empty_reg
    );
sig_cmd_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_load_input_cmd,
      D => '0',
      Q => sig_cmd_reg_empty,
      S => sig_addr_reg_empty_reg
    );
\sig_next_addr_reg[31]_i_2__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^sig_mstr2data_cmd_valid\,
      I1 => sig_addr2wsc_cmd_fifo_empty,
      I2 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\,
      O => sig_push_addr_reg1_out
    );
\sig_posted_to_axi_2_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0800"
    )
        port map (
      I0 => \^sig_mstr2data_cmd_valid\,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I2 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\,
      I3 => sig_addr2wsc_cmd_fifo_empty,
      O => sig_posted_to_axi_2_reg
    );
sm_set_error_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_btt_is_zero_reg_reg_n_0,
      I1 => \^sig_calc2dm_calc_err\,
      O => sm_set_error_i_1_n_0
    );
sm_set_error_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sm_set_error_i_1_n_0,
      Q => \^sig_calc2dm_calc_err\,
      R => sig_stream_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_updt_cmdsts_if is
  port (
    updt_decerr : out STD_LOGIC;
    updt_interr : out STD_LOGIC;
    updt_slverr : out STD_LOGIC;
    p_20_out_0 : out STD_LOGIC;
    updt_done : out STD_LOGIC;
    p_27_out : out STD_LOGIC;
    p_18_out : out STD_LOGIC;
    updt_error_reg_0 : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    updt_decerr_i : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    updt_interr_i : in STD_LOGIC;
    updt_slverr_i : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\ : in STD_LOGIC;
    p_12_out : in STD_LOGIC;
    p_7_out_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_updt_cmdsts_if : entity is "axi_sg_updt_cmdsts_if";
end axi_dma_ctrl_axi_sg_updt_cmdsts_if;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_updt_cmdsts_if is
  signal \^updt_decerr\ : STD_LOGIC;
  signal \^updt_done\ : STD_LOGIC;
  signal updt_error_i_1_n_0 : STD_LOGIC;
  signal \^updt_error_reg_0\ : STD_LOGIC;
  signal \^updt_interr\ : STD_LOGIC;
  signal \^updt_slverr\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_i_1\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_i_2\ : label is "soft_lutpair0";
begin
  updt_decerr <= \^updt_decerr\;
  updt_done <= \^updt_done\;
  updt_error_reg_0 <= \^updt_error_reg_0\;
  updt_interr <= \^updt_interr\;
  updt_slverr <= \^updt_slverr\;
\GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^updt_done\,
      I1 => p_12_out,
      O => p_27_out
    );
\GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^updt_done\,
      I1 => p_7_out_2,
      O => p_18_out
    );
s_axis_updt_cmd_tvalid_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      Q => p_20_out_0,
      R => SR(0)
    );
updt_decerr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_decerr_i,
      Q => \^updt_decerr\,
      R => SR(0)
    );
updt_done_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\,
      Q => \^updt_done\,
      R => '0'
    );
updt_error_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^updt_interr\,
      I1 => \^updt_slverr\,
      I2 => \^updt_decerr\,
      I3 => \^updt_error_reg_0\,
      O => updt_error_i_1_n_0
    );
updt_error_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_error_i_1_n_0,
      Q => \^updt_error_reg_0\,
      R => SR(0)
    );
updt_interr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_interr_i,
      Q => \^updt_interr\,
      R => SR(0)
    );
updt_slverr_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_slverr_i,
      Q => \^updt_slverr\,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_updt_queue is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    sts2_queue_full : out STD_LOGIC;
    follower_full_s2mm : out STD_LOGIC;
    sts_queue_full : out STD_LOGIC;
    follower_full_mm2s : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg_0\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg_0\ : out STD_LOGIC;
    p_12_out : out STD_LOGIC;
    p_11_out : out STD_LOGIC;
    p_10_out_1 : out STD_LOGIC;
    p_9_out : out STD_LOGIC;
    p_7_out_2 : out STD_LOGIC;
    p_6_out : out STD_LOGIC;
    p_5_out_3 : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \pntr_cs_reg[1]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_UPDATE.ch1_active_i_reg\ : out STD_LOGIC;
    \updt_cs_reg[0]\ : out STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg\ : out STD_LOGIC;
    \updt_cs_reg[0]_0\ : out STD_LOGIC;
    m_axi_sg_wdata : out STD_LOGIC_VECTOR ( 5 downto 0 );
    \update_address_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg_0\ : in STD_LOGIC;
    p_38_out : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\ : in STD_LOGIC;
    p_49_out : in STD_LOGIC;
    p_48_out : in STD_LOGIC;
    p_47_out : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\ : in STD_LOGIC;
    p_23_out : in STD_LOGIC;
    p_22_out : in STD_LOGIC;
    p_21_out : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg_0\ : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg_0\ : in STD_LOGIC;
    p_5_out : in STD_LOGIC;
    \p_7_out__0\ : in STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    s_axis_mm2s_updtsts_tvalid : in STD_LOGIC;
    s_axis_s2mm_updtsts_tvalid : in STD_LOGIC;
    \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg0_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    updt_data_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg0_reg[31]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_UPDT_QUEUE.updt_sts_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_s2mm_updtsts_tdata : in STD_LOGIC_VECTOR ( 5 downto 0 );
    updt_sts_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg2_reg[32]\ : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_updt_queue : entity is "axi_sg_updt_queue";
end axi_dma_ctrl_axi_sg_updt_queue;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_updt_queue is
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_empty_mm2s_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[28]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[29]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[30]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[32]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_i_1_n_0\ : STD_LOGIC;
  signal \^gen_q_for_sync.mm2s_channel.ptr_queue_full_reg_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_empty_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_full_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_empty_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_full_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_empty_s2mm_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[26]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[27]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[28]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[29]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[30]\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_1_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_2_n_0\ : STD_LOGIC;
  signal \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_3_n_0\ : STD_LOGIC;
  signal \^gen_q_for_sync.s2mm_channel.ptr2_queue_full_reg_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal dma2_decerr_i_1_n_0 : STD_LOGIC;
  signal dma2_interr_i_1_n_0 : STD_LOGIC;
  signal dma2_slverr_i_1_n_0 : STD_LOGIC;
  signal \dma_decerr_i_1__1_n_0\ : STD_LOGIC;
  signal \dma_interr_i_1__1_n_0\ : STD_LOGIC;
  signal \dma_slverr_i_1__1_n_0\ : STD_LOGIC;
  signal follower_empty_mm2s : STD_LOGIC;
  signal follower_empty_s2mm : STD_LOGIC;
  signal \^follower_full_mm2s\ : STD_LOGIC;
  signal \^follower_full_s2mm\ : STD_LOGIC;
  signal \^p_10_out_1\ : STD_LOGIC;
  signal \^p_11_out\ : STD_LOGIC;
  signal \^p_12_out\ : STD_LOGIC;
  signal \^p_4_out\ : STD_LOGIC;
  signal \^p_5_out_3\ : STD_LOGIC;
  signal \^p_6_out\ : STD_LOGIC;
  signal \^p_7_out_2\ : STD_LOGIC;
  signal \^p_9_out\ : STD_LOGIC;
  signal pntr_cs : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \pntr_cs[0]_i_2_n_0\ : STD_LOGIC;
  signal \pntr_cs[1]_i_2_n_0\ : STD_LOGIC;
  signal \^pntr_cs_reg[1]_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal pntr_ns : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal ptr2_queue_dout : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal ptr2_queue_empty : STD_LOGIC;
  signal ptr_queue_dout : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal ptr_queue_dout_int : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal ptr_queue_empty : STD_LOGIC;
  signal sts2_queue_dout : STD_LOGIC_VECTOR ( 31 downto 26 );
  signal sts2_queue_empty : STD_LOGIC;
  signal \^sts2_queue_full\ : STD_LOGIC;
  signal sts2_rden : STD_LOGIC;
  signal sts_queue_dout : STD_LOGIC_VECTOR ( 32 downto 28 );
  signal sts_queue_empty : STD_LOGIC;
  signal \^sts_queue_full\ : STD_LOGIC;
  signal sts_rden : STD_LOGIC;
  signal updt2_ioc_i_1_n_0 : STD_LOGIC;
  signal updt_active_d1 : STD_LOGIC;
  signal updt_active_d2 : STD_LOGIC;
  signal updt_curdesc0 : STD_LOGIC;
  signal updt_ioc_i_1_n_0 : STD_LOGIC;
  signal writing_status : STD_LOGIC;
  signal writing_status_d1 : STD_LOGIC;
  signal writing_status_re_ch1 : STD_LOGIC;
  signal writing_status_re_ch2 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_active_i_i_3\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_active_i_i_4\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_i_1\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_1\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_3\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \m_axi_sg_wdata[27]_INST_0\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \m_axi_sg_wdata[28]_INST_0\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \m_axi_sg_wdata[29]_INST_0\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \m_axi_sg_wdata[30]_INST_0\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \m_axi_sg_wdata[31]_INST_0\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \pntr_cs[1]_i_2\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of updt2_ioc_i_2 : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \updt_cs[0]_i_3\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \updt_cs[0]_i_5\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \updt_curdesc[10]_i_1\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \updt_curdesc[11]_i_1\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \updt_curdesc[12]_i_1\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \updt_curdesc[13]_i_1\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \updt_curdesc[14]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \updt_curdesc[15]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \updt_curdesc[16]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \updt_curdesc[17]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \updt_curdesc[18]_i_1\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \updt_curdesc[19]_i_1\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \updt_curdesc[20]_i_1\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \updt_curdesc[21]_i_1\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \updt_curdesc[22]_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \updt_curdesc[23]_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \updt_curdesc[24]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \updt_curdesc[25]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \updt_curdesc[26]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \updt_curdesc[27]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \updt_curdesc[28]_i_1\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \updt_curdesc[29]_i_1\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \updt_curdesc[30]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \updt_curdesc[31]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \updt_curdesc[6]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \updt_curdesc[7]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \updt_curdesc[8]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \updt_curdesc[9]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of updt_ioc_i_2 : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of writing_status_d1_i_1 : label is "soft_lutpair33";
begin
  \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg_0\ <= \^gen_q_for_sync.mm2s_channel.ptr_queue_full_reg_0\;
  \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg_0\ <= \^gen_q_for_sync.s2mm_channel.ptr2_queue_full_reg_0\;
  Q(0) <= \^q\(0);
  follower_full_mm2s <= \^follower_full_mm2s\;
  follower_full_s2mm <= \^follower_full_s2mm\;
  p_10_out_1 <= \^p_10_out_1\;
  p_11_out <= \^p_11_out\;
  p_12_out <= \^p_12_out\;
  p_4_out <= \^p_4_out\;
  p_5_out_3 <= \^p_5_out_3\;
  p_6_out <= \^p_6_out\;
  p_7_out_2 <= \^p_7_out_2\;
  p_9_out <= \^p_9_out\;
  \pntr_cs_reg[1]_0\(0) <= \^pntr_cs_reg[1]_0\(0);
  sts2_queue_full <= \^sts2_queue_full\;
  sts_queue_full <= \^sts_queue_full\;
\GEN_CH1_UPDATE.ch1_active_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => p_5_out,
      I1 => \p_7_out__0\,
      I2 => follower_empty_mm2s,
      I3 => ptr_queue_empty,
      O => \GEN_CH1_UPDATE.ch1_active_i_reg\
    );
\GEN_CH2_UPDATE.ch2_active_i_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEFF"
    )
        port map (
      I0 => \p_7_out__0\,
      I1 => follower_empty_s2mm,
      I2 => ptr2_queue_empty,
      I3 => p_38_out,
      I4 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      O => \GEN_CH2_UPDATE.ch2_active_i_reg\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_empty_mm2s_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF888F"
    )
        port map (
      I0 => follower_empty_mm2s,
      I1 => sts_queue_empty,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg_0\,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_empty_mm2s_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_empty_mm2s_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_empty_mm2s_i_1_n_0\,
      Q => follower_empty_mm2s,
      R => '0'
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AEAEAE00"
    )
        port map (
      I0 => \^follower_full_mm2s\,
      I1 => follower_empty_mm2s,
      I2 => sts_queue_empty,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg_0\,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_i_1_n_0\,
      Q => \^follower_full_mm2s\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s[32]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => follower_empty_mm2s,
      I1 => sts_queue_empty,
      O => sts_rden
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts_rden,
      D => sts_queue_dout(28),
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[28]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts_rden,
      D => sts_queue_dout(29),
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[29]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts_rden,
      D => sts_queue_dout(30),
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[30]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts_rden,
      D => sts_queue_dout(31),
      Q => \^pntr_cs_reg[1]_0\(0),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts_rden,
      D => sts_queue_dout(32),
      Q => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[32]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(4),
      Q => ptr_queue_dout(10),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(5),
      Q => ptr_queue_dout(11),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(6),
      Q => ptr_queue_dout(12),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(7),
      Q => ptr_queue_dout(13),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(8),
      Q => ptr_queue_dout(14),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(9),
      Q => ptr_queue_dout(15),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(10),
      Q => ptr_queue_dout(16),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(11),
      Q => ptr_queue_dout(17),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(12),
      Q => ptr_queue_dout(18),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(13),
      Q => ptr_queue_dout(19),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(14),
      Q => ptr_queue_dout(20),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(15),
      Q => ptr_queue_dout(21),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(16),
      Q => ptr_queue_dout(22),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(17),
      Q => ptr_queue_dout(23),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(18),
      Q => ptr_queue_dout(24),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(19),
      Q => ptr_queue_dout(25),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(20),
      Q => ptr_queue_dout(26),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(21),
      Q => ptr_queue_dout(27),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(22),
      Q => ptr_queue_dout(28),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(23),
      Q => ptr_queue_dout(29),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(24),
      Q => ptr_queue_dout(30),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(25),
      Q => ptr_queue_dout(31),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(0),
      Q => ptr_queue_dout(6),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(1),
      Q => ptr_queue_dout(7),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(2),
      Q => ptr_queue_dout(8),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      D => \updt_desc_reg0_reg[31]\(3),
      Q => ptr_queue_dout(9),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF8AFF8AFF8AFF"
    )
        port map (
      I0 => ptr_queue_empty,
      I1 => \^gen_q_for_sync.mm2s_channel.ptr_queue_full_reg_0\,
      I2 => s_axis_mm2s_updtptr_tvalid,
      I3 => m_axi_sg_aresetn,
      I4 => updt_curdesc0,
      I5 => p_38_out,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_i_1_n_0\,
      Q => ptr_queue_empty,
      R => '0'
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000EEE0EEE0EEE0"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.ptr_queue_full_reg_0\,
      I1 => s_axis_mm2s_updtptr_tvalid,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => updt_curdesc0,
      I5 => p_38_out,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_i_1_n_0\,
      Q => \^gen_q_for_sync.mm2s_channel.ptr_queue_full_reg_0\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_sts_reg(0),
      D => \updt_desc_reg2_reg[32]\(0),
      Q => sts_queue_dout(28),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_sts_reg(0),
      D => \updt_desc_reg2_reg[32]\(1),
      Q => sts_queue_dout(29),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_sts_reg(0),
      D => \updt_desc_reg2_reg[32]\(2),
      Q => sts_queue_dout(30),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_sts_reg(0),
      D => \updt_desc_reg2_reg[32]\(3),
      Q => sts_queue_dout(31),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_sts_reg(0),
      D => \updt_desc_reg2_reg[32]\(4),
      Q => sts_queue_dout(32),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_empty_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBFBBBFFFFF000F"
    )
        port map (
      I0 => \^sts_queue_full\,
      I1 => s_axis_mm2s_updtsts_tvalid,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => follower_empty_mm2s,
      I5 => sts_queue_empty,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_empty_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_empty_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_empty_i_1_n_0\,
      Q => sts_queue_empty,
      R => '0'
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_full_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEE0EEE00000EEE0"
    )
        port map (
      I0 => \^sts_queue_full\,
      I1 => s_axis_mm2s_updtsts_tvalid,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => follower_empty_mm2s,
      I5 => sts_queue_empty,
      O => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_full_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_full_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_full_i_1_n_0\,
      Q => \^sts_queue_full\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.MM2S_CHANNEL.updt_active_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_38_out,
      Q => updt_active_d1,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      D => s_axis_s2mm_updtsts_tdata(0),
      Q => sts2_queue_dout(26),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      D => s_axis_s2mm_updtsts_tdata(1),
      Q => sts2_queue_dout(27),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      D => s_axis_s2mm_updtsts_tdata(2),
      Q => sts2_queue_dout(28),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      D => s_axis_s2mm_updtsts_tdata(3),
      Q => sts2_queue_dout(29),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      D => s_axis_s2mm_updtsts_tdata(4),
      Q => sts2_queue_dout(30),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      D => s_axis_s2mm_updtsts_tdata(5),
      Q => sts2_queue_dout(31),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_empty_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBFBBBFFFFF000F"
    )
        port map (
      I0 => \^sts2_queue_full\,
      I1 => s_axis_s2mm_updtsts_tvalid,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => follower_empty_s2mm,
      I5 => sts2_queue_empty,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_empty_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_empty_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_empty_i_1_n_0\,
      Q => sts2_queue_empty,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_full_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEE0EEE00000EEE0"
    )
        port map (
      I0 => \^sts2_queue_full\,
      I1 => s_axis_s2mm_updtsts_tvalid,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => follower_empty_s2mm,
      I5 => sts2_queue_empty,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_full_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_full_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_full_i_1_n_0\,
      Q => \^sts2_queue_full\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_empty_s2mm_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF888F"
    )
        port map (
      I0 => follower_empty_s2mm,
      I1 => sts2_queue_empty,
      I2 => mm2s_scndry_resetn,
      I3 => s2mm_scndry_resetn,
      I4 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg_0\,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_empty_s2mm_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_empty_s2mm_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_empty_s2mm_i_1_n_0\,
      Q => follower_empty_s2mm,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AEAEAE00"
    )
        port map (
      I0 => \^follower_full_s2mm\,
      I1 => follower_empty_s2mm,
      I2 => sts2_queue_empty,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg_0\,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_i_1_n_0\,
      Q => \^follower_full_s2mm\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => follower_empty_s2mm,
      I1 => sts2_queue_empty,
      O => sts2_rden
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts2_rden,
      D => sts2_queue_dout(26),
      Q => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[26]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts2_rden,
      D => sts2_queue_dout(27),
      Q => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[27]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts2_rden,
      D => sts2_queue_dout(28),
      Q => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[28]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts2_rden,
      D => sts2_queue_dout(29),
      Q => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[29]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts2_rden,
      D => sts2_queue_dout(30),
      Q => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[30]\,
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sts2_rden,
      D => sts2_queue_dout(31),
      Q => \^q\(0),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(4),
      Q => ptr2_queue_dout(10),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(5),
      Q => ptr2_queue_dout(11),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(6),
      Q => ptr2_queue_dout(12),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(7),
      Q => ptr2_queue_dout(13),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(8),
      Q => ptr2_queue_dout(14),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(9),
      Q => ptr2_queue_dout(15),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(10),
      Q => ptr2_queue_dout(16),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(11),
      Q => ptr2_queue_dout(17),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(12),
      Q => ptr2_queue_dout(18),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(13),
      Q => ptr2_queue_dout(19),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(14),
      Q => ptr2_queue_dout(20),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(15),
      Q => ptr2_queue_dout(21),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(16),
      Q => ptr2_queue_dout(22),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(17),
      Q => ptr2_queue_dout(23),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(18),
      Q => ptr2_queue_dout(24),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(19),
      Q => ptr2_queue_dout(25),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(20),
      Q => ptr2_queue_dout(26),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(21),
      Q => ptr2_queue_dout(27),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(22),
      Q => ptr2_queue_dout(28),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(23),
      Q => ptr2_queue_dout(29),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(24),
      Q => ptr2_queue_dout(30),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(25),
      Q => ptr2_queue_dout(31),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(0),
      Q => ptr2_queue_dout(6),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(1),
      Q => ptr2_queue_dout(7),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(2),
      Q => ptr2_queue_dout(8),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => updt_data_reg(0),
      D => \updt_desc_reg0_reg[31]_0\(3),
      Q => ptr2_queue_dout(9),
      R => SR(0)
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF8A"
    )
        port map (
      I0 => ptr2_queue_empty,
      I1 => \^gen_q_for_sync.s2mm_channel.ptr2_queue_full_reg_0\,
      I2 => s_axis_s2mm_updtptr_tvalid,
      I3 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_2_n_0\,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_i_1_n_0\,
      Q => ptr2_queue_empty,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^gen_q_for_sync.s2mm_channel.ptr2_queue_full_reg_0\,
      I1 => s_axis_s2mm_updtptr_tvalid,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_2_n_0\,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_1_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"07000000FFFFFFFF"
    )
        port map (
      I0 => p_38_out,
      I1 => ptr_queue_empty,
      I2 => ptr2_queue_empty,
      I3 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I4 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_3_n_0\,
      I5 => m_axi_sg_aresetn,
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_2_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => pntr_cs(0),
      I1 => pntr_cs(1),
      O => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_3_n_0\
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_i_1_n_0\,
      Q => \^gen_q_for_sync.s2mm_channel.ptr2_queue_full_reg_0\,
      R => '0'
    );
\GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      Q => updt_active_d2,
      R => SR(0)
    );
dma2_decerr_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_4_out\,
      I1 => writing_status_re_ch2,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[30]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => p_21_out,
      O => dma2_decerr_i_1_n_0
    );
dma2_decerr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dma2_decerr_i_1_n_0,
      Q => \^p_4_out\,
      R => '0'
    );
dma2_interr_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_6_out\,
      I1 => writing_status_re_ch2,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[28]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => p_23_out,
      O => dma2_interr_i_1_n_0
    );
dma2_interr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dma2_interr_i_1_n_0,
      Q => \^p_6_out\,
      R => '0'
    );
dma2_slverr_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_5_out_3\,
      I1 => writing_status_re_ch2,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[29]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => p_22_out,
      O => dma2_slverr_i_1_n_0
    );
dma2_slverr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => dma2_slverr_i_1_n_0,
      Q => \^p_5_out_3\,
      R => '0'
    );
\dma_decerr_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_9_out\,
      I1 => writing_status_re_ch1,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[30]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => p_47_out,
      O => \dma_decerr_i_1__1_n_0\
    );
dma_decerr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \dma_decerr_i_1__1_n_0\,
      Q => \^p_9_out\,
      R => '0'
    );
\dma_interr_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_11_out\,
      I1 => writing_status_re_ch1,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[28]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => p_49_out,
      O => \dma_interr_i_1__1_n_0\
    );
dma_interr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \dma_interr_i_1__1_n_0\,
      Q => \^p_11_out\,
      R => '0'
    );
\dma_slverr_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_10_out_1\,
      I1 => writing_status_re_ch1,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[29]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => p_48_out,
      O => \dma_slverr_i_1__1_n_0\
    );
dma_slverr_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \dma_slverr_i_1__1_n_0\,
      Q => \^p_10_out_1\,
      R => '0'
    );
\m_axi_sg_wdata[26]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[26]\,
      I1 => p_38_out,
      O => m_axi_sg_wdata(0)
    );
\m_axi_sg_wdata[27]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[27]\,
      I1 => p_38_out,
      O => m_axi_sg_wdata(1)
    );
\m_axi_sg_wdata[28]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[28]\,
      I1 => p_38_out,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[28]\,
      O => m_axi_sg_wdata(2)
    );
\m_axi_sg_wdata[29]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[29]\,
      I1 => p_38_out,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[29]\,
      O => m_axi_sg_wdata(3)
    );
\m_axi_sg_wdata[30]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[30]\,
      I1 => p_38_out,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[30]\,
      O => m_axi_sg_wdata(4)
    );
\m_axi_sg_wdata[31]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^pntr_cs_reg[1]_0\(0),
      I1 => p_38_out,
      I2 => \^q\(0),
      O => m_axi_sg_wdata(5)
    );
\pntr_cs[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF5700"
    )
        port map (
      I0 => \pntr_cs[1]_i_2_n_0\,
      I1 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg_0\,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg_0\,
      I3 => pntr_cs(0),
      I4 => \pntr_cs[0]_i_2_n_0\,
      O => pntr_ns(0)
    );
\pntr_cs[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2322232233332322"
    )
        port map (
      I0 => pntr_cs(0),
      I1 => pntr_cs(1),
      I2 => updt_active_d1,
      I3 => p_38_out,
      I4 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I5 => updt_active_d2,
      O => \pntr_cs[0]_i_2_n_0\
    );
\pntr_cs[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBFAAAAAAAAAAAA"
    )
        port map (
      I0 => updt_curdesc0,
      I1 => \pntr_cs[1]_i_2_n_0\,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg_0\,
      I3 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg_0\,
      I4 => pntr_cs(1),
      I5 => pntr_cs(0),
      O => pntr_ns(1)
    );
\pntr_cs[1]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \^q\(0),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => \^pntr_cs_reg[1]_0\(0),
      I3 => p_38_out,
      O => \pntr_cs[1]_i_2_n_0\
    );
\pntr_cs_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => pntr_ns(0),
      Q => pntr_cs(0),
      R => SR(0)
    );
\pntr_cs_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => pntr_ns(1),
      Q => pntr_cs(1),
      R => SR(0)
    );
updt2_ioc_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_7_out_2\,
      I1 => writing_status_re_ch2,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_reg_s2mm_reg_n_0_[26]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\,
      O => updt2_ioc_i_1_n_0
    );
updt2_ioc_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I1 => pntr_cs(1),
      I2 => pntr_cs(0),
      I3 => writing_status_d1,
      O => writing_status_re_ch2
    );
updt2_ioc_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt2_ioc_i_1_n_0,
      Q => \^p_7_out_2\,
      R => '0'
    );
\updt_cs[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => ptr2_queue_empty,
      I1 => follower_empty_s2mm,
      I2 => \p_7_out__0\,
      O => \updt_cs_reg[0]_0\
    );
\updt_cs[0]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => ptr_queue_empty,
      I1 => follower_empty_mm2s,
      I2 => \p_7_out__0\,
      O => \updt_cs_reg[0]\
    );
\updt_curdesc[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(10),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(10),
      O => ptr_queue_dout_int(10)
    );
\updt_curdesc[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(11),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(11),
      O => ptr_queue_dout_int(11)
    );
\updt_curdesc[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(12),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(12),
      O => ptr_queue_dout_int(12)
    );
\updt_curdesc[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(13),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(13),
      O => ptr_queue_dout_int(13)
    );
\updt_curdesc[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(14),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(14),
      O => ptr_queue_dout_int(14)
    );
\updt_curdesc[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(15),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(15),
      O => ptr_queue_dout_int(15)
    );
\updt_curdesc[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(16),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(16),
      O => ptr_queue_dout_int(16)
    );
\updt_curdesc[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(17),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(17),
      O => ptr_queue_dout_int(17)
    );
\updt_curdesc[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(18),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(18),
      O => ptr_queue_dout_int(18)
    );
\updt_curdesc[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(19),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(19),
      O => ptr_queue_dout_int(19)
    );
\updt_curdesc[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(20),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(20),
      O => ptr_queue_dout_int(20)
    );
\updt_curdesc[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(21),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(21),
      O => ptr_queue_dout_int(21)
    );
\updt_curdesc[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(22),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(22),
      O => ptr_queue_dout_int(22)
    );
\updt_curdesc[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(23),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(23),
      O => ptr_queue_dout_int(23)
    );
\updt_curdesc[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(24),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(24),
      O => ptr_queue_dout_int(24)
    );
\updt_curdesc[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(25),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(25),
      O => ptr_queue_dout_int(25)
    );
\updt_curdesc[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(26),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(26),
      O => ptr_queue_dout_int(26)
    );
\updt_curdesc[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(27),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(27),
      O => ptr_queue_dout_int(27)
    );
\updt_curdesc[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(28),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(28),
      O => ptr_queue_dout_int(28)
    );
\updt_curdesc[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(29),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(29),
      O => ptr_queue_dout_int(29)
    );
\updt_curdesc[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(30),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(30),
      O => ptr_queue_dout_int(30)
    );
\updt_curdesc[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(31),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(31),
      O => ptr_queue_dout_int(31)
    );
\updt_curdesc[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(6),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(6),
      O => ptr_queue_dout_int(6)
    );
\updt_curdesc[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(7),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(7),
      O => ptr_queue_dout_int(7)
    );
\updt_curdesc[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(8),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(8),
      O => ptr_queue_dout_int(8)
    );
\updt_curdesc[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ptr2_queue_dout(9),
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => ptr_queue_dout(9),
      O => ptr_queue_dout_int(9)
    );
\updt_curdesc_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(10),
      Q => \update_address_reg[31]\(4),
      R => SR(0)
    );
\updt_curdesc_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(11),
      Q => \update_address_reg[31]\(5),
      R => SR(0)
    );
\updt_curdesc_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(12),
      Q => \update_address_reg[31]\(6),
      R => SR(0)
    );
\updt_curdesc_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(13),
      Q => \update_address_reg[31]\(7),
      R => SR(0)
    );
\updt_curdesc_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(14),
      Q => \update_address_reg[31]\(8),
      R => SR(0)
    );
\updt_curdesc_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(15),
      Q => \update_address_reg[31]\(9),
      R => SR(0)
    );
\updt_curdesc_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(16),
      Q => \update_address_reg[31]\(10),
      R => SR(0)
    );
\updt_curdesc_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(17),
      Q => \update_address_reg[31]\(11),
      R => SR(0)
    );
\updt_curdesc_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(18),
      Q => \update_address_reg[31]\(12),
      R => SR(0)
    );
\updt_curdesc_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(19),
      Q => \update_address_reg[31]\(13),
      R => SR(0)
    );
\updt_curdesc_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(20),
      Q => \update_address_reg[31]\(14),
      R => SR(0)
    );
\updt_curdesc_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(21),
      Q => \update_address_reg[31]\(15),
      R => SR(0)
    );
\updt_curdesc_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(22),
      Q => \update_address_reg[31]\(16),
      R => SR(0)
    );
\updt_curdesc_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(23),
      Q => \update_address_reg[31]\(17),
      R => SR(0)
    );
\updt_curdesc_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(24),
      Q => \update_address_reg[31]\(18),
      R => SR(0)
    );
\updt_curdesc_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(25),
      Q => \update_address_reg[31]\(19),
      R => SR(0)
    );
\updt_curdesc_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(26),
      Q => \update_address_reg[31]\(20),
      R => SR(0)
    );
\updt_curdesc_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(27),
      Q => \update_address_reg[31]\(21),
      R => SR(0)
    );
\updt_curdesc_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(28),
      Q => \update_address_reg[31]\(22),
      R => SR(0)
    );
\updt_curdesc_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(29),
      Q => \update_address_reg[31]\(23),
      R => SR(0)
    );
\updt_curdesc_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(30),
      Q => \update_address_reg[31]\(24),
      R => SR(0)
    );
\updt_curdesc_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(31),
      Q => \update_address_reg[31]\(25),
      R => SR(0)
    );
\updt_curdesc_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(6),
      Q => \update_address_reg[31]\(0),
      R => SR(0)
    );
\updt_curdesc_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(7),
      Q => \update_address_reg[31]\(1),
      R => SR(0)
    );
\updt_curdesc_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(8),
      Q => \update_address_reg[31]\(2),
      R => SR(0)
    );
\updt_curdesc_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_curdesc0,
      D => ptr_queue_dout_int(9),
      Q => \update_address_reg[31]\(3),
      R => SR(0)
    );
updt_curdesc_wren_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000F00020"
    )
        port map (
      I0 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I1 => ptr2_queue_empty,
      I2 => pntr_cs(0),
      I3 => pntr_cs(1),
      I4 => p_38_out,
      I5 => ptr_queue_empty,
      O => updt_curdesc0
    );
updt_curdesc_wren_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_curdesc0,
      Q => E(0),
      R => SR(0)
    );
updt_ioc_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E200"
    )
        port map (
      I0 => \^p_12_out\,
      I1 => writing_status_re_ch1,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg_n_0_[32]\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      I5 => \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\,
      O => updt_ioc_i_1_n_0
    );
updt_ioc_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => p_38_out,
      I1 => pntr_cs(1),
      I2 => pntr_cs(0),
      I3 => writing_status_d1,
      O => writing_status_re_ch1
    );
updt_ioc_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_ioc_i_1_n_0,
      Q => \^p_12_out\,
      R => '0'
    );
writing_status_d1_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => pntr_cs(1),
      I1 => pntr_cs(0),
      O => writing_status
    );
writing_status_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => writing_status,
      Q => writing_status_d1,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_updt_sm is
  port (
    \axi_dma_tstvec[4]\ : out STD_LOGIC;
    \axi_dma_tstvec[5]\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.updt_active_d1_reg\ : out STD_LOGIC;
    p_54_out : out STD_LOGIC;
    p_28_out : out STD_LOGIC;
    dma_interr_reg : out STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_interr_set_reg_0\ : out STD_LOGIC;
    dma_slverr_reg : out STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg_0\ : out STD_LOGIC;
    dma_decerr_reg : out STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg_0\ : out STD_LOGIC;
    sg_interr_reg : out STD_LOGIC;
    sg_interr_reg_0 : out STD_LOGIC;
    sg_slverr_reg : out STD_LOGIC;
    sg_slverr_reg_0 : out STD_LOGIC;
    sg_decerr_reg : out STD_LOGIC;
    sg_decerr_reg_0 : out STD_LOGIC;
    dma_interr_reg_0 : out STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_interr_set_reg_0\ : out STD_LOGIC;
    dma_slverr_reg_0 : out STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg_0\ : out STD_LOGIC;
    dma_decerr_reg_0 : out STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg_0\ : out STD_LOGIC;
    sg_interr_reg_1 : out STD_LOGIC;
    sg_interr_reg_2 : out STD_LOGIC;
    sg_slverr_reg_1 : out STD_LOGIC;
    sg_slverr_reg_2 : out STD_LOGIC;
    sg_decerr_reg_1 : out STD_LOGIC;
    sg_decerr_reg_2 : out STD_LOGIC;
    sig_last_mmap_dbeat : out STD_LOGIC;
    sig_last_mmap_dbeat_reg_reg : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \ftch_error_addr_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_updt_cmd_tvalid_reg : out STD_LOGIC;
    \updt_error_addr_reg[31]_0\ : out STD_LOGIC_VECTOR ( 26 downto 0 );
    \ftch_error_addr_reg[31]_0\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    p_27_out : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    dma_interr_reg_1 : in STD_LOGIC;
    dma_slverr_reg_1 : in STD_LOGIC;
    dma_decerr_reg_1 : in STD_LOGIC;
    p_59_out : in STD_LOGIC;
    sg_interr_reg_3 : in STD_LOGIC;
    p_58_out : in STD_LOGIC;
    sg_slverr_reg_3 : in STD_LOGIC;
    p_57_out : in STD_LOGIC;
    sg_decerr_reg_3 : in STD_LOGIC;
    dma_interr_reg_2 : in STD_LOGIC;
    dma_slverr_reg_2 : in STD_LOGIC;
    dma_decerr_reg_2 : in STD_LOGIC;
    p_33_out : in STD_LOGIC;
    sg_interr_reg_4 : in STD_LOGIC;
    p_32_out : in STD_LOGIC;
    sg_slverr_reg_4 : in STD_LOGIC;
    p_31_out : in STD_LOGIC;
    sg_decerr_reg_4 : in STD_LOGIC;
    updt_done : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\ : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    \sig_dbeat_cntr_reg[7]\ : in STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    sig_dqual_reg_full_reg : in STD_LOGIC;
    follower_full_s2mm : in STD_LOGIC;
    follower_full_mm2s : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    updt_error_reg : in STD_LOGIC;
    updt_error_reg_0 : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\ : in STD_LOGIC;
    ftch_error_reg : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_irqthresh_wren : in STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ : in STD_LOGIC;
    \dmacr_i_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_irqthresh_wren : in STD_LOGIC;
    \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\ : in STD_LOGIC;
    \p_7_out__0\ : in STD_LOGIC;
    s_axis_updt_cmd_tready : in STD_LOGIC;
    p_20_out_0 : in STD_LOGIC;
    \updt_curdesc_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    updt_interr : in STD_LOGIC;
    updt_slverr : in STD_LOGIC;
    updt_decerr : in STD_LOGIC;
    p_11_out : in STD_LOGIC;
    p_10_out_1 : in STD_LOGIC;
    p_9_out : in STD_LOGIC;
    p_6_out : in STD_LOGIC;
    p_5_out_3 : in STD_LOGIC;
    p_4_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_updt_sm : entity is "axi_sg_updt_sm";
end axi_dma_ctrl_axi_sg_updt_sm;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_updt_sm is
  signal \GEN_CH1_UPDATE.ch1_active_i_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_dma_decerr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_update.ch1_dma_decerr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_dma_interr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_update.ch1_dma_interr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_dma_slverr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch1_update.ch1_dma_slverr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_updt_decerr_set_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_updt_idle_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_updt_idle_i_2_n_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_updt_interr_set_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH1_UPDATE.ch1_updt_slverr_set_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_active_i_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_active_i_i_2_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_active_i_i_3_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_dma_decerr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch2_update.ch2_dma_decerr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_dma_interr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch2_update.ch2_dma_interr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_dma_slverr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_ch2_update.ch2_dma_slverr_set_reg_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_updt_decerr_set_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_updt_idle_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_updt_idle_i_2_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_updt_interr_set_i_1_n_0\ : STD_LOGIC;
  signal \GEN_CH2_UPDATE.ch2_updt_slverr_set_i_1_n_0\ : STD_LOGIC;
  signal \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\ : STD_LOGIC;
  signal \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\ : STD_LOGIC;
  signal \^axi_dma_tstvec[4]\ : STD_LOGIC;
  signal \^axi_dma_tstvec[5]\ : STD_LOGIC;
  signal ch1_active_set : STD_LOGIC;
  signal \ftch_error_addr[31]_i_4_n_0\ : STD_LOGIC;
  signal \ftch_error_addr[31]_i_5_n_0\ : STD_LOGIC;
  signal \^p_28_out\ : STD_LOGIC;
  signal \^p_54_out\ : STD_LOGIC;
  signal \^sg_decerr_reg_0\ : STD_LOGIC;
  signal \^sg_decerr_reg_2\ : STD_LOGIC;
  signal \^sg_interr_reg_0\ : STD_LOGIC;
  signal \^sg_interr_reg_2\ : STD_LOGIC;
  signal \^sg_slverr_reg_0\ : STD_LOGIC;
  signal \^sg_slverr_reg_2\ : STD_LOGIC;
  signal \^sig_last_mmap_dbeat_reg_reg\ : STD_LOGIC;
  signal sig_next_calc_error_reg_i_5_n_0 : STD_LOGIC;
  signal updt_cmnd_wr : STD_LOGIC;
  signal updt_cs : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \updt_cs[0]_i_2_n_0\ : STD_LOGIC;
  signal \updt_cs[0]_i_4_n_0\ : STD_LOGIC;
  signal \updt_cs[0]_i_6_n_0\ : STD_LOGIC;
  signal \^updt_error_addr_reg[31]_0\ : STD_LOGIC_VECTOR ( 26 downto 0 );
  signal updt_ns : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_dma_decerr_set_i_1\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_dma_interr_set_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_dma_slverr_set_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_updt_decerr_set_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_updt_idle_i_2\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_updt_interr_set_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \GEN_CH1_UPDATE.ch1_updt_slverr_set_i_1\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_active_i_i_2\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_dma_decerr_set_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_dma_interr_set_i_1\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_dma_slverr_set_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_updt_decerr_set_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_updt_interr_set_i_1\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \GEN_CH2_UPDATE.ch2_updt_slverr_set_i_1\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \dma_decerr_i_1__0\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \ftch_error_addr[31]_i_5\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of sg_decerr_i_1 : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \sg_decerr_i_1__0\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of sg_interr_i_1 : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \sg_interr_i_1__0\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of sg_slverr_i_1 : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \sg_slverr_i_1__0\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \updt_cs[0]_i_4\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \updt_cs[2]_i_1\ : label is "soft_lutpair1";
begin
  \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg_0\ <= \^gen_ch1_update.ch1_dma_decerr_set_reg_0\;
  \GEN_CH1_UPDATE.ch1_dma_interr_set_reg_0\ <= \^gen_ch1_update.ch1_dma_interr_set_reg_0\;
  \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg_0\ <= \^gen_ch1_update.ch1_dma_slverr_set_reg_0\;
  \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg_0\ <= \^gen_ch2_update.ch2_dma_decerr_set_reg_0\;
  \GEN_CH2_UPDATE.ch2_dma_interr_set_reg_0\ <= \^gen_ch2_update.ch2_dma_interr_set_reg_0\;
  \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg_0\ <= \^gen_ch2_update.ch2_dma_slverr_set_reg_0\;
  \GEN_Q_FOR_SYNC.MM2S_CHANNEL.updt_active_d1_reg\ <= \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\;
  \GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\ <= \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\;
  \axi_dma_tstvec[4]\ <= \^axi_dma_tstvec[4]\;
  \axi_dma_tstvec[5]\ <= \^axi_dma_tstvec[5]\;
  p_28_out <= \^p_28_out\;
  p_54_out <= \^p_54_out\;
  sg_decerr_reg_0 <= \^sg_decerr_reg_0\;
  sg_decerr_reg_2 <= \^sg_decerr_reg_2\;
  sg_interr_reg_0 <= \^sg_interr_reg_0\;
  sg_interr_reg_2 <= \^sg_interr_reg_2\;
  sg_slverr_reg_0 <= \^sg_slverr_reg_0\;
  sg_slverr_reg_2 <= \^sg_slverr_reg_2\;
  sig_last_mmap_dbeat_reg_reg <= \^sig_last_mmap_dbeat_reg_reg\;
  \updt_error_addr_reg[31]_0\(26 downto 0) <= \^updt_error_addr_reg[31]_0\(26 downto 0);
\GEN_CH1_UPDATE.ch1_active_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5C5C5C00"
    )
        port map (
      I0 => updt_done,
      I1 => ch1_active_set,
      I2 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I3 => mm2s_scndry_resetn,
      I4 => s2mm_scndry_resetn,
      O => \GEN_CH1_UPDATE.ch1_active_i_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_active_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0800000C0000000C"
    )
        port map (
      I0 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I1 => updt_error_reg_0,
      I2 => updt_cs(2),
      I3 => updt_cs(1),
      I4 => updt_cs(0),
      I5 => updt_done,
      O => ch1_active_set
    );
\GEN_CH1_UPDATE.ch1_active_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_active_i_i_1_n_0\,
      Q => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      R => '0'
    );
\GEN_CH1_UPDATE.ch1_dma_decerr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => p_9_out,
      I1 => updt_done,
      I2 => \^gen_ch1_update.ch1_dma_decerr_set_reg_0\,
      O => \GEN_CH1_UPDATE.ch1_dma_decerr_set_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_dma_decerr_set_i_1_n_0\,
      Q => \^gen_ch1_update.ch1_dma_decerr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH1_UPDATE.ch1_dma_interr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => p_11_out,
      I1 => updt_done,
      I2 => \^gen_ch1_update.ch1_dma_interr_set_reg_0\,
      O => \GEN_CH1_UPDATE.ch1_dma_interr_set_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_dma_interr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_dma_interr_set_i_1_n_0\,
      Q => \^gen_ch1_update.ch1_dma_interr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH1_UPDATE.ch1_dma_slverr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => p_10_out_1,
      I1 => updt_done,
      I2 => \^gen_ch1_update.ch1_dma_slverr_set_reg_0\,
      O => \GEN_CH1_UPDATE.ch1_dma_slverr_set_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_dma_slverr_set_i_1_n_0\,
      Q => \^gen_ch1_update.ch1_dma_slverr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH1_UPDATE.ch1_updt_decerr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => updt_decerr,
      I1 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I2 => \^sg_decerr_reg_0\,
      O => \GEN_CH1_UPDATE.ch1_updt_decerr_set_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_decerr_set_i_1_n_0\,
      Q => \^sg_decerr_reg_0\,
      R => SR(0)
    );
\GEN_CH1_UPDATE.ch1_updt_idle_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFB0FFFF"
    )
        port map (
      I0 => \^p_54_out\,
      I1 => \GEN_CH1_UPDATE.ch1_updt_idle_i_2_n_0\,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\,
      I3 => \p_7_out__0\,
      I4 => m_axi_sg_aresetn,
      I5 => updt_error_reg,
      O => \GEN_CH1_UPDATE.ch1_updt_idle_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_updt_idle_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FCFEFF00"
    )
        port map (
      I0 => updt_error_reg,
      I1 => updt_cs(2),
      I2 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I3 => updt_cs(0),
      I4 => updt_cs(1),
      O => \GEN_CH1_UPDATE.ch1_updt_idle_i_2_n_0\
    );
\GEN_CH1_UPDATE.ch1_updt_idle_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_idle_i_1_n_0\,
      Q => \^p_54_out\,
      R => '0'
    );
\GEN_CH1_UPDATE.ch1_updt_interr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => updt_interr,
      I1 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I2 => \^sg_interr_reg_0\,
      O => \GEN_CH1_UPDATE.ch1_updt_interr_set_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_updt_interr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_interr_set_i_1_n_0\,
      Q => \^sg_interr_reg_0\,
      R => SR(0)
    );
\GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_27_out,
      Q => \^axi_dma_tstvec[4]\,
      R => SR(0)
    );
\GEN_CH1_UPDATE.ch1_updt_slverr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => updt_slverr,
      I1 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I2 => \^sg_slverr_reg_0\,
      O => \GEN_CH1_UPDATE.ch1_updt_slverr_set_i_1_n_0\
    );
\GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_UPDATE.ch1_updt_slverr_set_i_1_n_0\,
      Q => \^sg_slverr_reg_0\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_active_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555FF0C00000000"
    )
        port map (
      I0 => updt_done,
      I1 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\,
      I2 => \GEN_CH2_UPDATE.ch2_active_i_i_2_n_0\,
      I3 => \GEN_CH2_UPDATE.ch2_active_i_i_3_n_0\,
      I4 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I5 => m_axi_sg_aresetn,
      O => \GEN_CH2_UPDATE.ch2_active_i_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_active_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\,
      I1 => updt_error_reg,
      I2 => updt_cs(2),
      I3 => updt_cs(1),
      I4 => updt_cs(0),
      O => \GEN_CH2_UPDATE.ch2_active_i_i_2_n_0\
    );
\GEN_CH2_UPDATE.ch2_active_i_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000080"
    )
        port map (
      I0 => updt_done,
      I1 => updt_cs(0),
      I2 => updt_cs(1),
      I3 => updt_cs(2),
      I4 => ftch_error_reg,
      I5 => updt_error_reg,
      O => \GEN_CH2_UPDATE.ch2_active_i_i_3_n_0\
    );
\GEN_CH2_UPDATE.ch2_active_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_active_i_i_1_n_0\,
      Q => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      R => '0'
    );
\GEN_CH2_UPDATE.ch2_dma_decerr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => p_4_out,
      I1 => updt_done,
      I2 => \^gen_ch2_update.ch2_dma_decerr_set_reg_0\,
      O => \GEN_CH2_UPDATE.ch2_dma_decerr_set_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_dma_decerr_set_i_1_n_0\,
      Q => \^gen_ch2_update.ch2_dma_decerr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_dma_interr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => p_6_out,
      I1 => updt_done,
      I2 => \^gen_ch2_update.ch2_dma_interr_set_reg_0\,
      O => \GEN_CH2_UPDATE.ch2_dma_interr_set_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_dma_interr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_dma_interr_set_i_1_n_0\,
      Q => \^gen_ch2_update.ch2_dma_interr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_dma_slverr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => p_5_out_3,
      I1 => updt_done,
      I2 => \^gen_ch2_update.ch2_dma_slverr_set_reg_0\,
      O => \GEN_CH2_UPDATE.ch2_dma_slverr_set_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_dma_slverr_set_i_1_n_0\,
      Q => \^gen_ch2_update.ch2_dma_slverr_set_reg_0\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_updt_decerr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => updt_decerr,
      I1 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I2 => \^sg_decerr_reg_2\,
      O => \GEN_CH2_UPDATE.ch2_updt_decerr_set_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_decerr_set_i_1_n_0\,
      Q => \^sg_decerr_reg_2\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_updt_idle_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFB0FFFF"
    )
        port map (
      I0 => \^p_28_out\,
      I1 => \GEN_CH2_UPDATE.ch2_updt_idle_i_2_n_0\,
      I2 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\,
      I3 => \p_7_out__0\,
      I4 => m_axi_sg_aresetn,
      I5 => updt_error_reg,
      O => \GEN_CH2_UPDATE.ch2_updt_idle_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_updt_idle_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFAAFFAFF4AAFFAF"
    )
        port map (
      I0 => updt_cs(0),
      I1 => updt_error_reg,
      I2 => updt_cs(2),
      I3 => updt_cs(1),
      I4 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\,
      I5 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      O => \GEN_CH2_UPDATE.ch2_updt_idle_i_2_n_0\
    );
\GEN_CH2_UPDATE.ch2_updt_idle_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_idle_i_1_n_0\,
      Q => \^p_28_out\,
      R => '0'
    );
\GEN_CH2_UPDATE.ch2_updt_interr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => updt_interr,
      I1 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I2 => \^sg_interr_reg_2\,
      O => \GEN_CH2_UPDATE.ch2_updt_interr_set_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_updt_interr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_interr_set_i_1_n_0\,
      Q => \^sg_interr_reg_2\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => p_18_out,
      Q => \^axi_dma_tstvec[5]\,
      R => SR(0)
    );
\GEN_CH2_UPDATE.ch2_updt_slverr_set_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => updt_slverr,
      I1 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I2 => \^sg_slverr_reg_2\,
      O => \GEN_CH2_UPDATE.ch2_updt_slverr_set_i_1_n_0\
    );
\GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_UPDATE.ch2_updt_slverr_set_i_1_n_0\,
      Q => \^sg_slverr_reg_2\,
      R => SR(0)
    );
\GEN_INCLUDE_MM2S.ch1_thresh_count[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEA"
    )
        port map (
      I0 => \^axi_dma_tstvec[4]\,
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\,
      I2 => Q(0),
      I3 => mm2s_irqthresh_wren,
      O => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(0)
    );
\GEN_INCLUDE_S2MM.ch2_thresh_count[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEA"
    )
        port map (
      I0 => \^axi_dma_tstvec[5]\,
      I1 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\,
      I2 => \dmacr_i_reg[13]\(0),
      I3 => s2mm_irqthresh_wren,
      O => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(0)
    );
dma_decerr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^gen_ch1_update.ch1_dma_decerr_set_reg_0\,
      I1 => dma_decerr_reg_1,
      O => dma_decerr_reg
    );
\dma_decerr_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^gen_ch2_update.ch2_dma_decerr_set_reg_0\,
      I1 => dma_decerr_reg_2,
      O => dma_decerr_reg_0
    );
dma_interr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^gen_ch1_update.ch1_dma_interr_set_reg_0\,
      I1 => dma_interr_reg_1,
      O => dma_interr_reg
    );
\dma_interr_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^gen_ch2_update.ch2_dma_interr_set_reg_0\,
      I1 => dma_interr_reg_2,
      O => dma_interr_reg_0
    );
dma_slverr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^gen_ch1_update.ch1_dma_slverr_set_reg_0\,
      I1 => dma_slverr_reg_1,
      O => dma_slverr_reg
    );
\dma_slverr_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^gen_ch2_update.ch2_dma_slverr_set_reg_0\,
      I1 => dma_slverr_reg_2,
      O => dma_slverr_reg_0
    );
\ftch_error_addr[31]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFD"
    )
        port map (
      I0 => \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\,
      I1 => \^sg_decerr_reg_0\,
      I2 => \^sg_slverr_reg_0\,
      I3 => \^sg_interr_reg_2\,
      I4 => \^sg_slverr_reg_2\,
      I5 => \ftch_error_addr[31]_i_4_n_0\,
      O => \ftch_error_addr_reg[31]\(0)
    );
\ftch_error_addr[31]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^gen_ch1_update.ch1_dma_decerr_set_reg_0\,
      I1 => \^sg_interr_reg_0\,
      I2 => \^gen_ch1_update.ch1_dma_interr_set_reg_0\,
      I3 => \^gen_ch1_update.ch1_dma_slverr_set_reg_0\,
      I4 => \ftch_error_addr[31]_i_5_n_0\,
      O => \ftch_error_addr[31]_i_4_n_0\
    );
\ftch_error_addr[31]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^gen_ch2_update.ch2_dma_decerr_set_reg_0\,
      I1 => \^gen_ch2_update.ch2_dma_slverr_set_reg_0\,
      I2 => \^sg_decerr_reg_2\,
      I3 => \^gen_ch2_update.ch2_dma_interr_set_reg_0\,
      O => \ftch_error_addr[31]_i_5_n_0\
    );
s_axis_updt_cmd_tvalid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555575500000300"
    )
        port map (
      I0 => s_axis_updt_cmd_tready,
      I1 => updt_cs(0),
      I2 => updt_cs(2),
      I3 => updt_cs(1),
      I4 => updt_error_reg,
      I5 => p_20_out_0,
      O => s_axis_updt_cmd_tvalid_reg
    );
sg_decerr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^sg_decerr_reg_0\,
      I1 => p_57_out,
      I2 => sg_decerr_reg_3,
      O => sg_decerr_reg
    );
\sg_decerr_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^sg_decerr_reg_2\,
      I1 => p_31_out,
      I2 => sg_decerr_reg_4,
      O => sg_decerr_reg_1
    );
sg_interr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^sg_interr_reg_0\,
      I1 => p_59_out,
      I2 => sg_interr_reg_3,
      O => sg_interr_reg
    );
\sg_interr_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^sg_interr_reg_2\,
      I1 => p_33_out,
      I2 => sg_interr_reg_4,
      O => sg_interr_reg_1
    );
sg_slverr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^sg_slverr_reg_0\,
      I1 => p_58_out,
      I2 => sg_slverr_reg_3,
      O => sg_slverr_reg
    );
\sg_slverr_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^sg_slverr_reg_2\,
      I1 => p_32_out,
      I2 => sg_slverr_reg_4,
      O => sg_slverr_reg_1
    );
\sig_last_mmap_dbeat_reg_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^sig_last_mmap_dbeat_reg_reg\,
      I1 => \sig_dbeat_cntr_reg[7]\,
      O => sig_last_mmap_dbeat
    );
sig_next_calc_error_reg_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => sig_next_calc_error_reg_i_5_n_0,
      I1 => m_axi_sg_wready,
      I2 => sig_dqual_reg_full_reg,
      O => \^sig_last_mmap_dbeat_reg_reg\
    );
sig_next_calc_error_reg_i_5: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF808"
    )
        port map (
      I0 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I1 => follower_full_s2mm,
      I2 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I3 => follower_full_mm2s,
      I4 => sig_data2all_tlast_error,
      O => sig_next_calc_error_reg_i_5_n_0
    );
\update_address_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(4),
      Q => \^updt_error_addr_reg[31]_0\(5),
      R => SR(0)
    );
\update_address_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(5),
      Q => \^updt_error_addr_reg[31]_0\(6),
      R => SR(0)
    );
\update_address_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(6),
      Q => \^updt_error_addr_reg[31]_0\(7),
      R => SR(0)
    );
\update_address_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(7),
      Q => \^updt_error_addr_reg[31]_0\(8),
      R => SR(0)
    );
\update_address_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(8),
      Q => \^updt_error_addr_reg[31]_0\(9),
      R => SR(0)
    );
\update_address_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(9),
      Q => \^updt_error_addr_reg[31]_0\(10),
      R => SR(0)
    );
\update_address_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(10),
      Q => \^updt_error_addr_reg[31]_0\(11),
      R => SR(0)
    );
\update_address_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(11),
      Q => \^updt_error_addr_reg[31]_0\(12),
      R => SR(0)
    );
\update_address_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(12),
      Q => \^updt_error_addr_reg[31]_0\(13),
      R => SR(0)
    );
\update_address_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(13),
      Q => \^updt_error_addr_reg[31]_0\(14),
      R => SR(0)
    );
\update_address_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(14),
      Q => \^updt_error_addr_reg[31]_0\(15),
      R => SR(0)
    );
\update_address_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(15),
      Q => \^updt_error_addr_reg[31]_0\(16),
      R => SR(0)
    );
\update_address_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(16),
      Q => \^updt_error_addr_reg[31]_0\(17),
      R => SR(0)
    );
\update_address_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(17),
      Q => \^updt_error_addr_reg[31]_0\(18),
      R => SR(0)
    );
\update_address_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(18),
      Q => \^updt_error_addr_reg[31]_0\(19),
      R => SR(0)
    );
\update_address_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(19),
      Q => \^updt_error_addr_reg[31]_0\(20),
      R => SR(0)
    );
\update_address_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(20),
      Q => \^updt_error_addr_reg[31]_0\(21),
      R => SR(0)
    );
\update_address_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(21),
      Q => \^updt_error_addr_reg[31]_0\(22),
      R => SR(0)
    );
\update_address_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(22),
      Q => \^updt_error_addr_reg[31]_0\(23),
      R => SR(0)
    );
\update_address_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(23),
      Q => \^updt_error_addr_reg[31]_0\(24),
      R => SR(0)
    );
\update_address_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(24),
      Q => \^updt_error_addr_reg[31]_0\(25),
      R => SR(0)
    );
\update_address_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(25),
      Q => \^updt_error_addr_reg[31]_0\(26),
      R => SR(0)
    );
\update_address_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => '1',
      Q => \^updt_error_addr_reg[31]_0\(0),
      R => SR(0)
    );
\update_address_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(0),
      Q => \^updt_error_addr_reg[31]_0\(1),
      R => SR(0)
    );
\update_address_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(1),
      Q => \^updt_error_addr_reg[31]_0\(2),
      R => SR(0)
    );
\update_address_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(2),
      Q => \^updt_error_addr_reg[31]_0\(3),
      R => SR(0)
    );
\update_address_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => E(0),
      D => \updt_curdesc_reg[31]\(3),
      Q => \^updt_error_addr_reg[31]_0\(4),
      R => SR(0)
    );
\updt_cs[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAABAAAAAAAFAAAA"
    )
        port map (
      I0 => \updt_cs[0]_i_2_n_0\,
      I1 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\,
      I2 => updt_error_reg,
      I3 => updt_cs(2),
      I4 => \updt_cs[0]_i_4_n_0\,
      I5 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\,
      O => updt_ns(0)
    );
\updt_cs[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0010001000104454"
    )
        port map (
      I0 => updt_cs(2),
      I1 => updt_cs(1),
      I2 => updt_cs(0),
      I3 => E(0),
      I4 => updt_error_reg,
      I5 => \updt_cs[0]_i_6_n_0\,
      O => \updt_cs[0]_i_2_n_0\
    );
\updt_cs[0]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => updt_cs(1),
      I1 => updt_cs(0),
      O => \updt_cs[0]_i_4_n_0\
    );
\updt_cs[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0DD000000000000"
    )
        port map (
      I0 => \^gen_q_for_sync.mm2s_channel.updt_active_d1_reg\,
      I1 => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\,
      I2 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\,
      I3 => \^gen_q_for_sync.s2mm_channel.updt_active_d2_reg\,
      I4 => updt_done,
      I5 => updt_cs(0),
      O => \updt_cs[0]_i_6_n_0\
    );
\updt_cs[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000A0003F00A0"
    )
        port map (
      I0 => E(0),
      I1 => updt_done,
      I2 => updt_cs(0),
      I3 => updt_cs(2),
      I4 => updt_cs(1),
      I5 => updt_error_reg,
      O => updt_ns(1)
    );
\updt_cs[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"083A"
    )
        port map (
      I0 => updt_error_reg,
      I1 => updt_cs(1),
      I2 => updt_cs(2),
      I3 => updt_cs(0),
      O => updt_ns(2)
    );
\updt_cs_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_ns(0),
      Q => updt_cs(0),
      R => SR(0)
    );
\updt_cs_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_ns(1),
      Q => updt_cs(1),
      R => SR(0)
    );
\updt_cs_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => updt_ns(2),
      Q => updt_cs(2),
      R => SR(0)
    );
\updt_error_addr[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => updt_error_reg,
      I1 => updt_cs(1),
      I2 => updt_cs(2),
      I3 => updt_cs(0),
      O => updt_cmnd_wr
    );
\updt_error_addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(5),
      Q => \ftch_error_addr_reg[31]_0\(4),
      R => SR(0)
    );
\updt_error_addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(6),
      Q => \ftch_error_addr_reg[31]_0\(5),
      R => SR(0)
    );
\updt_error_addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(7),
      Q => \ftch_error_addr_reg[31]_0\(6),
      R => SR(0)
    );
\updt_error_addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(8),
      Q => \ftch_error_addr_reg[31]_0\(7),
      R => SR(0)
    );
\updt_error_addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(9),
      Q => \ftch_error_addr_reg[31]_0\(8),
      R => SR(0)
    );
\updt_error_addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(10),
      Q => \ftch_error_addr_reg[31]_0\(9),
      R => SR(0)
    );
\updt_error_addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(11),
      Q => \ftch_error_addr_reg[31]_0\(10),
      R => SR(0)
    );
\updt_error_addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(12),
      Q => \ftch_error_addr_reg[31]_0\(11),
      R => SR(0)
    );
\updt_error_addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(13),
      Q => \ftch_error_addr_reg[31]_0\(12),
      R => SR(0)
    );
\updt_error_addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(14),
      Q => \ftch_error_addr_reg[31]_0\(13),
      R => SR(0)
    );
\updt_error_addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(15),
      Q => \ftch_error_addr_reg[31]_0\(14),
      R => SR(0)
    );
\updt_error_addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(16),
      Q => \ftch_error_addr_reg[31]_0\(15),
      R => SR(0)
    );
\updt_error_addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(17),
      Q => \ftch_error_addr_reg[31]_0\(16),
      R => SR(0)
    );
\updt_error_addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(18),
      Q => \ftch_error_addr_reg[31]_0\(17),
      R => SR(0)
    );
\updt_error_addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(19),
      Q => \ftch_error_addr_reg[31]_0\(18),
      R => SR(0)
    );
\updt_error_addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(20),
      Q => \ftch_error_addr_reg[31]_0\(19),
      R => SR(0)
    );
\updt_error_addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(21),
      Q => \ftch_error_addr_reg[31]_0\(20),
      R => SR(0)
    );
\updt_error_addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(22),
      Q => \ftch_error_addr_reg[31]_0\(21),
      R => SR(0)
    );
\updt_error_addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(23),
      Q => \ftch_error_addr_reg[31]_0\(22),
      R => SR(0)
    );
\updt_error_addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(24),
      Q => \ftch_error_addr_reg[31]_0\(23),
      R => SR(0)
    );
\updt_error_addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(25),
      Q => \ftch_error_addr_reg[31]_0\(24),
      R => SR(0)
    );
\updt_error_addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(26),
      Q => \ftch_error_addr_reg[31]_0\(25),
      R => SR(0)
    );
\updt_error_addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(1),
      Q => \ftch_error_addr_reg[31]_0\(0),
      R => SR(0)
    );
\updt_error_addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(2),
      Q => \ftch_error_addr_reg[31]_0\(1),
      R => SR(0)
    );
\updt_error_addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(3),
      Q => \ftch_error_addr_reg[31]_0\(2),
      R => SR(0)
    );
\updt_error_addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => updt_cmnd_wr,
      D => \^updt_error_addr_reg[31]_0\(4),
      Q => \ftch_error_addr_reg[31]_0\(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_wrdata_cntl is
  port (
    sig_next_calc_error_reg : out STD_LOGIC;
    sig_dqual_reg_empty : out STD_LOGIC;
    sig_push_to_wsc : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    FIFO_Full_reg : out STD_LOGIC;
    sig_tlast_err_stop : out STD_LOGIC;
    m_axi_sg_wvalid : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg_0\ : out STD_LOGIC;
    \pntr_cs_reg[1]\ : out STD_LOGIC;
    \pntr_cs_reg[1]_0\ : out STD_LOGIC;
    \pntr_cs_reg[1]_1\ : out STD_LOGIC;
    sig_push_to_wsc_reg_0 : out STD_LOGIC;
    m_axi_sg_wlast : out STD_LOGIC;
    sig_calc2dm_calc_err : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    sig_last_mmap_dbeat : in STD_LOGIC;
    FIFO_Full_reg_0 : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    follower_full_mm2s : in STD_LOGIC;
    p_38_out : in STD_LOGIC;
    follower_full_s2mm : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg\ : in STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg_0\ : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_inhibit_rdy_n_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_wrdata_cntl : entity is "axi_sg_wrdata_cntl";
end axi_dma_ctrl_axi_sg_wrdata_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_wrdata_cntl is
  signal \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1_n_0\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1_n_0\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2__0_n_0\ : STD_LOGIC;
  signal \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\ : STD_LOGIC;
  signal m_axi_sg_wlast_INST_0_i_2_n_0 : STD_LOGIC;
  signal m_axi_sg_wvalid_INST_0_i_2_n_0 : STD_LOGIC;
  signal \^pntr_cs_reg[1]\ : STD_LOGIC;
  signal sig_addr_posted_cntr : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \sig_addr_posted_cntr[0]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr[1]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr[2]_i_1_n_0\ : STD_LOGIC;
  signal sig_data2mstr_cmd_ready : STD_LOGIC;
  signal sig_data2wsc_cmd_cmplt0 : STD_LOGIC;
  signal sig_data2wsc_last_err0 : STD_LOGIC;
  signal sig_dbeat_cntr : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \sig_dbeat_cntr[0]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[1]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[2]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[3]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[4]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[5]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[5]_i_2_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[6]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_1__1_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_2__1_n_0\ : STD_LOGIC;
  signal sig_dqual_reg_full : STD_LOGIC;
  signal sig_last_mmap_dbeat_reg : STD_LOGIC;
  signal sig_ld_new_cmd_reg : STD_LOGIC;
  signal \sig_ld_new_cmd_reg_i_1__1_n_0\ : STD_LOGIC;
  signal \^sig_next_calc_error_reg\ : STD_LOGIC;
  signal \sig_next_calc_error_reg_i_1__0_n_0\ : STD_LOGIC;
  signal sig_next_cmd_cmplt_reg : STD_LOGIC;
  signal sig_push_err2wsc : STD_LOGIC;
  signal \sig_push_err2wsc_i_1__0_n_0\ : STD_LOGIC;
  signal \^sig_push_to_wsc\ : STD_LOGIC;
  signal \sig_push_to_wsc_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_push_to_wsc_i_2__0_n_0\ : STD_LOGIC;
  signal \^sig_push_to_wsc_reg_0\ : STD_LOGIC;
  signal \^sig_tlast_err_stop\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_2__3\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of m_axi_sg_wvalid_INST_0_i_2 : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[0]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[1]_i_1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[2]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \sig_data2wsc_cmd_cmplt_i_1__0\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \sig_data2wsc_last_err_i_1__0\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[1]_i_1__1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[2]_i_1__1\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[3]_i_1__1\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[5]_i_1__1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[6]_i_1__1\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[7]_i_2__1\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \sig_ld_new_cmd_reg_i_1__1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \sig_push_err2wsc_i_1__0\ : label is "soft_lutpair65";
begin
  \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg_0\ <= \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\;
  \pntr_cs_reg[1]\ <= \^pntr_cs_reg[1]\;
  sig_next_calc_error_reg <= \^sig_next_calc_error_reg\;
  sig_push_to_wsc <= \^sig_push_to_wsc\;
  sig_push_to_wsc_reg_0 <= \^sig_push_to_wsc_reg_0\;
  sig_tlast_err_stop <= \^sig_tlast_err_stop\;
\GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF2000"
    )
        port map (
      I0 => sig_inhibit_rdy_n,
      I1 => FIFO_Full_reg_0,
      I2 => \^sig_push_to_wsc\,
      I3 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      I4 => \^sig_tlast_err_stop\,
      O => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1_n_0\,
      Q => \^sig_tlast_err_stop\,
      R => sig_stream_rst
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2__0_n_0\,
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      O => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22222DDDDDDD2DDD"
    )
        port map (
      I0 => sig_next_cmd_cmplt_reg,
      I1 => \^sig_push_to_wsc_reg_0\,
      I2 => Q(0),
      I3 => \GEN_CH2_UPDATE.ch2_active_i_reg\,
      I4 => p_38_out,
      I5 => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\(0),
      O => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1_n_0\,
      Q => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      R => sig_stream_rst
    );
\INFERRED_GEN.cnt_i[2]_i_2__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FBFF"
    )
        port map (
      I0 => \^sig_tlast_err_stop\,
      I1 => \^sig_push_to_wsc\,
      I2 => FIFO_Full_reg_0,
      I3 => sig_inhibit_rdy_n,
      O => FIFO_Full_reg
    );
m_axi_sg_wlast_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sig_dqual_reg_full,
      I1 => \^sig_push_to_wsc_reg_0\,
      O => m_axi_sg_wlast
    );
m_axi_sg_wlast_INST_0_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => sig_dbeat_cntr(7),
      I1 => m_axi_sg_wlast_INST_0_i_2_n_0,
      I2 => sig_dbeat_cntr(6),
      O => \^sig_push_to_wsc_reg_0\
    );
m_axi_sg_wlast_INST_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => sig_dbeat_cntr(5),
      I1 => sig_dbeat_cntr(3),
      I2 => sig_dbeat_cntr(0),
      I3 => sig_dbeat_cntr(1),
      I4 => sig_dbeat_cntr(2),
      I5 => sig_dbeat_cntr(4),
      O => m_axi_sg_wlast_INST_0_i_2_n_0
    );
m_axi_sg_wvalid_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EFEAEAEA"
    )
        port map (
      I0 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      I1 => follower_full_mm2s,
      I2 => p_38_out,
      I3 => follower_full_s2mm,
      I4 => \GEN_CH2_UPDATE.ch2_active_i_reg\,
      I5 => \^pntr_cs_reg[1]\,
      O => m_axi_sg_wvalid
    );
m_axi_sg_wvalid_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDDDDDDDDDDDFFDF"
    )
        port map (
      I0 => sig_dqual_reg_full,
      I1 => \^sig_next_calc_error_reg\,
      I2 => sig_addr_posted_cntr(0),
      I3 => m_axi_sg_wvalid_INST_0_i_2_n_0,
      I4 => sig_addr_posted_cntr(2),
      I5 => sig_addr_posted_cntr(1),
      O => \^pntr_cs_reg[1]\
    );
m_axi_sg_wvalid_INST_0_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg,
      I1 => \out\,
      O => m_axi_sg_wvalid_INST_0_i_2_n_0
    );
\pntr_cs[1]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000800"
    )
        port map (
      I0 => follower_full_mm2s,
      I1 => p_38_out,
      I2 => \^pntr_cs_reg[1]\,
      I3 => m_axi_sg_wready,
      I4 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      O => \pntr_cs_reg[1]_0\
    );
\pntr_cs[1]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000800"
    )
        port map (
      I0 => follower_full_s2mm,
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg\,
      I2 => \^pntr_cs_reg[1]\,
      I3 => m_axi_sg_wready,
      I4 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      O => \pntr_cs_reg[1]_1\
    );
\sig_addr_posted_cntr[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B9996662"
    )
        port map (
      I0 => \out\,
      I1 => sig_last_mmap_dbeat_reg,
      I2 => sig_addr_posted_cntr(1),
      I3 => sig_addr_posted_cntr(2),
      I4 => sig_addr_posted_cntr(0),
      O => \sig_addr_posted_cntr[0]_i_1_n_0\
    );
\sig_addr_posted_cntr[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CCBCC2CC"
    )
        port map (
      I0 => sig_addr_posted_cntr(2),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(0),
      I3 => sig_last_mmap_dbeat_reg,
      I4 => \out\,
      O => \sig_addr_posted_cntr[1]_i_1_n_0\
    );
\sig_addr_posted_cntr[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAEAA8AA"
    )
        port map (
      I0 => sig_addr_posted_cntr(2),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(0),
      I3 => sig_last_mmap_dbeat_reg,
      I4 => \out\,
      O => \sig_addr_posted_cntr[2]_i_1_n_0\
    );
\sig_addr_posted_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[0]_i_1_n_0\,
      Q => sig_addr_posted_cntr(0),
      R => sig_stream_rst
    );
\sig_addr_posted_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[1]_i_1_n_0\,
      Q => sig_addr_posted_cntr(1),
      R => sig_stream_rst
    );
\sig_addr_posted_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[2]_i_1_n_0\,
      Q => sig_addr_posted_cntr(2),
      R => sig_stream_rst
    );
sig_data2wsc_calc_err_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_push_to_wsc_i_2__0_n_0\,
      D => \^sig_next_calc_error_reg\,
      Q => \in\(2),
      R => \sig_push_to_wsc_i_1__0_n_0\
    );
\sig_data2wsc_cmd_cmplt_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFAE"
    )
        port map (
      I0 => sig_next_cmd_cmplt_reg,
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2__0_n_0\,
      I3 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      O => sig_data2wsc_cmd_cmplt0
    );
sig_data2wsc_cmd_cmplt_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_push_to_wsc_i_2__0_n_0\,
      D => sig_data2wsc_cmd_cmplt0,
      Q => \in\(0),
      R => \sig_push_to_wsc_i_1__0_n_0\
    );
\sig_data2wsc_last_err_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^gen_omit_indet_btt.sig_tlast_error_reg_reg_0\,
      I1 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2__0_n_0\,
      I2 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      O => sig_data2wsc_last_err0
    );
sig_data2wsc_last_err_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_push_to_wsc_i_2__0_n_0\,
      D => sig_data2wsc_last_err0,
      Q => \in\(1),
      R => \sig_push_to_wsc_i_1__0_n_0\
    );
\sig_dbeat_cntr[0]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => sig_dbeat_cntr(0),
      I1 => sig_data2mstr_cmd_ready,
      O => \sig_dbeat_cntr[0]_i_1__1_n_0\
    );
\sig_dbeat_cntr[1]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"41"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => sig_dbeat_cntr(1),
      I2 => sig_dbeat_cntr(0),
      O => \sig_dbeat_cntr[1]_i_1__1_n_0\
    );
\sig_dbeat_cntr[2]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5401"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => sig_dbeat_cntr(0),
      I2 => sig_dbeat_cntr(1),
      I3 => sig_dbeat_cntr(2),
      O => \sig_dbeat_cntr[2]_i_1__1_n_0\
    );
\sig_dbeat_cntr[3]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55540001"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => sig_dbeat_cntr(2),
      I2 => sig_dbeat_cntr(1),
      I3 => sig_dbeat_cntr(0),
      I4 => sig_dbeat_cntr(3),
      O => \sig_dbeat_cntr[3]_i_1__1_n_0\
    );
\sig_dbeat_cntr[4]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555400000001"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => sig_dbeat_cntr(3),
      I2 => sig_dbeat_cntr(0),
      I3 => sig_dbeat_cntr(1),
      I4 => sig_dbeat_cntr(2),
      I5 => sig_dbeat_cntr(4),
      O => \sig_dbeat_cntr[4]_i_1__1_n_0\
    );
\sig_dbeat_cntr[5]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"41"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => \sig_dbeat_cntr[5]_i_2_n_0\,
      I2 => sig_dbeat_cntr(5),
      O => \sig_dbeat_cntr[5]_i_1__1_n_0\
    );
\sig_dbeat_cntr[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => sig_dbeat_cntr(4),
      I1 => sig_dbeat_cntr(2),
      I2 => sig_dbeat_cntr(1),
      I3 => sig_dbeat_cntr(0),
      I4 => sig_dbeat_cntr(3),
      O => \sig_dbeat_cntr[5]_i_2_n_0\
    );
\sig_dbeat_cntr[6]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"41"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => m_axi_sg_wlast_INST_0_i_2_n_0,
      I2 => sig_dbeat_cntr(6),
      O => \sig_dbeat_cntr[6]_i_1__1_n_0\
    );
\sig_dbeat_cntr[7]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^sig_push_to_wsc_reg_0\,
      I1 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I2 => sig_data2mstr_cmd_ready,
      O => \sig_dbeat_cntr[7]_i_1__1_n_0\
    );
\sig_dbeat_cntr[7]_i_2__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5401"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => sig_dbeat_cntr(6),
      I2 => m_axi_sg_wlast_INST_0_i_2_n_0,
      I3 => sig_dbeat_cntr(7),
      O => \sig_dbeat_cntr[7]_i_2__1_n_0\
    );
\sig_dbeat_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[0]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(0),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[1]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(1),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[2]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(2),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[3]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(3),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[4]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(4),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[5]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(5),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[6]_i_1__1_n_0\,
      Q => sig_dbeat_cntr(6),
      R => sig_stream_rst
    );
\sig_dbeat_cntr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__1_n_0\,
      D => \sig_dbeat_cntr[7]_i_2__1_n_0\,
      Q => sig_dbeat_cntr(7),
      R => sig_stream_rst
    );
sig_dqual_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_data2mstr_cmd_ready,
      D => '0',
      Q => sig_dqual_reg_empty,
      S => \sig_next_calc_error_reg_i_1__0_n_0\
    );
sig_dqual_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_data2mstr_cmd_ready,
      D => sig_data2mstr_cmd_ready,
      Q => sig_dqual_reg_full,
      R => \sig_next_calc_error_reg_i_1__0_n_0\
    );
sig_last_mmap_dbeat_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_last_mmap_dbeat,
      Q => sig_last_mmap_dbeat_reg,
      R => sig_stream_rst
    );
\sig_ld_new_cmd_reg_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => sig_data2mstr_cmd_ready,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I2 => sig_ld_new_cmd_reg,
      O => \sig_ld_new_cmd_reg_i_1__1_n_0\
    );
sig_ld_new_cmd_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_ld_new_cmd_reg_i_1__1_n_0\,
      Q => sig_ld_new_cmd_reg,
      R => '0'
    );
\sig_next_calc_error_reg_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000200FFFFFFFF"
    )
        port map (
      I0 => sig_dqual_reg_full,
      I1 => \^sig_next_calc_error_reg\,
      I2 => sig_data2mstr_cmd_ready,
      I3 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I4 => \^sig_push_to_wsc_reg_0\,
      I5 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_next_calc_error_reg_i_1__0_n_0\
    );
\sig_next_calc_error_reg_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"007F"
    )
        port map (
      I0 => sig_addr_posted_cntr(0),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(2),
      I3 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      O => sig_data2mstr_cmd_ready
    );
sig_next_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_data2mstr_cmd_ready,
      D => sig_calc2dm_calc_err,
      Q => \^sig_next_calc_error_reg\,
      R => \sig_next_calc_error_reg_i_1__0_n_0\
    );
sig_next_eof_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_data2mstr_cmd_ready,
      D => '1',
      Q => sig_next_cmd_cmplt_reg,
      R => \sig_next_calc_error_reg_i_1__0_n_0\
    );
\sig_push_err2wsc_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => sig_ld_new_cmd_reg,
      I1 => \^sig_next_calc_error_reg\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_push_err2wsc,
      O => \sig_push_err2wsc_i_1__0_n_0\
    );
sig_push_err2wsc_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_push_err2wsc_i_1__0_n_0\,
      Q => sig_push_err2wsc,
      R => '0'
    );
\sig_push_to_wsc_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0045FFFF"
    )
        port map (
      I0 => sig_push_err2wsc,
      I1 => \^sig_push_to_wsc_reg_0\,
      I2 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I3 => sig_inhibit_rdy_n_reg,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_push_to_wsc_i_1__0_n_0\
    );
\sig_push_to_wsc_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F2"
    )
        port map (
      I0 => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      I1 => \^sig_push_to_wsc_reg_0\,
      I2 => sig_push_err2wsc,
      I3 => \^sig_tlast_err_stop\,
      O => \sig_push_to_wsc_i_2__0_n_0\
    );
sig_push_to_wsc_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \sig_push_to_wsc_i_2__0_n_0\,
      D => \sig_push_to_wsc_i_2__0_n_0\,
      Q => \^sig_push_to_wsc\,
      R => \sig_push_to_wsc_i_1__0_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync is
  port (
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    axi_resetn : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => axi_resetn,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_RESET.scndry_resetn_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^scndry_out\,
      O => \GEN_ASYNC_RESET.scndry_resetn_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_2 is
  port (
    scndry_out : out STD_LOGIC;
    axi_resetn : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_2 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_2;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_2 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => axi_resetn,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => scndry_out,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_23 is
  port (
    mm2s_introut : out STD_LOGIC;
    prmry_in : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_23 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_23;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_23 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => mm2s_introut,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_24 is
  port (
    s2mm_introut : out STD_LOGIC;
    prmry_in : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_24 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_24;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_24 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s2mm_introut,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_25 is
  port (
    \GEN_ASYNC_WRITE.ip_addr_cap_reg\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    awvalid_to2 : in STD_LOGIC;
    ip_addr_cap : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_25 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_25;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_25 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_WRITE.ip_addr_cap_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => awvalid_to2,
      I1 => \^scndry_out\,
      I2 => ip_addr_cap,
      O => \GEN_ASYNC_WRITE.ip_addr_cap_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_26 is
  port (
    \GEN_ASYNC_WRITE.bvalid_i_reg\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    s_axi_lite_awready : out STD_LOGIC;
    \GEN_ASYNC_WRITE.rdy_to2_reg\ : in STD_LOGIC;
    s_axi_lite_resetn : in STD_LOGIC;
    s_axi_lite_bvalid : in STD_LOGIC;
    s_axi_lite_bready : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_26 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_26;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_26 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.bvalid_i_i_1\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of s_axi_lite_wready_INST_0 : label is "soft_lutpair118";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_WRITE.bvalid_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0020F020"
    )
        port map (
      I0 => \GEN_ASYNC_WRITE.rdy_to2_reg\,
      I1 => \^scndry_out\,
      I2 => s_axi_lite_resetn,
      I3 => s_axi_lite_bvalid,
      I4 => s_axi_lite_bready,
      O => \GEN_ASYNC_WRITE.bvalid_i_reg\
    );
s_axi_lite_wready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \GEN_ASYNC_WRITE.rdy_to2_reg\,
      I1 => \^scndry_out\,
      O => s_axi_lite_awready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_27 is
  port (
    p_0_out_0 : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    rdy_back : in STD_LOGIC;
    m_axi_sg_hrdresetn : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_27 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_27;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_27 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_WRITE.ip_addr_cap_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => rdy_back,
      I1 => \^scndry_out\,
      I2 => m_axi_sg_hrdresetn,
      O => p_0_out_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_28 is
  port (
    \GEN_ASYNC_WRITE.ip_data_cap_reg\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    wvalid_to2 : in STD_LOGIC;
    ip_data_cap : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_28 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_28;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_28 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_WRITE.ip_data_cap_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => wvalid_to2,
      I1 => \^scndry_out\,
      I2 => ip_data_cap,
      O => \GEN_ASYNC_WRITE.ip_data_cap_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_3 is
  port (
    scndry_out : out STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_3 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_3;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_3 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => scndry_out,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_4 is
  port (
    \GEN_ASYNC_RESET.s_soft_reset_i_reg\ : out STD_LOGIC;
    \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ : in STD_LOGIC;
    \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ : in STD_LOGIC;
    s_soft_reset_i : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_idle_reg\ : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_4 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_4;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_4 is
  signal s_halt_cmplt : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_halt_cmplt,
      R => '0'
    );
\GEN_ASYNC_RESET.s_soft_reset_i_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7070FF7070707070"
    )
        port map (
      I0 => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\,
      I1 => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\,
      I2 => s_soft_reset_i,
      I3 => soft_reset,
      I4 => \GEN_CH2_UPDATE.ch2_updt_idle_reg\,
      I5 => s_halt_cmplt,
      O => \GEN_ASYNC_RESET.s_soft_reset_i_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_5 is
  port (
    \GEN_ASYNC_RESET.halt_i_reg\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    s2mm_halt : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\ : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_5 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_5;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_5 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_RESET.halt_i_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^scndry_out\,
      I1 => s2mm_halt,
      I2 => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\,
      O => \GEN_ASYNC_RESET.halt_i_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_6 is
  port (
    scndry_out : out STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_6 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_6;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_6 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => scndry_out,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_7 is
  port (
    \GEN_ASYNC_RESET.s_soft_reset_i_reg\ : out STD_LOGIC;
    \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ : in STD_LOGIC;
    \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ : in STD_LOGIC;
    s_soft_reset_i : in STD_LOGIC;
    mm2s_all_idle : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_7 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_7;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_7 is
  signal s_halt_cmplt : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_halt_cmplt,
      R => '0'
    );
\GEN_ASYNC_RESET.s_soft_reset_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF70707070707070"
    )
        port map (
      I0 => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\,
      I1 => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\,
      I2 => s_soft_reset_i,
      I3 => mm2s_all_idle,
      I4 => soft_reset,
      I5 => s_halt_cmplt,
      O => \GEN_ASYNC_RESET.s_soft_reset_i_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cdc_sync_8 is
  port (
    \GEN_ASYNC_RESET.halt_i_reg\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    mm2s_halt : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\ : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cdc_sync_8 : entity is "cdc_sync";
end axi_dma_ctrl_cdc_sync_8;

architecture STRUCTURE of axi_dma_ctrl_cdc_sync_8 is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_RESET.halt_i_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^scndry_out\,
      I1 => mm2s_halt,
      I2 => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\,
      O => \GEN_ASYNC_RESET.halt_i_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cdc_sync__parameterized0\ is
  port (
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[1]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[13]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[0]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[12]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[2]\ : out STD_LOGIC;
    \GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]_0\ : out STD_LOGIC;
    rdy : in STD_LOGIC;
    m_axi_sg_hrdresetn : in STD_LOGIC;
    s_axi_lite_awaddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cdc_sync__parameterized0\ : entity is "cdc_sync";
end \axi_dma_ctrl_cdc_sync__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_cdc_sync__parameterized0\ is
  signal \GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.axi2ip_wrce[16]_i_2_n_0\ : STD_LOGIC;
  signal awaddr_d1_cdc_tig : STD_LOGIC_VECTOR ( 6 downto 2 );
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[0]_i_1\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[12]_i_1\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_1\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_2\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[14]_i_1\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[14]_i_2\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[2]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.axi2ip_wrce[4]_i_1\ : label is "soft_lutpair121";
begin
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_awaddr(0),
      Q => awaddr_d1_cdc_tig(2),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_awaddr(1),
      Q => awaddr_d1_cdc_tig(3),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_awaddr(2),
      Q => awaddr_d1_cdc_tig(4),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_awaddr(3),
      Q => awaddr_d1_cdc_tig(5),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_awaddr(4),
      Q => awaddr_d1_cdc_tig(6),
      R => '0'
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(5),
      I1 => awaddr_d1_cdc_tig(3),
      I2 => awaddr_d1_cdc_tig(4),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[0]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(5),
      I1 => awaddr_d1_cdc_tig(4),
      I2 => awaddr_d1_cdc_tig(3),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[12]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(4),
      I1 => awaddr_d1_cdc_tig(5),
      I2 => awaddr_d1_cdc_tig(2),
      I3 => awaddr_d1_cdc_tig(3),
      I4 => \GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_2_n_0\,
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[13]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => m_axi_sg_hrdresetn,
      I1 => rdy,
      I2 => awaddr_d1_cdc_tig(6),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce[13]_i_2_n_0\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFFF"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(2),
      I1 => awaddr_d1_cdc_tig(6),
      I2 => rdy,
      I3 => m_axi_sg_hrdresetn,
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]_0\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[14]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(5),
      I1 => awaddr_d1_cdc_tig(4),
      I2 => awaddr_d1_cdc_tig(3),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000800000"
    )
        port map (
      I0 => rdy,
      I1 => m_axi_sg_hrdresetn,
      I2 => \GEN_ASYNC_WRITE.axi2ip_wrce[16]_i_2_n_0\,
      I3 => awaddr_d1_cdc_tig(2),
      I4 => awaddr_d1_cdc_tig(6),
      I5 => awaddr_d1_cdc_tig(4),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[16]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(3),
      I1 => awaddr_d1_cdc_tig(5),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce[16]_i_2_n_0\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0008000000000000"
    )
        port map (
      I0 => \GEN_ASYNC_WRITE.axi2ip_wrce[16]_i_2_n_0\,
      I1 => awaddr_d1_cdc_tig(2),
      I2 => awaddr_d1_cdc_tig(4),
      I3 => awaddr_d1_cdc_tig(6),
      I4 => rdy,
      I5 => m_axi_sg_hrdresetn,
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[1]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(5),
      I1 => awaddr_d1_cdc_tig(4),
      I2 => awaddr_d1_cdc_tig(3),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[2]\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => awaddr_d1_cdc_tig(5),
      I1 => awaddr_d1_cdc_tig(3),
      I2 => awaddr_d1_cdc_tig(4),
      O => \GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cdc_sync__parameterized1\ is
  port (
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    scndry_vect_out : out STD_LOGIC_VECTOR ( 28 downto 0 );
    \dmacr_i_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    dmacr_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    dmacr_i_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    ioc_irq_reg : out STD_LOGIC;
    dly_irq_reg : out STD_LOGIC;
    ioc_irq_reg_0 : out STD_LOGIC;
    dly_irq_reg_0 : out STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_soft_reset_done : in STD_LOGIC;
    mm2s_soft_reset_done : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    p_46_out : in STD_LOGIC;
    ioc_irq_reg_1 : in STD_LOGIC;
    p_45_out : in STD_LOGIC;
    dly_irq_reg_1 : in STD_LOGIC;
    p_20_out : in STD_LOGIC;
    ioc_irq_reg_2 : in STD_LOGIC;
    p_19_out : in STD_LOGIC;
    dly_irq_reg_2 : in STD_LOGIC;
    s_axi_lite_wdata : in STD_LOGIC_VECTOR ( 29 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cdc_sync__parameterized1\ : entity is "cdc_sync";
end \axi_dma_ctrl_cdc_sync__parameterized1\;

architecture STRUCTURE of \axi_dma_ctrl_cdc_sync__parameterized1\ is
  signal \dmacr_i[23]_i_2_n_0\ : STD_LOGIC;
  signal \dmacr_i[23]_i_3_n_0\ : STD_LOGIC;
  signal p_1_out : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^scndry_vect_out\ : STD_LOGIC_VECTOR ( 28 downto 0 );
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
begin
  scndry_vect_out(28 downto 0) <= \^scndry_vect_out\(28 downto 0);
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(0),
      Q => \^scndry_vect_out\(0),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(8),
      Q => \^scndry_vect_out\(7),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(9),
      Q => \^scndry_vect_out\(8),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(10),
      Q => \^scndry_vect_out\(9),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(11),
      Q => \^scndry_vect_out\(10),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(12),
      Q => \^scndry_vect_out\(11),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(13),
      Q => \^scndry_vect_out\(12),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(14),
      Q => \^scndry_vect_out\(13),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(15),
      Q => \^scndry_vect_out\(14),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(16),
      Q => \^scndry_vect_out\(15),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(17),
      Q => \^scndry_vect_out\(16),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(18),
      Q => \^scndry_vect_out\(17),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(19),
      Q => \^scndry_vect_out\(18),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(20),
      Q => \^scndry_vect_out\(19),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(21),
      Q => \^scndry_vect_out\(20),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(22),
      Q => \^scndry_vect_out\(21),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(23),
      Q => \^scndry_vect_out\(22),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(24),
      Q => \^scndry_vect_out\(23),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(25),
      Q => \^scndry_vect_out\(24),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(26),
      Q => \^scndry_vect_out\(25),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(27),
      Q => \^scndry_vect_out\(26),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(1),
      Q => p_1_out(2),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(28),
      Q => \^scndry_vect_out\(27),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(29),
      Q => \^scndry_vect_out\(28),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(2),
      Q => \^scndry_vect_out\(1),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(3),
      Q => \^scndry_vect_out\(2),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(4),
      Q => \^scndry_vect_out\(3),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(5),
      Q => \^scndry_vect_out\(4),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(6),
      Q => \^scndry_vect_out\(5),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_wdata(7),
      Q => \^scndry_vect_out\(6),
      R => '0'
    );
dly_irq_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7F0"
    )
        port map (
      I0 => \^scndry_vect_out\(10),
      I1 => p_2_out(1),
      I2 => p_45_out,
      I3 => dly_irq_reg_1,
      O => dly_irq_reg
    );
\dly_irq_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7F0"
    )
        port map (
      I0 => \^scndry_vect_out\(10),
      I1 => p_2_out(3),
      I2 => p_19_out,
      I3 => dly_irq_reg_2,
      O => dly_irq_reg_0
    );
\dmacr_i[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"080008000800FFFF"
    )
        port map (
      I0 => \dmacr_i[23]_i_2_n_0\,
      I1 => \dmacr_i[23]_i_3_n_0\,
      I2 => \^scndry_vect_out\(20),
      I3 => p_2_out(0),
      I4 => s2mm_scndry_resetn,
      I5 => mm2s_scndry_resetn,
      O => SR(0)
    );
\dmacr_i[23]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"080008000800FFFF"
    )
        port map (
      I0 => \dmacr_i[23]_i_2_n_0\,
      I1 => \dmacr_i[23]_i_3_n_0\,
      I2 => \^scndry_vect_out\(20),
      I3 => p_2_out(2),
      I4 => s2mm_scndry_resetn,
      I5 => mm2s_scndry_resetn,
      O => \dmacr_i_reg[16]\(0)
    );
\dmacr_i[23]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^scndry_vect_out\(15),
      I1 => \^scndry_vect_out\(14),
      I2 => \^scndry_vect_out\(13),
      O => \dmacr_i[23]_i_2_n_0\
    );
\dmacr_i[23]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^scndry_vect_out\(19),
      I1 => \^scndry_vect_out\(18),
      I2 => \^scndry_vect_out\(17),
      I3 => \^scndry_vect_out\(16),
      O => \dmacr_i[23]_i_3_n_0\
    );
\dmacr_i[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7777777777777000"
    )
        port map (
      I0 => s2mm_soft_reset_done,
      I1 => mm2s_soft_reset_done,
      I2 => p_1_out(2),
      I3 => p_2_out(0),
      I4 => \dmacr_i_reg[2]\,
      I5 => \dmacr_i_reg[2]_0\,
      O => dmacr_i(0)
    );
\dmacr_i[2]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7777777777777000"
    )
        port map (
      I0 => s2mm_soft_reset_done,
      I1 => mm2s_soft_reset_done,
      I2 => p_1_out(2),
      I3 => p_2_out(2),
      I4 => \dmacr_i_reg[2]\,
      I5 => \dmacr_i_reg[2]_0\,
      O => dmacr_i_0(0)
    );
ioc_irq_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7F0"
    )
        port map (
      I0 => \^scndry_vect_out\(9),
      I1 => p_2_out(1),
      I2 => p_46_out,
      I3 => ioc_irq_reg_1,
      O => ioc_irq_reg
    );
\ioc_irq_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7F0"
    )
        port map (
      I0 => \^scndry_vect_out\(9),
      I1 => p_2_out(3),
      I2 => p_20_out,
      I3 => ioc_irq_reg_2,
      O => ioc_irq_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cdc_sync__parameterized2\ is
  port (
    scndry_vect_out : out STD_LOGIC_VECTOR ( 9 downto 0 );
    s_axi_lite_araddr : in STD_LOGIC_VECTOR ( 9 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cdc_sync__parameterized2\ : entity is "cdc_sync";
end \axi_dma_ctrl_cdc_sync__parameterized2\;

architecture STRUCTURE of \axi_dma_ctrl_cdc_sync__parameterized2\ is
  signal s_level_out_bus_d1_cdc_to_0 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_1 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_2 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_3 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_4 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_5 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_6 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_7 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_8 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_9 : STD_LOGIC;
  signal s_level_out_bus_d2_0 : STD_LOGIC;
  signal s_level_out_bus_d2_1 : STD_LOGIC;
  signal s_level_out_bus_d2_2 : STD_LOGIC;
  signal s_level_out_bus_d2_3 : STD_LOGIC;
  signal s_level_out_bus_d2_4 : STD_LOGIC;
  signal s_level_out_bus_d2_5 : STD_LOGIC;
  signal s_level_out_bus_d2_6 : STD_LOGIC;
  signal s_level_out_bus_d2_7 : STD_LOGIC;
  signal s_level_out_bus_d2_8 : STD_LOGIC;
  signal s_level_out_bus_d2_9 : STD_LOGIC;
  signal s_level_out_bus_d3_0 : STD_LOGIC;
  signal s_level_out_bus_d3_1 : STD_LOGIC;
  signal s_level_out_bus_d3_2 : STD_LOGIC;
  signal s_level_out_bus_d3_3 : STD_LOGIC;
  signal s_level_out_bus_d3_4 : STD_LOGIC;
  signal s_level_out_bus_d3_5 : STD_LOGIC;
  signal s_level_out_bus_d3_6 : STD_LOGIC;
  signal s_level_out_bus_d3_7 : STD_LOGIC;
  signal s_level_out_bus_d3_8 : STD_LOGIC;
  signal s_level_out_bus_d3_9 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_0,
      Q => s_level_out_bus_d2_0,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_1,
      Q => s_level_out_bus_d2_1,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_2,
      Q => s_level_out_bus_d2_2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_3,
      Q => s_level_out_bus_d2_3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_4,
      Q => s_level_out_bus_d2_4,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_5,
      Q => s_level_out_bus_d2_5,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_6,
      Q => s_level_out_bus_d2_6,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_7,
      Q => s_level_out_bus_d2_7,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_8,
      Q => s_level_out_bus_d2_8,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_9,
      Q => s_level_out_bus_d2_9,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_0,
      Q => s_level_out_bus_d3_0,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_1,
      Q => s_level_out_bus_d3_1,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_2,
      Q => s_level_out_bus_d3_2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_3,
      Q => s_level_out_bus_d3_3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_4,
      Q => s_level_out_bus_d3_4,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_5,
      Q => s_level_out_bus_d3_5,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_6,
      Q => s_level_out_bus_d3_6,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_7,
      Q => s_level_out_bus_d3_7,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_8,
      Q => s_level_out_bus_d3_8,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d2_9,
      Q => s_level_out_bus_d3_9,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_0,
      Q => scndry_vect_out(0),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_1,
      Q => scndry_vect_out(1),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_2,
      Q => scndry_vect_out(2),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_3,
      Q => scndry_vect_out(3),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_4,
      Q => scndry_vect_out(4),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_5,
      Q => scndry_vect_out(5),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_6,
      Q => scndry_vect_out(6),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_7,
      Q => scndry_vect_out(7),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_8,
      Q => scndry_vect_out(8),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_bus_d3_9,
      Q => scndry_vect_out(9),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(0),
      Q => s_level_out_bus_d1_cdc_to_0,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(1),
      Q => s_level_out_bus_d1_cdc_to_1,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(2),
      Q => s_level_out_bus_d1_cdc_to_2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(3),
      Q => s_level_out_bus_d1_cdc_to_3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(4),
      Q => s_level_out_bus_d1_cdc_to_4,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(5),
      Q => s_level_out_bus_d1_cdc_to_5,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(6),
      Q => s_level_out_bus_d1_cdc_to_6,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(7),
      Q => s_level_out_bus_d1_cdc_to_7,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(8),
      Q => s_level_out_bus_d1_cdc_to_8,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_araddr(9),
      Q => s_level_out_bus_d1_cdc_to_9,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cdc_sync__parameterized3\ is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    scndry_out : out STD_LOGIC;
    ip_arvalid_d3 : in STD_LOGIC;
    s_axi_lite_arready : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cdc_sync__parameterized3\ : entity is "cdc_sync";
end \axi_dma_ctrl_cdc_sync__parameterized3\;

architecture STRUCTURE of \axi_dma_ctrl_cdc_sync__parameterized3\ is
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_axi_lite_arready,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^scndry_out\,
      I1 => ip_arvalid_d3,
      O => E(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cdc_sync__parameterized4\ is
  port (
    scndry_vect_out : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_lite_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cdc_sync__parameterized4\ : entity is "cdc_sync";
end \axi_dma_ctrl_cdc_sync__parameterized4\;

architecture STRUCTURE of \axi_dma_ctrl_cdc_sync__parameterized4\ is
  signal s_level_out_bus_d1_cdc_to_0 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_1 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_10 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_11 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_12 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_13 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_14 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_15 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_16 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_17 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_18 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_19 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_2 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_20 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_21 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_22 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_23 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_24 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_25 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_26 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_27 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_28 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_29 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_3 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_30 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_31 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_4 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_5 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_6 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_7 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_8 : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to_9 : STD_LOGIC;
  signal s_level_out_bus_d2_0 : STD_LOGIC;
  signal s_level_out_bus_d2_1 : STD_LOGIC;
  signal s_level_out_bus_d2_10 : STD_LOGIC;
  signal s_level_out_bus_d2_11 : STD_LOGIC;
  signal s_level_out_bus_d2_12 : STD_LOGIC;
  signal s_level_out_bus_d2_13 : STD_LOGIC;
  signal s_level_out_bus_d2_14 : STD_LOGIC;
  signal s_level_out_bus_d2_15 : STD_LOGIC;
  signal s_level_out_bus_d2_16 : STD_LOGIC;
  signal s_level_out_bus_d2_17 : STD_LOGIC;
  signal s_level_out_bus_d2_18 : STD_LOGIC;
  signal s_level_out_bus_d2_19 : STD_LOGIC;
  signal s_level_out_bus_d2_2 : STD_LOGIC;
  signal s_level_out_bus_d2_20 : STD_LOGIC;
  signal s_level_out_bus_d2_21 : STD_LOGIC;
  signal s_level_out_bus_d2_22 : STD_LOGIC;
  signal s_level_out_bus_d2_23 : STD_LOGIC;
  signal s_level_out_bus_d2_24 : STD_LOGIC;
  signal s_level_out_bus_d2_25 : STD_LOGIC;
  signal s_level_out_bus_d2_26 : STD_LOGIC;
  signal s_level_out_bus_d2_27 : STD_LOGIC;
  signal s_level_out_bus_d2_28 : STD_LOGIC;
  signal s_level_out_bus_d2_29 : STD_LOGIC;
  signal s_level_out_bus_d2_3 : STD_LOGIC;
  signal s_level_out_bus_d2_30 : STD_LOGIC;
  signal s_level_out_bus_d2_31 : STD_LOGIC;
  signal s_level_out_bus_d2_4 : STD_LOGIC;
  signal s_level_out_bus_d2_5 : STD_LOGIC;
  signal s_level_out_bus_d2_6 : STD_LOGIC;
  signal s_level_out_bus_d2_7 : STD_LOGIC;
  signal s_level_out_bus_d2_8 : STD_LOGIC;
  signal s_level_out_bus_d2_9 : STD_LOGIC;
  signal s_level_out_bus_d3_0 : STD_LOGIC;
  signal s_level_out_bus_d3_1 : STD_LOGIC;
  signal s_level_out_bus_d3_10 : STD_LOGIC;
  signal s_level_out_bus_d3_11 : STD_LOGIC;
  signal s_level_out_bus_d3_12 : STD_LOGIC;
  signal s_level_out_bus_d3_13 : STD_LOGIC;
  signal s_level_out_bus_d3_14 : STD_LOGIC;
  signal s_level_out_bus_d3_15 : STD_LOGIC;
  signal s_level_out_bus_d3_16 : STD_LOGIC;
  signal s_level_out_bus_d3_17 : STD_LOGIC;
  signal s_level_out_bus_d3_18 : STD_LOGIC;
  signal s_level_out_bus_d3_19 : STD_LOGIC;
  signal s_level_out_bus_d3_2 : STD_LOGIC;
  signal s_level_out_bus_d3_20 : STD_LOGIC;
  signal s_level_out_bus_d3_21 : STD_LOGIC;
  signal s_level_out_bus_d3_22 : STD_LOGIC;
  signal s_level_out_bus_d3_23 : STD_LOGIC;
  signal s_level_out_bus_d3_24 : STD_LOGIC;
  signal s_level_out_bus_d3_25 : STD_LOGIC;
  signal s_level_out_bus_d3_26 : STD_LOGIC;
  signal s_level_out_bus_d3_27 : STD_LOGIC;
  signal s_level_out_bus_d3_28 : STD_LOGIC;
  signal s_level_out_bus_d3_29 : STD_LOGIC;
  signal s_level_out_bus_d3_3 : STD_LOGIC;
  signal s_level_out_bus_d3_30 : STD_LOGIC;
  signal s_level_out_bus_d3_31 : STD_LOGIC;
  signal s_level_out_bus_d3_4 : STD_LOGIC;
  signal s_level_out_bus_d3_5 : STD_LOGIC;
  signal s_level_out_bus_d3_6 : STD_LOGIC;
  signal s_level_out_bus_d3_7 : STD_LOGIC;
  signal s_level_out_bus_d3_8 : STD_LOGIC;
  signal s_level_out_bus_d3_9 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_0,
      Q => s_level_out_bus_d2_0,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_10,
      Q => s_level_out_bus_d2_10,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_11,
      Q => s_level_out_bus_d2_11,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_12,
      Q => s_level_out_bus_d2_12,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_13,
      Q => s_level_out_bus_d2_13,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_14,
      Q => s_level_out_bus_d2_14,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_15,
      Q => s_level_out_bus_d2_15,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_16,
      Q => s_level_out_bus_d2_16,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_17,
      Q => s_level_out_bus_d2_17,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_18,
      Q => s_level_out_bus_d2_18,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_19,
      Q => s_level_out_bus_d2_19,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_1,
      Q => s_level_out_bus_d2_1,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_20,
      Q => s_level_out_bus_d2_20,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_21,
      Q => s_level_out_bus_d2_21,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_22,
      Q => s_level_out_bus_d2_22,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_23,
      Q => s_level_out_bus_d2_23,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_24,
      Q => s_level_out_bus_d2_24,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_25,
      Q => s_level_out_bus_d2_25,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_26,
      Q => s_level_out_bus_d2_26,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_27,
      Q => s_level_out_bus_d2_27,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_28,
      Q => s_level_out_bus_d2_28,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_29,
      Q => s_level_out_bus_d2_29,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_2,
      Q => s_level_out_bus_d2_2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_30,
      Q => s_level_out_bus_d2_30,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_31,
      Q => s_level_out_bus_d2_31,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_3,
      Q => s_level_out_bus_d2_3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_4,
      Q => s_level_out_bus_d2_4,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_5,
      Q => s_level_out_bus_d2_5,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_6,
      Q => s_level_out_bus_d2_6,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_7,
      Q => s_level_out_bus_d2_7,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_8,
      Q => s_level_out_bus_d2_8,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d2[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to_9,
      Q => s_level_out_bus_d2_9,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_0,
      Q => s_level_out_bus_d3_0,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_10,
      Q => s_level_out_bus_d3_10,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_11,
      Q => s_level_out_bus_d3_11,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_12,
      Q => s_level_out_bus_d3_12,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_13,
      Q => s_level_out_bus_d3_13,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_14,
      Q => s_level_out_bus_d3_14,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_15,
      Q => s_level_out_bus_d3_15,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_16,
      Q => s_level_out_bus_d3_16,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_17,
      Q => s_level_out_bus_d3_17,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_18,
      Q => s_level_out_bus_d3_18,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_19,
      Q => s_level_out_bus_d3_19,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_1,
      Q => s_level_out_bus_d3_1,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_20,
      Q => s_level_out_bus_d3_20,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_21,
      Q => s_level_out_bus_d3_21,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_22,
      Q => s_level_out_bus_d3_22,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_23,
      Q => s_level_out_bus_d3_23,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_24,
      Q => s_level_out_bus_d3_24,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_25,
      Q => s_level_out_bus_d3_25,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_26,
      Q => s_level_out_bus_d3_26,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_27,
      Q => s_level_out_bus_d3_27,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_28,
      Q => s_level_out_bus_d3_28,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_29,
      Q => s_level_out_bus_d3_29,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_2,
      Q => s_level_out_bus_d3_2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_30,
      Q => s_level_out_bus_d3_30,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_31,
      Q => s_level_out_bus_d3_31,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_3,
      Q => s_level_out_bus_d3_3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_4,
      Q => s_level_out_bus_d3_4,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_5,
      Q => s_level_out_bus_d3_5,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_6,
      Q => s_level_out_bus_d3_6,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_7,
      Q => s_level_out_bus_d3_7,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_8,
      Q => s_level_out_bus_d3_8,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d3[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d2_9,
      Q => s_level_out_bus_d3_9,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[0].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_0,
      Q => scndry_vect_out(0),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[10].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_10,
      Q => scndry_vect_out(10),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[11].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_11,
      Q => scndry_vect_out(11),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[12].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_12,
      Q => scndry_vect_out(12),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[13].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_13,
      Q => scndry_vect_out(13),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[14].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_14,
      Q => scndry_vect_out(14),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[15].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_15,
      Q => scndry_vect_out(15),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[16].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_16,
      Q => scndry_vect_out(16),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[17].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_17,
      Q => scndry_vect_out(17),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[18].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_18,
      Q => scndry_vect_out(18),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[19].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_19,
      Q => scndry_vect_out(19),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[1].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_1,
      Q => scndry_vect_out(1),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[20].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_20,
      Q => scndry_vect_out(20),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[21].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_21,
      Q => scndry_vect_out(21),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[22].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_22,
      Q => scndry_vect_out(22),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[23].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_23,
      Q => scndry_vect_out(23),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[24].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_24,
      Q => scndry_vect_out(24),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[25].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_25,
      Q => scndry_vect_out(25),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[26].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_26,
      Q => scndry_vect_out(26),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[27].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_27,
      Q => scndry_vect_out(27),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[28].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_28,
      Q => scndry_vect_out(28),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[29].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_29,
      Q => scndry_vect_out(29),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[2].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_2,
      Q => scndry_vect_out(2),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[30].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_30,
      Q => scndry_vect_out(30),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[31].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_31,
      Q => scndry_vect_out(31),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[3].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_3,
      Q => scndry_vect_out(3),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[4].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_4,
      Q => scndry_vect_out(4),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[5].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_5,
      Q => scndry_vect_out(5),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[6].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_6,
      Q => scndry_vect_out(6),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[7].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_7,
      Q => scndry_vect_out(7),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[8].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_8,
      Q => scndry_vect_out(8),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_CROSS_PLEVEL_IN2SCNDRY_bus_d4[9].CROSS2_PLEVEL_IN2SCNDRY_s_level_out_bus_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_level_out_bus_d3_9,
      Q => scndry_vect_out(9),
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[0].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(0),
      Q => s_level_out_bus_d1_cdc_to_0,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[10].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(10),
      Q => s_level_out_bus_d1_cdc_to_10,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[11].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(11),
      Q => s_level_out_bus_d1_cdc_to_11,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(12),
      Q => s_level_out_bus_d1_cdc_to_12,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(13),
      Q => s_level_out_bus_d1_cdc_to_13,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[14].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(14),
      Q => s_level_out_bus_d1_cdc_to_14,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[15].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(15),
      Q => s_level_out_bus_d1_cdc_to_15,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[16].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(16),
      Q => s_level_out_bus_d1_cdc_to_16,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[17].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(17),
      Q => s_level_out_bus_d1_cdc_to_17,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[18].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(18),
      Q => s_level_out_bus_d1_cdc_to_18,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[19].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(19),
      Q => s_level_out_bus_d1_cdc_to_19,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[1].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(1),
      Q => s_level_out_bus_d1_cdc_to_1,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[20].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(20),
      Q => s_level_out_bus_d1_cdc_to_20,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[21].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(21),
      Q => s_level_out_bus_d1_cdc_to_21,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[22].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(22),
      Q => s_level_out_bus_d1_cdc_to_22,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(23),
      Q => s_level_out_bus_d1_cdc_to_23,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[24].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(24),
      Q => s_level_out_bus_d1_cdc_to_24,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[25].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(25),
      Q => s_level_out_bus_d1_cdc_to_25,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[26].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(26),
      Q => s_level_out_bus_d1_cdc_to_26,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[27].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(27),
      Q => s_level_out_bus_d1_cdc_to_27,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[28].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(28),
      Q => s_level_out_bus_d1_cdc_to_28,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[29].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(29),
      Q => s_level_out_bus_d1_cdc_to_29,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[2].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(2),
      Q => s_level_out_bus_d1_cdc_to_2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[30].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(30),
      Q => s_level_out_bus_d1_cdc_to_30,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[31].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(31),
      Q => s_level_out_bus_d1_cdc_to_31,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[3].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(3),
      Q => s_level_out_bus_d1_cdc_to_3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[4].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(4),
      Q => s_level_out_bus_d1_cdc_to_4,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[5].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(5),
      Q => s_level_out_bus_d1_cdc_to_5,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[6].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(6),
      Q => s_level_out_bus_d1_cdc_to_6,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[7].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(7),
      Q => s_level_out_bus_d1_cdc_to_7,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[8].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(8),
      Q => s_level_out_bus_d1_cdc_to_8,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[9].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => Q(9),
      Q => s_level_out_bus_d1_cdc_to_9,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cntr_incr_decr_addn_f is
  port (
    fifo_full_p1 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg_0 : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cntr_incr_decr_addn_f : entity is "cntr_incr_decr_addn_f";
end axi_dma_ctrl_cntr_incr_decr_addn_f;

architecture STRUCTURE of axi_dma_ctrl_cntr_incr_decr_addn_f is
  signal \^q\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^sig_dqual_reg_empty_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FIFO_Full_i_1__4\ : label is "soft_lutpair166";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_1__4\ : label is "soft_lutpair166";
begin
  Q(2 downto 0) <= \^q\(2 downto 0);
  sig_dqual_reg_empty_reg <= \^sig_dqual_reg_empty_reg\;
\FIFO_Full_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80009200"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^sig_dqual_reg_empty_reg\,
      I2 => FIFO_Full_reg,
      I3 => \^q\(1),
      I4 => \^q\(2),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5595AA6A"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_mstr2data_cmd_valid,
      I2 => sig_inhibit_rdy_n,
      I3 => FIFO_Full_reg_0,
      I4 => \^sig_dqual_reg_empty_reg\,
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAEAFF7F55150080"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_mstr2data_cmd_valid,
      I2 => sig_inhibit_rdy_n,
      I3 => FIFO_Full_reg_0,
      I4 => \^sig_dqual_reg_empty_reg\,
      I5 => \^q\(1),
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[2]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"006A03AA"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => FIFO_Full_reg,
      I3 => \^sig_dqual_reg_empty_reg\,
      I4 => \^q\(0),
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => \^q\(2),
      S => SR(0)
    );
sig_next_calc_error_reg_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02222222"
    )
        port map (
      I0 => sig_dqual_reg_empty,
      I1 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      I2 => sig_addr_posted_cntr(2),
      I3 => sig_addr_posted_cntr(1),
      I4 => sig_addr_posted_cntr(0),
      O => \^sig_dqual_reg_empty_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cntr_incr_decr_addn_f_10 is
  port (
    sig_posted_to_axi_2_reg : out STD_LOGIC;
    fifo_full_p1 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_addr_reg_empty_reg : out STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    sig_halt_reg : in STD_LOGIC;
    sig_addr_reg_empty_reg_0 : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg_0 : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cntr_incr_decr_addn_f_10 : entity is "cntr_incr_decr_addn_f";
end axi_dma_ctrl_cntr_incr_decr_addn_f_10;

architecture STRUCTURE of axi_dma_ctrl_cntr_incr_decr_addn_f_10 is
  signal \INFERRED_GEN.cnt_i[2]_i_2__1_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^sig_addr_reg_empty_reg\ : STD_LOGIC;
  signal sig_rd_empty : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[0]_i_1__3\ : label is "soft_lutpair157";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_2__1\ : label is "soft_lutpair157";
  attribute SOFT_HLUTNM of \sig_next_addr_reg[31]_i_2__0\ : label is "soft_lutpair158";
  attribute SOFT_HLUTNM of \sig_posted_to_axi_2_i_1__2\ : label is "soft_lutpair158";
begin
  Q(1 downto 0) <= \^q\(1 downto 0);
  sig_addr_reg_empty_reg <= \^sig_addr_reg_empty_reg\;
\FIFO_Full_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0020220222020000"
    )
        port map (
      I0 => \^q\(1),
      I1 => sig_rd_empty,
      I2 => sig_addr_reg_empty_reg_0,
      I3 => sig_halt_reg_reg,
      I4 => \^q\(0),
      I5 => FIFO_Full_reg,
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5595AA6A"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_mstr2addr_cmd_valid,
      I2 => sig_inhibit_rdy_n,
      I3 => FIFO_Full_reg_0,
      I4 => \^sig_addr_reg_empty_reg\,
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A9AAAAAA6A666666"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^sig_addr_reg_empty_reg\,
      I2 => FIFO_Full_reg_0,
      I3 => sig_inhibit_rdy_n,
      I4 => sig_mstr2addr_cmd_valid,
      I5 => \^q\(0),
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[2]_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00EFFF00FF00FF10"
    )
        port map (
      I0 => sig_data2all_tlast_error,
      I1 => sig_halt_reg,
      I2 => sig_addr_reg_empty_reg_0,
      I3 => sig_rd_empty,
      I4 => \INFERRED_GEN.cnt_i[2]_i_2__1_n_0\,
      I5 => \^q\(1),
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i[2]_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF404000"
    )
        port map (
      I0 => FIFO_Full_reg_0,
      I1 => sig_inhibit_rdy_n,
      I2 => sig_mstr2addr_cmd_valid,
      I3 => \^q\(0),
      I4 => \^sig_addr_reg_empty_reg\,
      O => \INFERRED_GEN.cnt_i[2]_i_2__1_n_0\
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => sig_rd_empty,
      S => SR(0)
    );
\sig_next_addr_reg[31]_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => sig_rd_empty,
      I1 => sig_addr_reg_empty_reg_0,
      I2 => sig_halt_reg,
      I3 => sig_data2all_tlast_error,
      O => \^sig_addr_reg_empty_reg\
    );
\sig_posted_to_axi_2_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00100000"
    )
        port map (
      I0 => sig_data2all_tlast_error,
      I1 => sig_halt_reg,
      I2 => sig_addr_reg_empty_reg_0,
      I3 => sig_rd_empty,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_posted_to_axi_2_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cntr_incr_decr_addn_f_15 is
  port (
    fifo_full_p1 : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_next_eof_reg_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 6 downto 0 );
    sig_ld_new_cmd_reg_reg : out STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg_0 : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    \sig_good_mmap_dbeat10_out__0\ : in STD_LOGIC;
    sig_dqual_reg_full : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    sig_next_calc_error_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \sig_dbeat_cntr_reg[3]\ : in STD_LOGIC;
    \sig_dbeat_cntr_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_ld_new_cmd_reg : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cntr_incr_decr_addn_f_15 : entity is "cntr_incr_decr_addn_f";
end axi_dma_ctrl_cntr_incr_decr_addn_f_15;

architecture STRUCTURE of axi_dma_ctrl_cntr_incr_decr_addn_f_15 is
  signal \^fifo_full_reg\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^sig_dqual_reg_empty_reg\ : STD_LOGIC;
  signal \sig_next_tag_reg[0]_i_4_n_0\ : STD_LOGIC;
  signal sig_rd_empty : STD_LOGIC;
  signal \sig_rd_fifo__0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FIFO_Full_i_1__0\ : label is "soft_lutpair146";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[1]_i_2\ : label is "soft_lutpair147";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_1__0\ : label is "soft_lutpair146";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[4]_i_1\ : label is "soft_lutpair147";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[5]_i_1\ : label is "soft_lutpair148";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[6]_i_1\ : label is "soft_lutpair145";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[7]_i_2\ : label is "soft_lutpair145";
  attribute SOFT_HLUTNM of sig_ld_new_cmd_reg_i_1 : label is "soft_lutpair148";
begin
  FIFO_Full_reg <= \^fifo_full_reg\;
  Q(1 downto 0) <= \^q\(1 downto 0);
  sig_dqual_reg_empty_reg <= \^sig_dqual_reg_empty_reg\;
\FIFO_Full_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"06010000"
    )
        port map (
      I0 => \^fifo_full_reg\,
      I1 => \^sig_dqual_reg_empty_reg\,
      I2 => sig_rd_empty,
      I3 => \^q\(0),
      I4 => \^q\(1),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"D2D22DD2D2D2D2D2"
    )
        port map (
      I0 => \^sig_dqual_reg_empty_reg\,
      I1 => sig_rd_empty,
      I2 => \^q\(0),
      I3 => sig_inhibit_rdy_n,
      I4 => FIFO_Full_reg_0,
      I5 => sig_mstr2data_cmd_valid,
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9A9AA69A9A9A9A9A"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \sig_rd_fifo__0\,
      I3 => sig_inhibit_rdy_n,
      I4 => FIFO_Full_reg_0,
      I5 => sig_mstr2data_cmd_valid,
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[1]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^sig_dqual_reg_empty_reg\,
      I1 => sig_rd_empty,
      O => \sig_rd_fifo__0\
    );
\INFERRED_GEN.cnt_i[2]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DF04DF20"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^fifo_full_reg\,
      I2 => \^q\(1),
      I3 => sig_rd_empty,
      I4 => \^sig_dqual_reg_empty_reg\,
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i[2]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => sig_mstr2data_cmd_valid,
      I1 => FIFO_Full_reg_0,
      I2 => sig_inhibit_rdy_n,
      O => \^fifo_full_reg\
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => sig_rd_empty,
      S => SR(0)
    );
\sig_dbeat_cntr[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F909"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg[7]\(0),
      I1 => \sig_dbeat_cntr_reg[7]\(1),
      I2 => \^sig_dqual_reg_empty_reg\,
      I3 => \out\(0),
      O => D(0)
    );
\sig_dbeat_cntr[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFA900A9"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg[7]\(2),
      I1 => \sig_dbeat_cntr_reg[7]\(1),
      I2 => \sig_dbeat_cntr_reg[7]\(0),
      I3 => \^sig_dqual_reg_empty_reg\,
      I4 => \out\(1),
      O => D(1)
    );
\sig_dbeat_cntr[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFAAA90000AAA9"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg[7]\(3),
      I1 => \sig_dbeat_cntr_reg[7]\(0),
      I2 => \sig_dbeat_cntr_reg[7]\(1),
      I3 => \sig_dbeat_cntr_reg[7]\(2),
      I4 => \^sig_dqual_reg_empty_reg\,
      I5 => \out\(2),
      O => D(2)
    );
\sig_dbeat_cntr[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F909"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg[7]\(4),
      I1 => \sig_dbeat_cntr_reg[2]\,
      I2 => \^sig_dqual_reg_empty_reg\,
      I3 => \out\(3),
      O => D(3)
    );
\sig_dbeat_cntr[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"41"
    )
        port map (
      I0 => \^sig_dqual_reg_empty_reg\,
      I1 => \sig_dbeat_cntr_reg[3]\,
      I2 => \sig_dbeat_cntr_reg[7]\(5),
      O => D(4)
    );
\sig_dbeat_cntr[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5401"
    )
        port map (
      I0 => \^sig_dqual_reg_empty_reg\,
      I1 => \sig_dbeat_cntr_reg[7]\(5),
      I2 => \sig_dbeat_cntr_reg[3]\,
      I3 => \sig_dbeat_cntr_reg[7]\(6),
      O => D(5)
    );
\sig_dbeat_cntr[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAAAAAAA8"
    )
        port map (
      I0 => \sig_good_mmap_dbeat10_out__0\,
      I1 => \sig_dbeat_cntr_reg[3]\,
      I2 => \sig_dbeat_cntr_reg[7]\(5),
      I3 => \sig_dbeat_cntr_reg[7]\(7),
      I4 => \sig_dbeat_cntr_reg[7]\(6),
      I5 => \^sig_dqual_reg_empty_reg\,
      O => E(0)
    );
\sig_dbeat_cntr[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55540001"
    )
        port map (
      I0 => \^sig_dqual_reg_empty_reg\,
      I1 => \sig_dbeat_cntr_reg[7]\(6),
      I2 => \sig_dbeat_cntr_reg[3]\,
      I3 => \sig_dbeat_cntr_reg[7]\(5),
      I4 => \sig_dbeat_cntr_reg[7]\(7),
      O => D(6)
    );
sig_ld_new_cmd_reg_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_ld_new_cmd_reg,
      I2 => \^sig_dqual_reg_empty_reg\,
      O => sig_ld_new_cmd_reg_reg
    );
\sig_next_tag_reg[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00004000FFFFFFFF"
    )
        port map (
      I0 => \^sig_dqual_reg_empty_reg\,
      I1 => \sig_good_mmap_dbeat10_out__0\,
      I2 => sig_dqual_reg_full,
      I3 => m_axi_mm2s_rlast,
      I4 => sig_next_calc_error_reg,
      I5 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_next_eof_reg_reg(0)
    );
\sig_next_tag_reg[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000B000000000"
    )
        port map (
      I0 => sig_stat2rsc_status_ready,
      I1 => sig_rsc2stat_status_valid,
      I2 => \sig_next_tag_reg[0]_i_4_n_0\,
      I3 => sig_rd_empty,
      I4 => sig_next_calc_error_reg,
      I5 => sig_dqual_reg_empty,
      O => \^sig_dqual_reg_empty_reg\
    );
\sig_next_tag_reg[0]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => sig_addr_posted_cntr(0),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(2),
      O => \sig_next_tag_reg[0]_i_4_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cntr_incr_decr_addn_f_21 is
  port (
    fifo_full_p1 : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_push_addr_reg1_out : out STD_LOGIC;
    sig_posted_to_axi_reg : out STD_LOGIC;
    sig_data2addr_stop_req : in STD_LOGIC;
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg_0 : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cntr_incr_decr_addn_f_21 : entity is "cntr_incr_decr_addn_f";
end axi_dma_ctrl_cntr_incr_decr_addn_f_21;

architecture STRUCTURE of axi_dma_ctrl_cntr_incr_decr_addn_f_21 is
  signal \^fifo_full_reg\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^sig_push_addr_reg1_out\ : STD_LOGIC;
  signal sig_rd_empty : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[0]_i_1\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_2\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \sig_next_addr_reg[31]_i_2\ : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of sig_posted_to_axi_2_i_1 : label is "soft_lutpair137";
begin
  FIFO_Full_reg <= \^fifo_full_reg\;
  Q(1 downto 0) <= \^q\(1 downto 0);
  sig_push_addr_reg1_out <= \^sig_push_addr_reg1_out\;
FIFO_Full_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2122101100000000"
    )
        port map (
      I0 => \^fifo_full_reg\,
      I1 => sig_rd_empty,
      I2 => sig_data2addr_stop_req,
      I3 => sig_addr_reg_empty_reg,
      I4 => \^q\(0),
      I5 => \^q\(1),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"66966666"
    )
        port map (
      I0 => \^sig_push_addr_reg1_out\,
      I1 => \^q\(0),
      I2 => sig_inhibit_rdy_n,
      I3 => FIFO_Full_reg_0,
      I4 => sig_mstr2addr_cmd_valid,
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9A9AA69A9A9A9A9A"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^sig_push_addr_reg1_out\,
      I3 => sig_inhibit_rdy_n,
      I4 => FIFO_Full_reg_0,
      I5 => sig_mstr2addr_cmd_valid,
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DF20DF04DF20DF20"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^fifo_full_reg\,
      I2 => \^q\(1),
      I3 => sig_rd_empty,
      I4 => sig_data2addr_stop_req,
      I5 => sig_addr_reg_empty_reg,
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i[2]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => sig_mstr2addr_cmd_valid,
      I1 => FIFO_Full_reg_0,
      I2 => sig_inhibit_rdy_n,
      O => \^fifo_full_reg\
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => sig_rd_empty,
      S => SR(0)
    );
\sig_next_addr_reg[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => sig_rd_empty,
      I1 => sig_data2addr_stop_req,
      I2 => sig_addr_reg_empty_reg,
      O => \^sig_push_addr_reg1_out\
    );
sig_posted_to_axi_2_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0400"
    )
        port map (
      I0 => sig_data2addr_stop_req,
      I1 => sig_addr_reg_empty_reg,
      I2 => sig_rd_empty,
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_posted_to_axi_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cntr_incr_decr_addn_f_29 is
  port (
    fifo_full_p1 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cntr_incr_decr_addn_f_29 : entity is "cntr_incr_decr_addn_f";
end axi_dma_ctrl_cntr_incr_decr_addn_f_29;

architecture STRUCTURE of axi_dma_ctrl_cntr_incr_decr_addn_f_29 is
  signal \INFERRED_GEN.cnt_i[1]_i_2__1_n_0\ : STD_LOGIC;
  signal \INFERRED_GEN.cnt_i[2]_i_3_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FIFO_Full_i_1__5\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_1__5\ : label is "soft_lutpair69";
begin
  Q(2 downto 0) <= \^q\(2 downto 0);
\FIFO_Full_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10210200"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      I1 => \^q\(2),
      I2 => \INFERRED_GEN.cnt_i[2]_i_3_n_0\,
      I3 => \^q\(0),
      I4 => \^q\(1),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EE1EEEEE11E11111"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      I1 => \^q\(2),
      I2 => sig_inhibit_rdy_n,
      I3 => FIFO_Full_reg,
      I4 => m_axi_sg_bvalid,
      I5 => \^q\(0),
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DFFFFF20200000DF"
    )
        port map (
      I0 => m_axi_sg_bvalid,
      I1 => FIFO_Full_reg,
      I2 => sig_inhibit_rdy_n,
      I3 => \^q\(0),
      I4 => \INFERRED_GEN.cnt_i[1]_i_2__1_n_0\,
      I5 => \^q\(1),
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[1]_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => \^q\(2),
      I1 => \INFERRED_GEN.cnt_i_reg[2]_0\(0),
      I2 => sig_coelsc_reg_empty,
      O => \INFERRED_GEN.cnt_i[1]_i_2__1_n_0\
    );
\INFERRED_GEN.cnt_i[2]_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF017780"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      I3 => \^q\(2),
      I4 => \INFERRED_GEN.cnt_i[2]_i_3_n_0\,
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i[2]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => sig_inhibit_rdy_n,
      I1 => FIFO_Full_reg,
      I2 => m_axi_sg_bvalid,
      O => \INFERRED_GEN.cnt_i[2]_i_3_n_0\
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => sig_stream_rst
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => sig_stream_rst
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => \^q\(2),
      S => sig_stream_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_cntr_incr_decr_addn_f_30 is
  port (
    fifo_full_p1 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_cntr_incr_decr_addn_f_30 : entity is "cntr_incr_decr_addn_f";
end axi_dma_ctrl_cntr_incr_decr_addn_f_30;

architecture STRUCTURE of axi_dma_ctrl_cntr_incr_decr_addn_f_30 is
  signal \^q\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 2 downto 1 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FIFO_Full_i_1__6\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_1__6\ : label is "soft_lutpair67";
begin
  Q(2 downto 0) <= \^q\(2 downto 0);
\FIFO_Full_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"41490020"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      I1 => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \^q\(1),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[1]_i_1__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DB24"
    )
        port map (
      I0 => \^q\(0),
      I1 => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      I2 => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      I3 => \^q\(1),
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[2]_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A600AA30"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      I3 => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      I4 => \^q\(0),
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => D(0),
      Q => \^q\(0),
      S => sig_stream_rst
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => sig_stream_rst
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => \^q\(2),
      S => sig_stream_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0\ is
  port (
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    fifo_full_p1 : out STD_LOGIC;
    sig_wr_fifo : out STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    m_axi_s2mm_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_0\ : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_1\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0\ : entity is "cntr_incr_decr_addn_f";
end \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0\ is
  signal \^q\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^sig_wr_fifo\ : STD_LOGIC;
begin
  Q(3 downto 0) <= \^q\(3 downto 0);
  sig_wr_fifo <= \^sig_wr_fifo\;
\FIFO_Full_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0014004200000000"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^sig_wr_fifo\,
      I3 => \^q\(3),
      I4 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I5 => \^q\(2),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A6AAA6AAA6AA5955"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_inhibit_rdy_n,
      I2 => FIFO_Full_reg,
      I3 => m_axi_s2mm_bvalid,
      I4 => \^q\(3),
      I5 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F7FFAEAA08005155"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_inhibit_rdy_n,
      I2 => FIFO_Full_reg,
      I3 => m_axi_s2mm_bvalid,
      I4 => \INFERRED_GEN.cnt_i_reg[3]_1\,
      I5 => \^q\(1),
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[2]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"56AAAAAAAAAAAAA9"
    )
        port map (
      I0 => \^q\(2),
      I1 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(0),
      I5 => \^sig_wr_fifo\,
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"58F0F0F0F0F0F0F1"
    )
        port map (
      I0 => \^sig_wr_fifo\,
      I1 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I2 => \^q\(3),
      I3 => \^q\(0),
      I4 => \^q\(1),
      I5 => \^q\(2),
      O => addr_i_p1(3)
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => \^q\(2),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(3),
      Q => \^q\(3),
      S => SR(0)
    );
\INFERRED_GEN.data_reg[5][1]_srl6_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => m_axi_s2mm_bvalid,
      I1 => FIFO_Full_reg,
      I2 => sig_inhibit_rdy_n,
      O => \^sig_wr_fifo\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0_9\ is
  port (
    fifo_full_p1 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \INFERRED_GEN.cnt_i_reg[1]_0\ : out STD_LOGIC;
    sig_wr_fifo : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_0\ : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_coelsc_reg_empty : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0_9\ : entity is "cntr_incr_decr_addn_f";
end \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0_9\;

architecture STRUCTURE of \axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0_9\ is
  signal \^q\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[1]_i_1__2\ : label is "soft_lutpair177";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_1__2\ : label is "soft_lutpair177";
begin
  Q(3 downto 0) <= \^q\(3 downto 0);
\FIFO_Full_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0110300C00000000"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => sig_wr_fifo,
      I4 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I5 => \^q\(2),
      O => fifo_full_p1
    );
\INFERRED_GEN.cnt_i[0]_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA9AAA55556555"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_tlast_err_stop,
      I2 => sig_push_to_wsc,
      I3 => sig_inhibit_rdy_n_reg,
      I4 => FIFO_Full_reg,
      I5 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      O => addr_i_p1(0)
    );
\INFERRED_GEN.cnt_i[1]_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7E81"
    )
        port map (
      I0 => \^q\(0),
      I1 => sig_wr_fifo,
      I2 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I3 => \^q\(1),
      O => addr_i_p1(1)
    );
\INFERRED_GEN.cnt_i[1]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => \^q\(3),
      I1 => sig_coelsc_reg_empty,
      I2 => \INFERRED_GEN.cnt_i_reg[3]_1\(0),
      O => \INFERRED_GEN.cnt_i_reg[1]_0\
    );
\INFERRED_GEN.cnt_i[2]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFE8001"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I3 => sig_wr_fifo,
      I4 => \^q\(2),
      O => addr_i_p1(2)
    );
\INFERRED_GEN.cnt_i[3]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4CCCCCCD80000001"
    )
        port map (
      I0 => sig_wr_fifo,
      I1 => \INFERRED_GEN.cnt_i_reg[3]_0\,
      I2 => \^q\(0),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(3),
      O => addr_i_p1(3)
    );
\INFERRED_GEN.cnt_i_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(0),
      Q => \^q\(0),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(1),
      Q => \^q\(1),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(2),
      Q => \^q\(2),
      S => SR(0)
    );
\INFERRED_GEN.cnt_i_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => addr_i_p1(3),
      Q => \^q\(3),
      S => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_dynshreg_f is
  port (
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : out STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    addr : in STD_LOGIC_VECTOR ( 0 to 1 );
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_dynshreg_f : entity is "dynshreg_f";
end axi_dma_ctrl_dynshreg_f;

architecture STRUCTURE of axi_dma_ctrl_dynshreg_f is
  signal \^gen_omit_indet_btt.sig_coelsc_slverr_reg_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_wr_fifo : STD_LOGIC;
  signal sig_wresp_sfifo_out : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_i_1__0\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_i_1__0\ : label is "soft_lutpair70";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[2][0]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[2][0]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][0]_srl3 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[2][1]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] ";
  attribute srl_name of \INFERRED_GEN.data_reg[2][1]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][1]_srl3 ";
begin
  \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0) <= \^gen_omit_indet_btt.sig_coelsc_slverr_reg_reg\(0);
\GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5540"
    )
        port map (
      I0 => \out\(0),
      I1 => \^gen_omit_indet_btt.sig_coelsc_slverr_reg_reg\(0),
      I2 => sig_wresp_sfifo_out(0),
      I3 => D(0),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4544"
    )
        port map (
      I0 => \out\(0),
      I1 => D(1),
      I2 => sig_wresp_sfifo_out(0),
      I3 => \^gen_omit_indet_btt.sig_coelsc_slverr_reg_reg\(0),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\
    );
\INFERRED_GEN.data_reg[2][0]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_sg_aclk,
      D => m_axi_sg_bresp(1),
      Q => \^gen_omit_indet_btt.sig_coelsc_slverr_reg_reg\(0)
    );
\INFERRED_GEN.data_reg[2][1]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_sg_aclk,
      D => m_axi_sg_bresp(0),
      Q => sig_wresp_sfifo_out(0)
    );
\INFERRED_GEN.data_reg[2][1]_srl3_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => m_axi_sg_bvalid,
      I1 => FIFO_Full_reg,
      I2 => sig_inhibit_rdy_n,
      O => sig_wr_fifo
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized0\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    sig_push_coelsc_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    p_4_out : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ : out STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \INFERRED_GEN.cnt_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized0\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized0\ is
  signal \^inferred_gen.cnt_i_reg[0]\ : STD_LOGIC;
  signal \^out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal sig_dcntl_sfifo_out : STD_LOGIC_VECTOR ( 1 to 1 );
  signal sig_wr_fifo : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_2\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[2]_i_2__2\ : label is "soft_lutpair68";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[2][4]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[2][4]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][4]_srl3 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[2][5]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] ";
  attribute srl_name of \INFERRED_GEN.data_reg[2][5]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][5]_srl3 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[2][6]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] ";
  attribute srl_name of \INFERRED_GEN.data_reg[2][6]_srl3\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_AXI_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][6]_srl3 ";
begin
  \INFERRED_GEN.cnt_i_reg[0]\ <= \^inferred_gen.cnt_i_reg[0]\;
  \out\(1 downto 0) <= \^out\(1 downto 0);
\GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FB0000"
    )
        port map (
      I0 => sig_dcntl_sfifo_out(1),
      I1 => \INFERRED_GEN.cnt_i_reg[2]\(0),
      I2 => \^out\(1),
      I3 => Q(2),
      I4 => sig_coelsc_reg_empty,
      O => sig_push_coelsc_reg
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0),
      I1 => sig_dcntl_sfifo_out(1),
      I2 => \^out\(1),
      O => p_4_out
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0),
      I1 => sig_dcntl_sfifo_out(1),
      I2 => \^out\(1),
      I3 => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(2),
      I4 => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(1),
      I5 => \INFERRED_GEN.cnt_i_reg[0]_0\(0),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\(0),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\
    );
\INFERRED_GEN.cnt_i[0]_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA9AAAAA55655555"
    )
        port map (
      I0 => \^inferred_gen.cnt_i_reg[0]\,
      I1 => sig_tlast_err_stop,
      I2 => sig_push_to_wsc,
      I3 => FIFO_Full_reg,
      I4 => sig_inhibit_rdy_n_reg,
      I5 => Q(0),
      O => D(0)
    );
\INFERRED_GEN.cnt_i[2]_i_2__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDDDDFDD"
    )
        port map (
      I0 => sig_coelsc_reg_empty,
      I1 => Q(2),
      I2 => \^out\(1),
      I3 => \INFERRED_GEN.cnt_i_reg[2]\(0),
      I4 => sig_dcntl_sfifo_out(1),
      O => \^inferred_gen.cnt_i_reg[0]\
    );
\INFERRED_GEN.data_reg[2][4]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_sg_aclk,
      D => \in\(2),
      Q => \^out\(1)
    );
\INFERRED_GEN.data_reg[2][5]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_sg_aclk,
      D => \in\(1),
      Q => sig_dcntl_sfifo_out(1)
    );
\INFERRED_GEN.data_reg[2][6]_srl3\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_sg_aclk,
      D => \in\(0),
      Q => \^out\(0)
    );
\INFERRED_GEN.data_reg[2][6]_srl3_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0020"
    )
        port map (
      I0 => sig_inhibit_rdy_n_reg,
      I1 => FIFO_Full_reg,
      I2 => sig_push_to_wsc,
      I3 => sig_tlast_err_stop,
      O => sig_wr_fifo
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized1\ is
  port (
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    sig_calc_error_reg_reg : out STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized1\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized1\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized1\ is
  signal \^out\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \^sig_calc_error_reg_reg\ : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][11]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][13]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][13]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][13]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][18]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][18]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][18]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][19]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][19]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][19]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][20]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][21]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][21]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][21]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][22]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][22]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][22]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][23]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][23]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][23]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][24]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][24]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][24]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][25]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][25]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][25]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][26]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][26]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][26]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][27]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][27]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][27]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][28]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][28]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][28]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][29]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][29]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][29]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][30]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][30]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][30]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][31]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][31]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][31]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][32]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][32]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][32]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][33]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][33]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][33]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][34]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][34]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][34]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][35]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][35]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][35]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][36]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][36]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][36]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][37]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][37]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][37]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][38]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][38]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][38]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][39]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][39]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][39]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][40]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][40]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][40]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][41]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][41]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][41]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][42]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][42]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][42]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][43]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][43]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][43]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][44]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][44]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][44]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][45]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][45]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][45]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][46]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][46]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][46]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][47]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][47]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][47]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][48]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][48]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][48]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][49]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][49]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][49]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][50]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][50]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][50]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][51]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][51]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][51]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][52]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][52]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][52]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][53]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][53]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][53]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][54]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][54]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][54]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][8]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][8]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][8]_srl4 ";
begin
  \out\(39 downto 0) <= \^out\(39 downto 0);
  sig_calc_error_reg_reg <= \^sig_calc_error_reg_reg\;
\INFERRED_GEN.data_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(37),
      Q => \^out\(38)
    );
\INFERRED_GEN.data_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \^out\(37)
    );
\INFERRED_GEN.data_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(36),
      Q => \^out\(36)
    );
\INFERRED_GEN.data_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(35),
      Q => \^out\(35)
    );
\INFERRED_GEN.data_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(34),
      Q => \^out\(34)
    );
\INFERRED_GEN.data_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(33),
      Q => \^out\(33)
    );
\INFERRED_GEN.data_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(32),
      Q => \^out\(32)
    );
\INFERRED_GEN.data_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(31),
      Q => \^out\(31)
    );
\INFERRED_GEN.data_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(30),
      Q => \^out\(30)
    );
\INFERRED_GEN.data_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(29),
      Q => \^out\(29)
    );
\INFERRED_GEN.data_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(28),
      Q => \^out\(28)
    );
\INFERRED_GEN.data_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(27),
      Q => \^out\(27)
    );
\INFERRED_GEN.data_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(26),
      Q => \^out\(26)
    );
\INFERRED_GEN.data_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(25),
      Q => \^out\(25)
    );
\INFERRED_GEN.data_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(24),
      Q => \^out\(24)
    );
\INFERRED_GEN.data_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(23),
      Q => \^out\(23)
    );
\INFERRED_GEN.data_reg[3][32]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(22),
      Q => \^out\(22)
    );
\INFERRED_GEN.data_reg[3][33]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(21),
      Q => \^out\(21)
    );
\INFERRED_GEN.data_reg[3][34]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(20),
      Q => \^out\(20)
    );
\INFERRED_GEN.data_reg[3][35]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(19),
      Q => \^out\(19)
    );
\INFERRED_GEN.data_reg[3][36]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(18),
      Q => \^out\(18)
    );
\INFERRED_GEN.data_reg[3][37]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(17),
      Q => \^out\(17)
    );
\INFERRED_GEN.data_reg[3][38]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(16),
      Q => \^out\(16)
    );
\INFERRED_GEN.data_reg[3][39]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(15),
      Q => \^out\(15)
    );
\INFERRED_GEN.data_reg[3][40]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(14),
      Q => \^out\(14)
    );
\INFERRED_GEN.data_reg[3][41]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(13),
      Q => \^out\(13)
    );
\INFERRED_GEN.data_reg[3][42]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(12),
      Q => \^out\(12)
    );
\INFERRED_GEN.data_reg[3][43]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(11),
      Q => \^out\(11)
    );
\INFERRED_GEN.data_reg[3][44]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(10),
      Q => \^out\(10)
    );
\INFERRED_GEN.data_reg[3][45]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(9),
      Q => \^out\(9)
    );
\INFERRED_GEN.data_reg[3][46]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(8),
      Q => \^out\(8)
    );
\INFERRED_GEN.data_reg[3][47]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(7),
      Q => \^out\(7)
    );
\INFERRED_GEN.data_reg[3][48]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(6),
      Q => \^out\(6)
    );
\INFERRED_GEN.data_reg[3][49]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(5),
      Q => \^out\(5)
    );
\INFERRED_GEN.data_reg[3][50]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(4),
      Q => \^out\(4)
    );
\INFERRED_GEN.data_reg[3][51]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(3),
      Q => \^out\(3)
    );
\INFERRED_GEN.data_reg[3][52]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(2),
      Q => \^out\(2)
    );
\INFERRED_GEN.data_reg[3][53]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(1),
      Q => \^out\(1)
    );
\INFERRED_GEN.data_reg[3][54]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(0),
      Q => \^out\(0)
    );
\INFERRED_GEN.data_reg[3][54]_srl4_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => FIFO_Full_reg,
      I1 => sig_inhibit_rdy_n,
      I2 => sig_mstr2addr_cmd_valid,
      O => \^sig_calc_error_reg_reg\
    );
\INFERRED_GEN.data_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(38),
      Q => \^out\(39)
    );
\sig_addr_valid_reg_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\(39),
      O => sig_addr_valid_reg_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized1_22\ is
  port (
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized1_22\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized1_22\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized1_22\ is
  signal \^out\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal sig_wr_fifo : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][11]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][13]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][13]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][13]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][18]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][18]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][18]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][19]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][19]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][19]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][20]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][21]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][21]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][21]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][22]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][22]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][22]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][23]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][23]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][23]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][24]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][24]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][24]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][25]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][25]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][25]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][26]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][26]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][26]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][27]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][27]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][27]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][28]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][28]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][28]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][29]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][29]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][29]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][30]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][30]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][30]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][31]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][31]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][31]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][32]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][32]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][32]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][33]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][33]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][33]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][34]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][34]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][34]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][35]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][35]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][35]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][36]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][36]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][36]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][37]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][37]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][37]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][38]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][38]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][38]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][39]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][39]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][39]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][40]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][40]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][40]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][41]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][41]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][41]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][42]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][42]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][42]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][43]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][43]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][43]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][44]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][44]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][44]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][45]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][45]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][45]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][46]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][46]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][46]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][47]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][47]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][47]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][48]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][48]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][48]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][49]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][49]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][49]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][50]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][50]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][50]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][51]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][51]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][51]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][52]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][52]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][52]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][53]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][53]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][53]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][54]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][54]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][54]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][8]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][8]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][8]_srl4 ";
begin
  \out\(39 downto 0) <= \^out\(39 downto 0);
\INFERRED_GEN.data_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(37),
      Q => \^out\(38)
    );
\INFERRED_GEN.data_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(37)
    );
\INFERRED_GEN.data_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(36),
      Q => \^out\(36)
    );
\INFERRED_GEN.data_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(35),
      Q => \^out\(35)
    );
\INFERRED_GEN.data_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(34),
      Q => \^out\(34)
    );
\INFERRED_GEN.data_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(33),
      Q => \^out\(33)
    );
\INFERRED_GEN.data_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(32),
      Q => \^out\(32)
    );
\INFERRED_GEN.data_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(31),
      Q => \^out\(31)
    );
\INFERRED_GEN.data_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(30),
      Q => \^out\(30)
    );
\INFERRED_GEN.data_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(29),
      Q => \^out\(29)
    );
\INFERRED_GEN.data_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(28),
      Q => \^out\(28)
    );
\INFERRED_GEN.data_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(27),
      Q => \^out\(27)
    );
\INFERRED_GEN.data_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(26),
      Q => \^out\(26)
    );
\INFERRED_GEN.data_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(25),
      Q => \^out\(25)
    );
\INFERRED_GEN.data_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(24),
      Q => \^out\(24)
    );
\INFERRED_GEN.data_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(23),
      Q => \^out\(23)
    );
\INFERRED_GEN.data_reg[3][32]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(22),
      Q => \^out\(22)
    );
\INFERRED_GEN.data_reg[3][33]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(21),
      Q => \^out\(21)
    );
\INFERRED_GEN.data_reg[3][34]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(20),
      Q => \^out\(20)
    );
\INFERRED_GEN.data_reg[3][35]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(19),
      Q => \^out\(19)
    );
\INFERRED_GEN.data_reg[3][36]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(18),
      Q => \^out\(18)
    );
\INFERRED_GEN.data_reg[3][37]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(17),
      Q => \^out\(17)
    );
\INFERRED_GEN.data_reg[3][38]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(16),
      Q => \^out\(16)
    );
\INFERRED_GEN.data_reg[3][39]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(15),
      Q => \^out\(15)
    );
\INFERRED_GEN.data_reg[3][40]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(14),
      Q => \^out\(14)
    );
\INFERRED_GEN.data_reg[3][41]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(13),
      Q => \^out\(13)
    );
\INFERRED_GEN.data_reg[3][42]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(12),
      Q => \^out\(12)
    );
\INFERRED_GEN.data_reg[3][43]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(11),
      Q => \^out\(11)
    );
\INFERRED_GEN.data_reg[3][44]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(10),
      Q => \^out\(10)
    );
\INFERRED_GEN.data_reg[3][45]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(9),
      Q => \^out\(9)
    );
\INFERRED_GEN.data_reg[3][46]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(8),
      Q => \^out\(8)
    );
\INFERRED_GEN.data_reg[3][47]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(7),
      Q => \^out\(7)
    );
\INFERRED_GEN.data_reg[3][48]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(6),
      Q => \^out\(6)
    );
\INFERRED_GEN.data_reg[3][49]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(5),
      Q => \^out\(5)
    );
\INFERRED_GEN.data_reg[3][50]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(4),
      Q => \^out\(4)
    );
\INFERRED_GEN.data_reg[3][51]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(3),
      Q => \^out\(3)
    );
\INFERRED_GEN.data_reg[3][52]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(2),
      Q => \^out\(2)
    );
\INFERRED_GEN.data_reg[3][53]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(1),
      Q => \^out\(1)
    );
\INFERRED_GEN.data_reg[3][54]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(0),
      Q => \^out\(0)
    );
\INFERRED_GEN.data_reg[3][54]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => sig_inhibit_rdy_n,
      I1 => FIFO_Full_reg,
      I2 => sig_mstr2addr_cmd_valid,
      O => sig_wr_fifo
    );
\INFERRED_GEN.data_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(38),
      Q => \^out\(39)
    );
sig_addr_valid_reg_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\(39),
      O => sig_addr_valid_reg_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized2\ is
  port (
    sig_first_dbeat_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    sig_last_dbeat_reg : out STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    \sig_good_mmap_dbeat10_out__0\ : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    \sig_dbeat_cntr_eq_1__3\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \INFERRED_GEN.cnt_i_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized2\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized2\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized2\ is
  signal \^out\ : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal sig_cmd_fifo_data_out : STD_LOGIC_VECTOR ( 6 to 6 );
  signal sig_first_dbeat_i_2_n_0 : STD_LOGIC;
  signal sig_last_dbeat3_out : STD_LOGIC;
  signal sig_last_dbeat_i_4_n_0 : STD_LOGIC;
  signal sig_wr_fifo : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][10]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[3][10]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][10]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][11]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][12]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][12]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][12]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][13]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][13]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][13]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][14]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][14]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][14]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][15]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][15]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][15]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][16]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][16]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][16]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][20]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][21]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][21]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][21]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][22]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][22]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][22]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][23]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][23]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][23]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][24]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][24]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][24]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][30]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][30]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][30]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][4]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][4]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][4]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][5]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][5]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][5]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][7]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][7]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][7]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][9]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][9]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][9]_srl4 ";
begin
  \out\(15 downto 0) <= \^out\(15 downto 0);
\INFERRED_GEN.data_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(7),
      Q => \^out\(11)
    );
\INFERRED_GEN.data_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(6),
      Q => \^out\(10)
    );
\INFERRED_GEN.data_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(9)
    );
\INFERRED_GEN.data_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(8)
    );
\INFERRED_GEN.data_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(7)
    );
\INFERRED_GEN.data_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(6)
    );
\INFERRED_GEN.data_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(5)
    );
\INFERRED_GEN.data_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(5),
      Q => \^out\(4)
    );
\INFERRED_GEN.data_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(4),
      Q => \^out\(3)
    );
\INFERRED_GEN.data_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(3),
      Q => \^out\(2)
    );
\INFERRED_GEN.data_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(2),
      Q => \^out\(1)
    );
\INFERRED_GEN.data_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(1),
      Q => sig_cmd_fifo_data_out(6)
    );
\INFERRED_GEN.data_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(0),
      Q => \^out\(0)
    );
\INFERRED_GEN.data_reg[3][30]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => sig_inhibit_rdy_n,
      I1 => FIFO_Full_reg,
      I2 => sig_mstr2data_cmd_valid,
      O => sig_wr_fifo
    );
\INFERRED_GEN.data_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(10),
      Q => \^out\(15)
    );
\INFERRED_GEN.data_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => '1',
      Q => \^out\(14)
    );
\INFERRED_GEN.data_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(9),
      Q => \^out\(13)
    );
\INFERRED_GEN.data_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[1]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[1]\(1),
      A2 => '0',
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_mm2s_aclk,
      D => \in\(8),
      Q => \^out\(12)
    );
\sig_dbeat_cntr[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8B"
    )
        port map (
      I0 => sig_cmd_fifo_data_out(6),
      I1 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      I2 => Q(0),
      O => D(0)
    );
sig_first_dbeat_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888800A08888A0A0"
    )
        port map (
      I0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I1 => sig_first_dbeat_i_2_n_0,
      I2 => sig_first_dbeat_reg_0,
      I3 => \sig_dbeat_cntr_reg[4]\,
      I4 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      I5 => \sig_good_mmap_dbeat10_out__0\,
      O => sig_first_dbeat_reg
    );
sig_first_dbeat_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^out\(2),
      I1 => \^out\(3),
      I2 => sig_cmd_fifo_data_out(6),
      I3 => \^out\(1),
      I4 => \^out\(4),
      O => sig_first_dbeat_i_2_n_0
    );
sig_last_dbeat_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAEAEAEAAA2A2A2"
    )
        port map (
      I0 => sig_last_dbeat3_out,
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I2 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      I3 => \sig_good_mmap_dbeat10_out__0\,
      I4 => \sig_dbeat_cntr_reg[4]\,
      I5 => sig_last_dbeat_reg_0,
      O => sig_last_dbeat_reg
    );
sig_last_dbeat_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8888888"
    )
        port map (
      I0 => sig_last_dbeat_i_4_n_0,
      I1 => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      I2 => \sig_good_mmap_dbeat10_out__0\,
      I3 => \sig_dbeat_cntr_eq_1__3\,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_last_dbeat3_out
    );
sig_last_dbeat_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000100"
    )
        port map (
      I0 => \^out\(4),
      I1 => \^out\(2),
      I2 => \^out\(3),
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I4 => sig_cmd_fifo_data_out(6),
      I5 => \^out\(1),
      O => sig_last_dbeat_i_4_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized3\ is
  port (
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC;
    sig_data2wsc_calc_err_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_wr_fifo : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    addr : in STD_LOGIC_VECTOR ( 0 to 2 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized3\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized3\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized3\ is
  signal sig_wresp_sfifo_out : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_i_1\ : label is "soft_lutpair179";
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_i_1\ : label is "soft_lutpair179";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[5][0]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[5][0]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5][0]_srl6 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[5][1]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5] ";
  attribute srl_name of \INFERRED_GEN.data_reg[5][1]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/I_WRESP_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5][1]_srl6 ";
begin
\GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5444"
    )
        port map (
      I0 => sig_data2wsc_calc_err_reg(0),
      I1 => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(0),
      I2 => sig_wresp_sfifo_out(1),
      I3 => sig_wresp_sfifo_out(0),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4544"
    )
        port map (
      I0 => sig_data2wsc_calc_err_reg(0),
      I1 => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1),
      I2 => sig_wresp_sfifo_out(0),
      I3 => sig_wresp_sfifo_out(1),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\
    );
\INFERRED_GEN.data_reg[5][0]_srl6\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(2),
      A1 => addr(1),
      A2 => addr(0),
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_s2mm_aclk,
      D => m_axi_s2mm_bresp(1),
      Q => sig_wresp_sfifo_out(1)
    );
\INFERRED_GEN.data_reg[5][1]_srl6\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(2),
      A1 => addr(1),
      A2 => addr(0),
      A3 => '0',
      CE => sig_wr_fifo,
      CLK => m_axi_s2mm_aclk,
      D => m_axi_s2mm_bresp(0),
      Q => sig_wresp_sfifo_out(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized4\ is
  port (
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_wr_fifo : out STD_LOGIC;
    \sig_wdc_statcnt_reg[2]\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_push_coelsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    FIFO_Full_reg : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized4\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized4\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized4\ is
  signal \^out\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal sig_dcntl_sfifo_out : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^sig_wdc_statcnt_reg[2]\ : STD_LOGIC;
  signal \^sig_wr_fifo\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_2\ : label is "soft_lutpair178";
  attribute SOFT_HLUTNM of \INFERRED_GEN.cnt_i[3]_i_2\ : label is "soft_lutpair178";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[5][2]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[5][2]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5][2]_srl6 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[5][4]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5] ";
  attribute srl_name of \INFERRED_GEN.data_reg[5][4]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5][4]_srl6 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[5][5]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5] ";
  attribute srl_name of \INFERRED_GEN.data_reg[5][5]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5][5]_srl6 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[5][6]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5] ";
  attribute srl_name of \INFERRED_GEN.data_reg[5][6]_srl6\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_STATUS_CNTLR/GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[5][6]_srl6 ";
begin
  \out\(2 downto 0) <= \^out\(2 downto 0);
  \sig_wdc_statcnt_reg[2]\ <= \^sig_wdc_statcnt_reg[2]\;
  sig_wr_fifo <= \^sig_wr_fifo\;
\GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0),
      I1 => sig_dcntl_sfifo_out(1),
      I2 => \^out\(1),
      O => p_4_out
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\(0),
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44444044"
    )
        port map (
      I0 => \INFERRED_GEN.cnt_i_reg[3]\(3),
      I1 => sig_coelsc_reg_empty,
      I2 => \^out\(1),
      I3 => \INFERRED_GEN.cnt_i_reg[3]_0\(0),
      I4 => sig_dcntl_sfifo_out(1),
      O => sig_push_coelsc_reg
    );
\INFERRED_GEN.cnt_i[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF04FF"
    )
        port map (
      I0 => sig_dcntl_sfifo_out(1),
      I1 => \INFERRED_GEN.cnt_i_reg[3]_0\(0),
      I2 => \^out\(1),
      I3 => sig_coelsc_reg_empty,
      I4 => \INFERRED_GEN.cnt_i_reg[3]\(3),
      O => \^sig_wdc_statcnt_reg[2]\
    );
\INFERRED_GEN.data_reg[5][2]_srl6\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[3]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[3]\(1),
      A2 => \INFERRED_GEN.cnt_i_reg[3]\(2),
      A3 => '0',
      CE => \^sig_wr_fifo\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(3),
      Q => \^out\(2)
    );
\INFERRED_GEN.data_reg[5][4]_srl6\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[3]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[3]\(1),
      A2 => \INFERRED_GEN.cnt_i_reg[3]\(2),
      A3 => '0',
      CE => \^sig_wr_fifo\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(2),
      Q => \^out\(1)
    );
\INFERRED_GEN.data_reg[5][5]_srl6\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[3]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[3]\(1),
      A2 => \INFERRED_GEN.cnt_i_reg[3]\(2),
      A3 => '0',
      CE => \^sig_wr_fifo\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(1),
      Q => sig_dcntl_sfifo_out(1)
    );
\INFERRED_GEN.data_reg[5][6]_srl6\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \INFERRED_GEN.cnt_i_reg[3]\(0),
      A1 => \INFERRED_GEN.cnt_i_reg[3]\(1),
      A2 => \INFERRED_GEN.cnt_i_reg[3]\(2),
      A3 => '0',
      CE => \^sig_wr_fifo\,
      CLK => m_axi_s2mm_aclk,
      D => \in\(0),
      Q => \^out\(0)
    );
\INFERRED_GEN.data_reg[5][6]_srl6_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0040"
    )
        port map (
      I0 => FIFO_Full_reg,
      I1 => sig_inhibit_rdy_n_reg,
      I2 => sig_push_to_wsc,
      I3 => sig_tlast_err_stop,
      O => \^sig_wr_fifo\
    );
\sig_wdc_statcnt[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5A5AA525F0F00F0F"
    )
        port map (
      I0 => \^sig_wdc_statcnt_reg[2]\,
      I1 => Q(2),
      I2 => Q(1),
      I3 => Q(3),
      I4 => Q(0),
      I5 => \^sig_wr_fifo\,
      O => D(0)
    );
\sig_wdc_statcnt[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F80EC13"
    )
        port map (
      I0 => \^sig_wr_fifo\,
      I1 => Q(0),
      I2 => \^sig_wdc_statcnt_reg[2]\,
      I3 => Q(2),
      I4 => Q(1),
      O => D(1)
    );
\sig_wdc_statcnt[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAA2A55555554"
    )
        port map (
      I0 => \^sig_wr_fifo\,
      I1 => Q(1),
      I2 => Q(2),
      I3 => Q(0),
      I4 => Q(3),
      I5 => \^sig_wdc_statcnt_reg[2]\,
      O => E(0)
    );
\sig_wdc_statcnt[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F80FE01FF00FA05"
    )
        port map (
      I0 => Q(1),
      I1 => \^sig_wdc_statcnt_reg[2]\,
      I2 => Q(2),
      I3 => Q(3),
      I4 => Q(0),
      I5 => \^sig_wr_fifo\,
      O => D(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_dynshreg_f__parameterized5\ is
  port (
    sig_last_dbeat_reg : out STD_LOGIC;
    sig_first_dbeat_reg : out STD_LOGIC;
    sig_next_calc_error_reg_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_s_ready_out_reg : in STD_LOGIC;
    sig_dqual_reg_empty_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \sig_dbeat_cntr_reg[2]_0\ : in STD_LOGIC;
    sm_set_error_reg : in STD_LOGIC_VECTOR ( 10 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_s2mm_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_dynshreg_f__parameterized5\ : entity is "dynshreg_f";
end \axi_dma_ctrl_dynshreg_f__parameterized5\;

architecture STRUCTURE of \axi_dma_ctrl_dynshreg_f__parameterized5\ is
  signal p_0_out_0 : STD_LOGIC_VECTOR ( 10 downto 6 );
  signal \sig_last_dbeat_i_3__0_n_0\ : STD_LOGIC;
  signal \^sig_next_calc_error_reg_reg\ : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][0]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \INFERRED_GEN.data_reg[3][0]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][0]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][10]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][10]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][10]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][11]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][11]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][12]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][12]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][12]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][16]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][16]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][16]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][17]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][17]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][17]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][18]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][18]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][18]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][19]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][19]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][19]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][1]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][1]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][1]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][20]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][20]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][25]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][25]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][25]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][3]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][3]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][3]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][5]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][5]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][5]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][6]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][6]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][6]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][7]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][7]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][7]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][8]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][8]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][8]_srl4 ";
  attribute srl_bus_name of \INFERRED_GEN.data_reg[3][9]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3] ";
  attribute srl_name of \INFERRED_GEN.data_reg[3][9]_srl4\ : label is "U0/\I_PRMRY_DATAMOVER/GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[3][9]_srl4 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[0]_i_1__0\ : label is "soft_lutpair167";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[1]_i_1__0\ : label is "soft_lutpair167";
begin
  sig_next_calc_error_reg_reg <= \^sig_next_calc_error_reg_reg\;
\INFERRED_GEN.data_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(10),
      Q => \out\(11)
    );
\INFERRED_GEN.data_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \out\(3)
    );
\INFERRED_GEN.data_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \out\(2)
    );
\INFERRED_GEN.data_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \out\(1)
    );
\INFERRED_GEN.data_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(5),
      Q => p_0_out_0(10)
    );
\INFERRED_GEN.data_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(4),
      Q => p_0_out_0(9)
    );
\INFERRED_GEN.data_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(3),
      Q => p_0_out_0(8)
    );
\INFERRED_GEN.data_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(2),
      Q => p_0_out_0(7)
    );
\INFERRED_GEN.data_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \out\(10)
    );
\INFERRED_GEN.data_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(1),
      Q => p_0_out_0(6)
    );
\INFERRED_GEN.data_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(0),
      Q => \out\(0)
    );
\INFERRED_GEN.data_reg[3][25]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => FIFO_Full_reg,
      I1 => sig_inhibit_rdy_n,
      I2 => sig_mstr2data_cmd_valid,
      O => \^sig_next_calc_error_reg_reg\
    );
\INFERRED_GEN.data_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(9),
      Q => \out\(9)
    );
\INFERRED_GEN.data_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(8),
      Q => \out\(8)
    );
\INFERRED_GEN.data_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(7),
      Q => \out\(7)
    );
\INFERRED_GEN.data_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => sm_set_error_reg(6),
      Q => \out\(6)
    );
\INFERRED_GEN.data_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \out\(5)
    );
\INFERRED_GEN.data_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => '0',
      A3 => '0',
      CE => \^sig_next_calc_error_reg_reg\,
      CLK => m_axi_s2mm_aclk,
      D => '1',
      Q => \out\(4)
    );
\sig_dbeat_cntr[0]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8B"
    )
        port map (
      I0 => p_0_out_0(6),
      I1 => sig_dqual_reg_empty_reg,
      I2 => \sig_dbeat_cntr_reg[4]\(0),
      O => D(0)
    );
\sig_dbeat_cntr[1]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B88B"
    )
        port map (
      I0 => p_0_out_0(7),
      I1 => sig_dqual_reg_empty_reg,
      I2 => \sig_dbeat_cntr_reg[4]\(0),
      I3 => \sig_dbeat_cntr_reg[4]\(1),
      O => D(1)
    );
\sig_dbeat_cntr[2]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBB8888B"
    )
        port map (
      I0 => p_0_out_0(8),
      I1 => sig_dqual_reg_empty_reg,
      I2 => \sig_dbeat_cntr_reg[4]\(0),
      I3 => \sig_dbeat_cntr_reg[4]\(1),
      I4 => \sig_dbeat_cntr_reg[4]\(2),
      O => D(2)
    );
\sig_dbeat_cntr[3]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8B8B8B8B88B"
    )
        port map (
      I0 => p_0_out_0(9),
      I1 => sig_dqual_reg_empty_reg,
      I2 => \sig_dbeat_cntr_reg[4]\(3),
      I3 => \sig_dbeat_cntr_reg[4]\(0),
      I4 => \sig_dbeat_cntr_reg[4]\(1),
      I5 => \sig_dbeat_cntr_reg[4]\(2),
      O => D(3)
    );
\sig_dbeat_cntr[4]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BB8B88"
    )
        port map (
      I0 => p_0_out_0(10),
      I1 => sig_dqual_reg_empty_reg,
      I2 => \sig_dbeat_cntr_reg[4]\(3),
      I3 => \sig_dbeat_cntr_reg[2]_0\,
      I4 => \sig_dbeat_cntr_reg[4]\(4),
      O => D(4)
    );
\sig_first_dbeat_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"35300000"
    )
        port map (
      I0 => sig_s_ready_out_reg,
      I1 => \sig_last_dbeat_i_3__0_n_0\,
      I2 => sig_dqual_reg_empty_reg,
      I3 => sig_first_dbeat_reg_0,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_first_dbeat_reg
    );
\sig_last_dbeat_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CC5F0000CC500000"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg[2]\,
      I1 => \sig_last_dbeat_i_3__0_n_0\,
      I2 => sig_s_ready_out_reg,
      I3 => sig_dqual_reg_empty_reg,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I5 => sig_last_dbeat_reg_0,
      O => sig_last_dbeat_reg
    );
\sig_last_dbeat_i_3__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => p_0_out_0(9),
      I1 => p_0_out_0(7),
      I2 => p_0_out_0(6),
      I3 => p_0_out_0(8),
      I4 => p_0_out_0(10),
      O => \sig_last_dbeat_i_3__0_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_cmd_status is
  port (
    sig_reset_reg : out STD_LOGIC;
    sig_cmd2mstr_cmd_valid : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\ : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ : out STD_LOGIC;
    sig_stat2wsc_status_ready : out STD_LOGIC;
    s2mm_decerr_i : out STD_LOGIC;
    s2mm_interr_i : out STD_LOGIC;
    s2mm_slverr_i : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ : out STD_LOGIC;
    sig_init_done_reg : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_init_done_reg_1 : out STD_LOGIC;
    sig_init_done_reg_2 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 40 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sm_scc_sm_ready_reg : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    sm_scc_sm_ready : in STD_LOGIC;
    m_axis_s2mm_sts_tready : in STD_LOGIC;
    sig_wsc2stat_status_valid : in STD_LOGIC;
    p_8_out : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    sig_init_done_1 : in STD_LOGIC;
    sig_init_done_2 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_S2MM.queue_dout2_new_reg[31]\ : in STD_LOGIC_VECTOR ( 40 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_cmd_status : entity is "axi_datamover_cmd_status";
end axi_dma_ctrl_axi_datamover_cmd_status;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_cmd_status is
  signal I_CMD_FIFO_n_5 : STD_LOGIC;
  signal sig_init_done_3 : STD_LOGIC;
begin
\GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized0\
     port map (
      D(3 downto 0) => D(3 downto 0),
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\,
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\,
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1]_0\ => sig_stat2wsc_status_ready,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axis_s2mm_sts_tready => m_axis_s2mm_sts_tready,
      p_8_out => p_8_out,
      s2mm_decerr_i => s2mm_decerr_i,
      s2mm_interr_i => s2mm_interr_i,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_slverr_i => s2mm_slverr_i,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => sig_init_done_3,
      sig_init_reg2_reg => I_CMD_FIFO_n_5,
      sig_wsc2stat_status_valid => sig_wsc2stat_status_valid
    );
I_CMD_FIFO: entity work.axi_dma_ctrl_axi_datamover_fifo
     port map (
      \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 0) => \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 0),
      Q(40 downto 0) => Q(40 downto 0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]_0\ => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      sig_cmd2mstr_cmd_valid => sig_cmd2mstr_cmd_valid,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => sig_init_done,
      sig_init_done_0 => sig_init_done_0,
      sig_init_done_1 => sig_init_done_1,
      sig_init_done_2 => sig_init_done_2,
      sig_init_done_3 => sig_init_done_3,
      sig_init_done_reg_0 => sig_init_done_reg,
      sig_init_done_reg_1 => sig_init_done_reg_0,
      sig_init_done_reg_2 => I_CMD_FIFO_n_5,
      sig_init_done_reg_3 => sig_init_done_reg_1,
      sig_init_done_reg_4 => sig_init_done_reg_2,
      sig_init_reg2_reg_0 => sig_reset_reg,
      sm_scc_sm_ready => sm_scc_sm_ready,
      sm_scc_sm_ready_reg => sm_scc_sm_ready_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_cmd_status_12 is
  port (
    sig_reset_reg : out STD_LOGIC;
    sig_cmd2mstr_cmd_valid : out STD_LOGIC;
    s_axis_mm2s_cmd_tready : out STD_LOGIC;
    \mm2s_tag_reg[0]\ : out STD_LOGIC;
    sig_stat2rsc_status_ready : out STD_LOGIC;
    sig_init_done_reg : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_rd_sts_tag_reg0 : out STD_LOGIC;
    mm2s_decerr_i : out STD_LOGIC;
    mm2s_interr_i : out STD_LOGIC;
    mm2s_slverr_i : out STD_LOGIC;
    \mm2s_tag_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 40 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    sm_scc_sm_ready : in STD_LOGIC;
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    p_2_out : in STD_LOGIC;
    p_7_out : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_MM2S.queue_dout_new_reg[31]\ : in STD_LOGIC_VECTOR ( 40 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_cmd_status_12 : entity is "axi_datamover_cmd_status";
end axi_dma_ctrl_axi_datamover_cmd_status_12;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_cmd_status_12 is
  signal I_CMD_FIFO_n_3 : STD_LOGIC;
  signal sig_init_done_1 : STD_LOGIC;
begin
\GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized0_16\
     port map (
      D(3 downto 0) => D(3 downto 0),
      E(0) => E(0),
      SR(0) => SR(0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      mm2s_decerr_i => mm2s_decerr_i,
      mm2s_interr_i => mm2s_interr_i,
      mm2s_slverr_i => mm2s_slverr_i,
      \mm2s_tag_reg[0]\ => \mm2s_tag_reg[0]\,
      \mm2s_tag_reg[0]_0\ => \mm2s_tag_reg[0]_0\,
      p_2_out => p_2_out,
      p_7_out => p_7_out,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ => I_CMD_FIFO_n_3,
      sig_init_done => sig_init_done_1,
      sig_rd_sts_tag_reg0 => sig_rd_sts_tag_reg0,
      \sig_rd_sts_tag_reg_reg[0]\ => sig_stat2rsc_status_ready,
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid
    );
I_CMD_FIFO: entity work.axi_dma_ctrl_axi_datamover_fifo_17
     port map (
      \GEN_MM2S.queue_dout_new_reg[31]\(40 downto 0) => \GEN_MM2S.queue_dout_new_reg[31]\(40 downto 0),
      \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0) => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0),
      Q(40 downto 0) => Q(40 downto 0),
      SR(0) => SR(0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      sig_cmd2mstr_cmd_valid => sig_cmd2mstr_cmd_valid,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => sig_init_done,
      sig_init_done_0 => sig_init_done_0,
      sig_init_done_1 => sig_init_done_1,
      sig_init_done_reg_0 => I_CMD_FIFO_n_3,
      sig_init_done_reg_1 => sig_init_done_reg,
      sig_init_done_reg_2 => sig_init_done_reg_0,
      sig_init_reg2_reg_0 => sig_reset_reg,
      sm_scc_sm_ready => sm_scc_sm_ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_lite_if is
  port (
    s_axi_lite_arready : out STD_LOGIC;
    p_2_out : out STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_lite_bvalid : out STD_LOGIC;
    s_axi_lite_rvalid : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg_0\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    scndry_vect_out : out STD_LOGIC_VECTOR ( 28 downto 0 );
    \dmacr_i_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    dmacr_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    dmacr_i_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[0]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_lite_awready : out STD_LOGIC;
    ioc_irq_reg : out STD_LOGIC;
    dly_irq_reg : out STD_LOGIC;
    ioc_irq_reg_0 : out STD_LOGIC;
    dly_irq_reg_0 : out STD_LOGIC;
    s_axi_lite_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    rdy_to2 : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    s_axi_lite_arvalid : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s_axi_lite_awvalid : in STD_LOGIC;
    s_axi_lite_wvalid : in STD_LOGIC;
    s_axi_lite_resetn : in STD_LOGIC;
    s_axi_lite_bready : in STD_LOGIC;
    m_axi_sg_hrdresetn : in STD_LOGIC;
    s_axi_lite_rready : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    \dmacr_i_reg[0]\ : in STD_LOGIC;
    \dmacr_i_reg[0]_0\ : in STD_LOGIC;
    s2mm_soft_reset_done : in STD_LOGIC;
    mm2s_soft_reset_done : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[12]\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[13]\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dma_decerr_reg : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 22 downto 0 );
    sg_interr_reg : in STD_LOGIC;
    sg_slverr_reg : in STD_LOGIC;
    sg_decerr_reg : in STD_LOGIC;
    \dmacr_i_reg[31]\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \dmacr_i_reg[12]\ : in STD_LOGIC;
    \dmacr_i_reg[13]\ : in STD_LOGIC;
    \dmacr_i_reg[14]\ : in STD_LOGIC;
    dma_decerr_reg_0 : in STD_LOGIC;
    sg_interr_reg_0 : in STD_LOGIC;
    sg_slverr_reg_0 : in STD_LOGIC;
    sg_decerr_reg_0 : in STD_LOGIC;
    \dmacr_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 12 downto 0 );
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    halted_reg : in STD_LOGIC;
    halted_reg_0 : in STD_LOGIC;
    dma_interr_reg : in STD_LOGIC;
    dma_slverr_reg : in STD_LOGIC;
    dma_slverr_reg_0 : in STD_LOGIC;
    idle_reg : in STD_LOGIC;
    idle_reg_0 : in STD_LOGIC;
    dma_interr_reg_0 : in STD_LOGIC;
    p_46_out : in STD_LOGIC;
    ioc_irq_reg_1 : in STD_LOGIC;
    p_45_out : in STD_LOGIC;
    dly_irq_reg_1 : in STD_LOGIC;
    p_20_out : in STD_LOGIC;
    ioc_irq_reg_2 : in STD_LOGIC;
    p_19_out : in STD_LOGIC;
    dly_irq_reg_2 : in STD_LOGIC;
    s_axi_lite_awaddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axi_lite_wdata : in STD_LOGIC_VECTOR ( 29 downto 0 );
    s_axi_lite_araddr : in STD_LOGIC_VECTOR ( 9 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_lite_if : entity is "axi_dma_lite_if";
end axi_dma_ctrl_axi_dma_lite_if;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_lite_if is
  signal \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d10_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d10_reg_srl10___I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d10_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d11_reg_I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d11_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d11_reg_gate_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d11_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d1_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d2_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d3_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d4_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d5_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d6_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d7_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d8_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.arready_d9_reg_r_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[0]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_5_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[11]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_6_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_7_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_5_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_6_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_5_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[7]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_3_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_2_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_3_n_0\ : STD_LOGIC;
  signal \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \GEN_ASYNC_READ.read_in_progress_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_READ.s_axi_lite_rvalid_i_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.AWVLD_CDC_TO_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG2_WREADY_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_1\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_2\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_3\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_4\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_5\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_6\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_7\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.WVLD_CDC_TO_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.awvalid_cdc_from_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.awvalid_d1_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.rdy_cdc_from_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.rdy_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.rdy_to2_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_WRITE.wvalid_cdc_from_i_1_n_0\ : STD_LOGIC;
  signal araddr_d3 : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal arready_d12 : STD_LOGIC;
  signal arvalid : STD_LOGIC;
  signal arvalid_d1 : STD_LOGIC;
  signal arvalid_d1_i_1_n_0 : STD_LOGIC;
  signal \arvalid_re__0\ : STD_LOGIC;
  signal awvalid : STD_LOGIC;
  signal awvalid_cdc_from : STD_LOGIC;
  signal awvalid_d1 : STD_LOGIC;
  signal awvalid_to : STD_LOGIC;
  signal awvalid_to2 : STD_LOGIC;
  signal ip2axi_rddata : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal ip_addr_cap : STD_LOGIC;
  signal ip_arvalid_d2 : STD_LOGIC;
  signal ip_arvalid_d3 : STD_LOGIC;
  signal ip_data_cap : STD_LOGIC;
  signal lite_rdata_cdc_from : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal lite_rdata_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal p_0_out : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal p_0_out_0 : STD_LOGIC;
  signal \^p_2_out\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal rdy : STD_LOGIC;
  signal rdy_back : STD_LOGIC;
  signal rdy_back_to : STD_LOGIC;
  signal rdy_cdc_from : STD_LOGIC;
  signal rdy_to2_cdc_from : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of rdy_to2_cdc_from : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of rdy_to2_cdc_from : signal is "no";
  signal read_in_progress : STD_LOGIC;
  signal rvalid : STD_LOGIC;
  signal \^s_axi_lite_arready\ : STD_LOGIC;
  signal \^s_axi_lite_bvalid\ : STD_LOGIC;
  signal \^s_axi_lite_rvalid\ : STD_LOGIC;
  signal wvalid : STD_LOGIC;
  signal wvalid_cdc_from : STD_LOGIC;
  signal wvalid_d1 : STD_LOGIC;
  signal wvalid_to : STD_LOGIC;
  signal wvalid_to2 : STD_LOGIC;
  attribute srl_name : string;
  attribute srl_name of \GEN_ASYNC_READ.arready_d10_reg_srl10___I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d10_reg_r\ : label is "U0/\I_AXI_DMA_REG_MODULE/GEN_AXI_LITE_IF.AXI_LITE_IF_I/GEN_ASYNC_READ.arready_d10_reg_srl10___I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d10_reg_r ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_6\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_7\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_1\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_2\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_2\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_3\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_1\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_2\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_1\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_2\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_3\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_5\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \GEN_ASYNC_READ.read_in_progress_i_1\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.rdy_cdc_from_i_1\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \GEN_ASYNC_WRITE.rdy_i_1\ : label is "soft_lutpair132";
  attribute KEEP : string;
  attribute KEEP of \GEN_ASYNC_WRITE.rdy_to2_cdc_from_reg\ : label is "yes";
  attribute equivalent_register_removal of \GEN_ASYNC_WRITE.rdy_to2_cdc_from_reg\ : label is "no";
  attribute SOFT_HLUTNM of arvalid_d1_i_1 : label is "soft_lutpair127";
begin
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[0]_0\(2 downto 0) <= \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2 downto 0);
  p_2_out(7 downto 0) <= \^p_2_out\(7 downto 0);
  s_axi_lite_arready <= \^s_axi_lite_arready\;
  s_axi_lite_bvalid <= \^s_axi_lite_bvalid\;
  s_axi_lite_rvalid <= \^s_axi_lite_rvalid\;
\GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK\: entity work.\axi_dma_ctrl_cdc_sync__parameterized3\
     port map (
      E(0) => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      ip_arvalid_d3 => ip_arvalid_d3,
      m_axi_sg_aclk => m_axi_sg_aclk,
      s_axi_lite_arready => \^s_axi_lite_arready\,
      scndry_out => ip_arvalid_d2
    );
\GEN_ASYNC_READ.REG_DATA2LITE_CLOCK\: entity work.\axi_dma_ctrl_cdc_sync__parameterized4\
     port map (
      Q(31 downto 0) => lite_rdata_cdc_from(31 downto 0),
      s_axi_lite_aclk => s_axi_lite_aclk,
      scndry_vect_out(31 downto 0) => lite_rdata_d2(31 downto 0)
    );
\GEN_ASYNC_READ.REG_RADDR_TO_IPCLK\: entity work.\axi_dma_ctrl_cdc_sync__parameterized2\
     port map (
      m_axi_sg_aclk => m_axi_sg_aclk,
      s_axi_lite_araddr(9 downto 0) => s_axi_lite_araddr(9 downto 0),
      scndry_vect_out(9 downto 0) => araddr_d3(9 downto 0)
    );
\GEN_ASYNC_READ.arready_d10_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d9_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d10_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d10_reg_srl10___I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d10_reg_r\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => '1',
      A1 => '0',
      A2 => '0',
      A3 => '1',
      CE => '1',
      CLK => s_axi_lite_aclk,
      D => \^s_axi_lite_arready\,
      Q => \GEN_ASYNC_READ.arready_d10_reg_srl10___I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d10_reg_r_n_0\
    );
\GEN_ASYNC_READ.arready_d11_reg_I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d11_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d10_reg_srl10___I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d10_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d11_reg_I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d11_reg_r_n_0\,
      R => '0'
    );
\GEN_ASYNC_READ.arready_d11_reg_gate\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \GEN_ASYNC_READ.arready_d11_reg_I_AXI_DMA_REG_MODULE_GEN_AXI_LITE_IF.AXI_LITE_IF_I_GEN_ASYNC_READ.arready_d11_reg_r_n_0\,
      I1 => \GEN_ASYNC_READ.arready_d11_reg_r_n_0\,
      O => \GEN_ASYNC_READ.arready_d11_reg_gate_n_0\
    );
\GEN_ASYNC_READ.arready_d11_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d10_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d11_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d12_reg\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d11_reg_gate_n_0\,
      Q => arready_d12,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d1_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => '1',
      Q => \GEN_ASYNC_READ.arready_d1_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d2_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d1_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d2_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d3_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d2_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d3_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d4_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d3_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d4_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d5_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d4_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d5_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d6_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d5_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d6_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d7_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d6_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d7_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d8_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d7_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d8_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.arready_d9_reg_r\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.arready_d8_reg_r_n_0\,
      Q => \GEN_ASYNC_READ.arready_d9_reg_r_n_0\,
      R => p_0_in
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(0),
      Q => p_0_out(0),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(1),
      Q => p_0_out(1),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(2),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(3),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(4),
      Q => p_0_out(4),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(5),
      Q => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(6),
      Q => p_0_out(6),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(7),
      Q => p_0_out(7),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(8),
      Q => p_0_out(8),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      D => araddr_d3(9),
      Q => p_0_out(9),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.ip_arvalid_d3_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => ip_arvalid_d2,
      Q => ip_arvalid_d3,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAEAAAAAAAEAAAAA"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[0]_i_2_n_0\,
      I1 => \dmacr_i_reg[0]_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I5 => halted_reg,
      O => ip2axi_rddata(0)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8022800280208000"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => halted_reg_0,
      I5 => \dmacr_i_reg[0]\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[0]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_3_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I3 => Q(4),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_4_n_0\,
      O => ip2axi_rddata(10)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => p_0_out(1),
      I1 => p_0_out(6),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_5_n_0\,
      I3 => p_0_out(4),
      I4 => p_0_out(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AA0000F00000CC"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(4),
      I1 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(4),
      I2 => sg_decerr_reg,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000C00A000000000"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(4),
      I1 => sg_decerr_reg_0,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => p_0_out(7),
      I1 => p_0_out(8),
      I2 => p_0_out(9),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_5_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I1 => Q(5),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3_n_0\,
      I3 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(5),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[11]_i_2_n_0\,
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5_n_0\,
      O => ip2axi_rddata(11)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0C00000800000008"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(5),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8_n_0\,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I5 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(5),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[11]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(6),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[12]\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_3_n_0\,
      O => ip2axi_rddata(12)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(6),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \dmacr_i_reg[12]\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[12]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(7),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[13]\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_3_n_0\,
      O => ip2axi_rddata(13)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(7),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \dmacr_i_reg[13]\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[13]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(8),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_3_n_0\,
      O => ip2axi_rddata(14)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(8),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \dmacr_i_reg[14]\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[14]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I1 => Q(9),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3_n_0\,
      I3 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(6),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_4_n_0\,
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5_n_0\,
      O => ip2axi_rddata(15)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002000000000000"
    )
        port map (
      I0 => p_0_out(6),
      I1 => p_0_out(7),
      I2 => p_0_out(8),
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_6_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_7_n_0\,
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_3_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0C00000800000008"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(6),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8_n_0\,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I5 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(9),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => p_0_out(4),
      I1 => p_0_out(0),
      I2 => p_0_out(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => p_0_out(0),
      I1 => p_0_out(4),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_6_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0023"
    )
        port map (
      I0 => p_0_out(4),
      I1 => p_0_out(0),
      I2 => p_0_out(9),
      I3 => p_0_out(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_7_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"05010000"
    )
        port map (
      I0 => p_0_out(6),
      I1 => p_0_out(9),
      I2 => p_0_out(0),
      I3 => p_0_out(4),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_5_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(10),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_3_n_0\,
      O => ip2axi_rddata(16)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(7),
      I1 => \dmacr_i_reg[31]\(0),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(10),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(0),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(0),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(7),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[16]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(11),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_3_n_0\,
      O => ip2axi_rddata(17)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(8),
      I1 => \dmacr_i_reg[31]\(1),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(11),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(1),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(1),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(8),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[17]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(12),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_3_n_0\,
      O => ip2axi_rddata(18)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(9),
      I1 => \dmacr_i_reg[31]\(2),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(2),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(12),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(2),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(2),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(9),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[18]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(13),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_3_n_0\,
      O => ip2axi_rddata(19)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(10),
      I1 => \dmacr_i_reg[31]\(3),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(3),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(13),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(3),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(3),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(10),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[19]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAAABAAA"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_2_n_0\,
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => idle_reg,
      O => ip2axi_rddata(1)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80228002"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => idle_reg_0,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[1]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(14),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_3_n_0\,
      O => ip2axi_rddata(20)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(11),
      I1 => \dmacr_i_reg[31]\(4),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(4),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(14),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(4),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(4),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(11),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[20]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(15),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_3_n_0\,
      O => ip2axi_rddata(21)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(12),
      I1 => \dmacr_i_reg[31]\(5),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(5),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(15),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(5),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(5),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(12),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[21]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(16),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_3_n_0\,
      O => ip2axi_rddata(22)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(13),
      I1 => \dmacr_i_reg[31]\(6),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(6),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(16),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(6),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(6),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(13),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[22]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(17),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_3_n_0\,
      O => ip2axi_rddata(23)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(14),
      I1 => \dmacr_i_reg[31]\(7),
      I2 => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(7),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(17),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(7),
      I1 => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(7),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(14),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[23]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(18),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_3_n_0\,
      O => ip2axi_rddata(24)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(15),
      I1 => \dmacr_i_reg[31]\(8),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(18),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(8),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(0),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(15),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[24]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(19),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_3_n_0\,
      O => ip2axi_rddata(25)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(16),
      I1 => \dmacr_i_reg[31]\(9),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(19),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(9),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(1),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(16),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[25]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(20),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_3_n_0\,
      O => ip2axi_rddata(26)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(17),
      I1 => \dmacr_i_reg[31]\(10),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(2),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(20),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(10),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(2),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(17),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[26]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(21),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_3_n_0\,
      O => ip2axi_rddata(27)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(18),
      I1 => \dmacr_i_reg[31]\(11),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(3),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(21),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => mm2s_dmacr(2),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(3),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(18),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[27]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(22),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_3_n_0\,
      O => ip2axi_rddata(28)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(19),
      I1 => \dmacr_i_reg[31]\(12),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(4),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(22),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => mm2s_dmacr(3),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(4),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(19),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[28]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(23),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_3_n_0\,
      O => ip2axi_rddata(29)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(20),
      I1 => s2mm_dmacr(2),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(5),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(23),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => mm2s_dmacr(4),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(5),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(20),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[29]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF80808080808080"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_2_n_0\,
      I2 => \dmacr_i_reg[2]\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_3_n_0\,
      I5 => \dmacr_i_reg[2]_0\,
      O => ip2axi_rddata(2)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[2]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(24),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_2_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_3_n_0\,
      O => ip2axi_rddata(30)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(21),
      I1 => \dmacr_i_reg[31]\(13),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(6),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(24),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_4_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(11),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(6),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(21),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[30]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\,
      I1 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_4_n_0\,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_5_n_0\,
      O => ip2axi_rddata(31)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"4"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F000CCAA"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(22),
      I1 => \dmacr_i_reg[31]\(14),
      I2 => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(7),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(25),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_6_n_0\,
      I3 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_5_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000CCF0AA"
    )
        port map (
      I0 => \dmacr_i_reg[31]_0\(12),
      I1 => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(7),
      I2 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(22),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_6_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFC080"
    )
        port map (
      I0 => s2mm_dmacr(0),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_2_n_0\,
      O => ip2axi_rddata(3)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000C8"
    )
        port map (
      I0 => mm2s_dmacr(0),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[3]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAEEEA"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_2_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_3_n_0\,
      I2 => p_0_out(4),
      I3 => p_0_out(0),
      I4 => p_0_out(1),
      O => ip2axi_rddata(4)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000080C00000800"
    )
        port map (
      I0 => dma_interr_reg,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I5 => mm2s_dmacr(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000088C00000"
    )
        port map (
      I0 => dma_interr_reg_0,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8_n_0\,
      I2 => s2mm_dmacr(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[4]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF80808080808080"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[31]_i_3_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_2_n_0\,
      I2 => dma_slverr_reg,
      I3 => dma_slverr_reg_0,
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_3_n_0\,
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => ip2axi_rddata(5)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I1 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00010000"
    )
        port map (
      I0 => p_0_out(0),
      I1 => p_0_out(4),
      I2 => p_0_out(8),
      I3 => p_0_out(7),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_5_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000501"
    )
        port map (
      I0 => p_0_out(1),
      I1 => p_0_out(9),
      I2 => p_0_out(0),
      I3 => p_0_out(4),
      I4 => p_0_out(6),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_5_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I3 => Q(0),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_3_n_0\,
      O => ip2axi_rddata(6)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AA0000F00000CC"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(0),
      I1 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(0),
      I2 => dma_decerr_reg,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000C00A000000000"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(0),
      I1 => dma_decerr_reg_0,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[6]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I1 => Q(1),
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_3_n_0\,
      I3 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(1),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[7]_i_2_n_0\,
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_5_n_0\,
      O => ip2axi_rddata(7)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0C00000800000008"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1),
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_8_n_0\,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I5 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[7]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I3 => Q(2),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_3_n_0\,
      O => ip2axi_rddata(8)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AA0000F00000CC"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(2),
      I1 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(2),
      I2 => sg_interr_reg,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000C00A000000000"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(2),
      I1 => sg_interr_reg_0,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[8]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \GEN_ASYNC_READ.lite_rdata_cdc_from[10]_i_2_n_0\,
      I1 => \GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_2_n_0\,
      I2 => \GEN_ASYNC_READ.lite_rdata_cdc_from[15]_i_2_n_0\,
      I3 => Q(3),
      I4 => \GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_3_n_0\,
      O => ip2axi_rddata(9)
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AA0000F00000CC"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(3),
      I1 => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(3),
      I2 => sg_slverr_reg,
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I5 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_2_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000C00A000000000"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(3),
      I1 => sg_slverr_reg_0,
      I2 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(1),
      I3 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(2),
      I4 => \^gen_async_read.lite_rdata_cdc_from_reg[0]_0\(0),
      I5 => \GEN_ASYNC_READ.lite_rdata_cdc_from[5]_i_4_n_0\,
      O => \GEN_ASYNC_READ.lite_rdata_cdc_from[9]_i_3_n_0\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(0),
      Q => lite_rdata_cdc_from(0),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(10),
      Q => lite_rdata_cdc_from(10),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(11),
      Q => lite_rdata_cdc_from(11),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(12),
      Q => lite_rdata_cdc_from(12),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(13),
      Q => lite_rdata_cdc_from(13),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(14),
      Q => lite_rdata_cdc_from(14),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(15),
      Q => lite_rdata_cdc_from(15),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(16),
      Q => lite_rdata_cdc_from(16),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(17),
      Q => lite_rdata_cdc_from(17),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(18),
      Q => lite_rdata_cdc_from(18),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(19),
      Q => lite_rdata_cdc_from(19),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(1),
      Q => lite_rdata_cdc_from(1),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(20),
      Q => lite_rdata_cdc_from(20),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(21),
      Q => lite_rdata_cdc_from(21),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(22),
      Q => lite_rdata_cdc_from(22),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(23),
      Q => lite_rdata_cdc_from(23),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(24),
      Q => lite_rdata_cdc_from(24),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(25),
      Q => lite_rdata_cdc_from(25),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(26),
      Q => lite_rdata_cdc_from(26),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(27),
      Q => lite_rdata_cdc_from(27),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(28),
      Q => lite_rdata_cdc_from(28),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(29),
      Q => lite_rdata_cdc_from(29),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(2),
      Q => lite_rdata_cdc_from(2),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(30),
      Q => lite_rdata_cdc_from(30),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(31),
      Q => lite_rdata_cdc_from(31),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(3),
      Q => lite_rdata_cdc_from(3),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(4),
      Q => lite_rdata_cdc_from(4),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(5),
      Q => lite_rdata_cdc_from(5),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(6),
      Q => lite_rdata_cdc_from(6),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(7),
      Q => lite_rdata_cdc_from(7),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(8),
      Q => lite_rdata_cdc_from(8),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.lite_rdata_cdc_from_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => rvalid,
      D => ip2axi_rddata(9),
      Q => lite_rdata_cdc_from(9),
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.read_in_progress_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000BA00"
    )
        port map (
      I0 => read_in_progress,
      I1 => arvalid_d1,
      I2 => arvalid,
      I3 => s_axi_lite_resetn,
      I4 => \^s_axi_lite_rvalid\,
      O => \GEN_ASYNC_READ.read_in_progress_i_1_n_0\
    );
\GEN_ASYNC_READ.read_in_progress_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.read_in_progress_i_1_n_0\,
      Q => read_in_progress,
      R => '0'
    );
\GEN_ASYNC_READ.rvalid_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.REG_ARVALID_TO_IPCLK_n_0\,
      Q => rvalid,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8F"
    )
        port map (
      I0 => s_axi_lite_rready,
      I1 => \^s_axi_lite_rvalid\,
      I2 => s_axi_lite_resetn,
      O => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(0),
      Q => s_axi_lite_rdata(0),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(10),
      Q => s_axi_lite_rdata(10),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(11),
      Q => s_axi_lite_rdata(11),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(12),
      Q => s_axi_lite_rdata(12),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(13),
      Q => s_axi_lite_rdata(13),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(14),
      Q => s_axi_lite_rdata(14),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(15),
      Q => s_axi_lite_rdata(15),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(16),
      Q => s_axi_lite_rdata(16),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(17),
      Q => s_axi_lite_rdata(17),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(18),
      Q => s_axi_lite_rdata(18),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(19),
      Q => s_axi_lite_rdata(19),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(1),
      Q => s_axi_lite_rdata(1),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(20),
      Q => s_axi_lite_rdata(20),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(21),
      Q => s_axi_lite_rdata(21),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(22),
      Q => s_axi_lite_rdata(22),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(23),
      Q => s_axi_lite_rdata(23),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(24),
      Q => s_axi_lite_rdata(24),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(25),
      Q => s_axi_lite_rdata(25),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(26),
      Q => s_axi_lite_rdata(26),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(27),
      Q => s_axi_lite_rdata(27),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(28),
      Q => s_axi_lite_rdata(28),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(29),
      Q => s_axi_lite_rdata(29),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(2),
      Q => s_axi_lite_rdata(2),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(30),
      Q => s_axi_lite_rdata(30),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(31),
      Q => s_axi_lite_rdata(31),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(3),
      Q => s_axi_lite_rdata(3),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(4),
      Q => s_axi_lite_rdata(4),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(5),
      Q => s_axi_lite_rdata(5),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(6),
      Q => s_axi_lite_rdata(6),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(7),
      Q => s_axi_lite_rdata(7),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(8),
      Q => s_axi_lite_rdata(8),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rdata_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => s_axi_lite_aclk,
      CE => arready_d12,
      D => lite_rdata_d2(9),
      Q => s_axi_lite_rdata(9),
      R => \GEN_ASYNC_READ.s_axi_lite_rdata[31]_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rvalid_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"08C8"
    )
        port map (
      I0 => arready_d12,
      I1 => s_axi_lite_resetn,
      I2 => \^s_axi_lite_rvalid\,
      I3 => s_axi_lite_rready,
      O => \GEN_ASYNC_READ.s_axi_lite_rvalid_i_i_1_n_0\
    );
\GEN_ASYNC_READ.s_axi_lite_rvalid_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_READ.s_axi_lite_rvalid_i_i_1_n_0\,
      Q => \^s_axi_lite_rvalid\,
      R => '0'
    );
\GEN_ASYNC_WRITE.AWVLD_CDC_TO\: entity work.axi_dma_ctrl_cdc_sync_25
     port map (
      \GEN_ASYNC_WRITE.ip_addr_cap_reg\ => \GEN_ASYNC_WRITE.AWVLD_CDC_TO_n_0\,
      awvalid_to2 => awvalid_to2,
      ip_addr_cap => ip_addr_cap,
      m_axi_sg_aclk => m_axi_sg_aclk,
      prmry_in => awvalid_cdc_from,
      scndry_out => awvalid_to
    );
\GEN_ASYNC_WRITE.REG2_WREADY\: entity work.axi_dma_ctrl_cdc_sync_26
     port map (
      \GEN_ASYNC_WRITE.bvalid_i_reg\ => \GEN_ASYNC_WRITE.REG2_WREADY_n_0\,
      \GEN_ASYNC_WRITE.rdy_to2_reg\ => \GEN_ASYNC_WRITE.rdy_to2_reg_n_0\,
      prmry_in => rdy_cdc_from,
      s_axi_lite_aclk => s_axi_lite_aclk,
      s_axi_lite_awready => s_axi_lite_awready,
      s_axi_lite_bready => s_axi_lite_bready,
      s_axi_lite_bvalid => \^s_axi_lite_bvalid\,
      s_axi_lite_resetn => s_axi_lite_resetn,
      scndry_out => scndry_out
    );
\GEN_ASYNC_WRITE.REG3_WREADY\: entity work.axi_dma_ctrl_cdc_sync_27
     port map (
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_hrdresetn => m_axi_sg_hrdresetn,
      p_0_out_0 => p_0_out_0,
      prmry_in => rdy_to2_cdc_from,
      rdy_back => rdy_back,
      scndry_out => rdy_back_to
    );
\GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK\: entity work.\axi_dma_ctrl_cdc_sync__parameterized0\
     port map (
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[0]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_3\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[12]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_6\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[13]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_2\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_5\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]_0\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_0\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[1]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_1\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[2]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_7\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\ => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_4\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_hrdresetn => m_axi_sg_hrdresetn,
      rdy => rdy,
      s_axi_lite_awaddr(4 downto 0) => s_axi_lite_awaddr(4 downto 0)
    );
\GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK1\: entity work.\axi_dma_ctrl_cdc_sync__parameterized1\
     port map (
      SR(0) => SR(0),
      dly_irq_reg => dly_irq_reg,
      dly_irq_reg_0 => dly_irq_reg_0,
      dly_irq_reg_1 => dly_irq_reg_1,
      dly_irq_reg_2 => dly_irq_reg_2,
      dmacr_i(0) => dmacr_i(0),
      dmacr_i_0(0) => dmacr_i_0(0),
      \dmacr_i_reg[16]\(0) => \dmacr_i_reg[16]\(0),
      \dmacr_i_reg[2]\ => \dmacr_i_reg[2]\,
      \dmacr_i_reg[2]_0\ => \dmacr_i_reg[2]_0\,
      ioc_irq_reg => ioc_irq_reg,
      ioc_irq_reg_0 => ioc_irq_reg_0,
      ioc_irq_reg_1 => ioc_irq_reg_1,
      ioc_irq_reg_2 => ioc_irq_reg_2,
      m_axi_sg_aclk => m_axi_sg_aclk,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_soft_reset_done => mm2s_soft_reset_done,
      p_19_out => p_19_out,
      p_20_out => p_20_out,
      p_2_out(3 downto 2) => \^p_2_out\(5 downto 4),
      p_2_out(1 downto 0) => \^p_2_out\(1 downto 0),
      p_45_out => p_45_out,
      p_46_out => p_46_out,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_soft_reset_done => s2mm_soft_reset_done,
      s_axi_lite_wdata(29 downto 0) => s_axi_lite_wdata(29 downto 0),
      scndry_vect_out(28 downto 0) => scndry_vect_out(28 downto 0)
    );
\GEN_ASYNC_WRITE.WVLD_CDC_TO\: entity work.axi_dma_ctrl_cdc_sync_28
     port map (
      \GEN_ASYNC_WRITE.ip_data_cap_reg\ => \GEN_ASYNC_WRITE.WVLD_CDC_TO_n_0\,
      ip_data_cap => ip_data_cap,
      m_axi_sg_aclk => m_axi_sg_aclk,
      prmry_in => wvalid_cdc_from,
      scndry_out => wvalid_to,
      wvalid_to2 => wvalid_to2
    );
\GEN_ASYNC_WRITE.awvalid_cdc_from_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => awvalid_d1,
      I1 => awvalid,
      I2 => awvalid_cdc_from,
      O => \GEN_ASYNC_WRITE.awvalid_cdc_from_i_1_n_0\
    );
\GEN_ASYNC_WRITE.awvalid_cdc_from_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.awvalid_cdc_from_i_1_n_0\,
      Q => awvalid_cdc_from,
      R => \GEN_ASYNC_WRITE.awvalid_d1_i_1_n_0\
    );
\GEN_ASYNC_WRITE.awvalid_d1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^s_axi_lite_bvalid\,
      I1 => s_axi_lite_resetn,
      O => \GEN_ASYNC_WRITE.awvalid_d1_i_1_n_0\
    );
\GEN_ASYNC_WRITE.awvalid_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => awvalid,
      Q => awvalid_d1,
      R => \GEN_ASYNC_WRITE.awvalid_d1_i_1_n_0\
    );
\GEN_ASYNC_WRITE.awvalid_to2_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => awvalid_to,
      Q => awvalid_to2,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_3\,
      Q => \^p_2_out\(0),
      R => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_6\,
      Q => \^p_2_out\(4),
      R => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_2\,
      Q => \^p_2_out\(5),
      R => '0'
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_5\,
      Q => \^p_2_out\(6),
      R => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_0\,
      Q => \^p_2_out\(7),
      R => '0'
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_1\,
      Q => \^p_2_out\(1),
      R => '0'
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_7\,
      Q => \^p_2_out\(2),
      R => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\
    );
\GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_4\,
      Q => \^p_2_out\(3),
      R => \GEN_ASYNC_WRITE.REG_WADDR_TO_IPCLK_n_8\
    );
\GEN_ASYNC_WRITE.bvalid_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.REG2_WREADY_n_0\,
      Q => \^s_axi_lite_bvalid\,
      R => '0'
    );
\GEN_ASYNC_WRITE.ip_addr_cap_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.AWVLD_CDC_TO_n_0\,
      Q => ip_addr_cap,
      R => p_0_out_0
    );
\GEN_ASYNC_WRITE.ip_data_cap_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.WVLD_CDC_TO_n_0\,
      Q => ip_data_cap,
      R => p_0_out_0
    );
\GEN_ASYNC_WRITE.rdy_back_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => rdy_back_to,
      Q => rdy_back,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_WRITE.rdy_cdc_from_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => rdy,
      I1 => rdy_cdc_from,
      O => \GEN_ASYNC_WRITE.rdy_cdc_from_i_1_n_0\
    );
\GEN_ASYNC_WRITE.rdy_cdc_from_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.rdy_cdc_from_i_1_n_0\,
      Q => rdy_cdc_from,
      R => p_0_out_0
    );
\GEN_ASYNC_WRITE.rdy_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => ip_addr_cap,
      I1 => ip_data_cap,
      I2 => rdy,
      O => \GEN_ASYNC_WRITE.rdy_i_1_n_0\
    );
\GEN_ASYNC_WRITE.rdy_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.rdy_i_1_n_0\,
      Q => rdy,
      R => p_0_out_0
    );
\GEN_ASYNC_WRITE.rdy_to2_cdc_from_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => rdy_to2,
      Q => rdy_to2_cdc_from,
      R => '0'
    );
\GEN_ASYNC_WRITE.rdy_to2_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => rdy_to2,
      Q => \GEN_ASYNC_WRITE.rdy_to2_reg_n_0\,
      R => '0'
    );
\GEN_ASYNC_WRITE.wvalid_cdc_from_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => wvalid_d1,
      I1 => wvalid,
      I2 => wvalid_cdc_from,
      O => \GEN_ASYNC_WRITE.wvalid_cdc_from_i_1_n_0\
    );
\GEN_ASYNC_WRITE.wvalid_cdc_from_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \GEN_ASYNC_WRITE.wvalid_cdc_from_i_1_n_0\,
      Q => wvalid_cdc_from,
      R => \GEN_ASYNC_WRITE.awvalid_d1_i_1_n_0\
    );
\GEN_ASYNC_WRITE.wvalid_d1_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => wvalid,
      Q => wvalid_d1,
      R => \GEN_ASYNC_WRITE.awvalid_d1_i_1_n_0\
    );
\GEN_ASYNC_WRITE.wvalid_to2_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => wvalid_to,
      Q => wvalid_to2,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A800"
    )
        port map (
      I0 => \^p_2_out\(3),
      I1 => mm2s_scndry_resetn,
      I2 => s2mm_scndry_resetn,
      I3 => \dmacr_i_reg[0]\,
      O => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\
    );
\GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A800"
    )
        port map (
      I0 => \^p_2_out\(7),
      I1 => mm2s_scndry_resetn,
      I2 => s2mm_scndry_resetn,
      I3 => \dmacr_i_reg[0]_0\,
      O => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg_0\
    );
arready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => \arvalid_re__0\,
      Q => \^s_axi_lite_arready\,
      R => p_0_in
    );
arvalid_d1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => arvalid,
      I1 => s_axi_lite_resetn,
      I2 => \^s_axi_lite_rvalid\,
      O => arvalid_d1_i_1_n_0
    );
arvalid_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => arvalid_d1_i_1_n_0,
      Q => arvalid_d1,
      R => '0'
    );
arvalid_re: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => arvalid_d1,
      I1 => \^s_axi_lite_rvalid\,
      I2 => arvalid,
      I3 => read_in_progress,
      O => \arvalid_re__0\
    );
arvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_axi_lite_arvalid,
      Q => arvalid,
      R => p_0_in
    );
awvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_axi_lite_awvalid,
      Q => awvalid,
      R => p_0_in
    );
wvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_lite_aclk,
      CE => '1',
      D => s_axi_lite_wvalid,
      Q => wvalid,
      R => p_0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_mm2s_mngr is
  port (
    mm2s_halted_clr : out STD_LOGIC;
    mm2s_halted_set : out STD_LOGIC;
    mm2s_all_idle : out STD_LOGIC;
    p_7_out : out STD_LOGIC;
    mm2s_stop : out STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : out STD_LOGIC;
    p_2_out : out STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : out STD_LOGIC;
    s_axis_mm2s_updtsts_tvalid : out STD_LOGIC;
    p_16_out : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    queue_rden_new : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \ftch_cs_reg[0]\ : out STD_LOGIC;
    idle_reg : out STD_LOGIC;
    all_is_idle_d1_reg : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    dma_mm2s_error : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 25 downto 0 );
    p_0_in : in STD_LOGIC;
    mm2s_interr_i : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    mm2s_slverr_i : in STD_LOGIC;
    mm2s_decerr_i : in STD_LOGIC;
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_halted_set0 : in STD_LOGIC;
    sts_received_i_reg : in STD_LOGIC;
    mm2s_stop_i : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[64]\ : in STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg\ : in STD_LOGIC;
    packet_in_progress_reg : in STD_LOGIC;
    s_axis_mm2s_cmd_tready : in STD_LOGIC;
    ch1_ftch_queue_empty : in STD_LOGIC;
    p_54_out : in STD_LOGIC;
    mm2s_ns0 : in STD_LOGIC;
    p_60_out : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    m_axis_mm2s_sts_tvalid_int : in STD_LOGIC;
    mm2s_halt : in STD_LOGIC;
    sts_queue_full : in STD_LOGIC;
    idle_reg_0 : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    ptr_queue_full : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[90]\ : in STD_LOGIC_VECTOR ( 26 downto 0 );
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    mm2s_ns12_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_mm2s_mngr : entity is "axi_dma_mm2s_mngr";
end axi_dma_ctrl_axi_dma_mm2s_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_mm2s_mngr is
  signal \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SG_IF_n_5\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM_n_1\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS_n_3\ : STD_LOGIC;
  signal \^mm2s_all_idle\ : STD_LOGIC;
  signal \^p_16_out\ : STD_LOGIC;
  signal p_17_out : STD_LOGIC;
  signal p_3_out : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal p_5_out : STD_LOGIC;
  signal \^p_7_out\ : STD_LOGIC;
  signal \^s_axis_mm2s_cmd_tvalid_split\ : STD_LOGIC;
  signal \^s_axis_mm2s_updtptr_tvalid\ : STD_LOGIC;
begin
  mm2s_all_idle <= \^mm2s_all_idle\;
  p_16_out <= \^p_16_out\;
  p_7_out <= \^p_7_out\;
  s_axis_mm2s_cmd_tvalid_split <= \^s_axis_mm2s_cmd_tvalid_split\;
  s_axis_mm2s_updtptr_tvalid <= \^s_axis_mm2s_updtptr_tvalid\;
\GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SG_IF\: entity work.axi_dma_ctrl_axi_dma_mm2s_sg_if
     port map (
      \FSM_sequential_mm2s_cs_reg[1]\ => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM_n_1\,
      \GEN_MM2S.queue_dout_new_reg[90]\ => \^p_16_out\,
      \GEN_MM2S.queue_dout_new_reg[90]_0\(25 downto 0) => \GEN_MM2S.queue_dout_new_reg[90]\(26 downto 1),
      \GEN_MM2S.queue_dout_valid_reg\ => \GEN_MM2S.queue_dout_valid_reg\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\ => \^s_axis_mm2s_updtptr_tvalid\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]_0\(0) => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\(0),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\ => s_axis_mm2s_updtsts_tvalid,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]_0\(0) => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\(0),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[31]\ => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(3),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(3) => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(4),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(2 downto 0) => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(2 downto 0),
      Q(25 downto 0) => Q(25 downto 0),
      all_is_idle_d1_reg => all_is_idle_d1_reg,
      ch1_ftch_queue_empty => ch1_ftch_queue_empty,
      \ftch_cs_reg[0]\ => \ftch_cs_reg[0]\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axis_mm2s_sts_tvalid_int => m_axis_mm2s_sts_tvalid_int,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_halt => mm2s_halt,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_stop_i => mm2s_stop_i,
      \mm2s_tag_reg[0]\ => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS_n_3\,
      p_0_in => p_0_in,
      p_17_out => p_17_out,
      p_37_out => p_37_out,
      p_3_out => p_3_out,
      p_4_out => p_4_out,
      p_5_out => p_5_out,
      packet_in_progress_reg_0 => packet_in_progress_reg,
      ptr_queue_full => ptr_queue_full,
      queue_rden_new => queue_rden_new,
      sts_queue_full => sts_queue_full,
      sts_received_i_reg => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SG_IF_n_5\,
      sts_received_i_reg_0 => \^p_7_out\
    );
\GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM\: entity work.axi_dma_ctrl_axi_dma_mm2s_sm
     port map (
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      \GEN_MM2S.queue_dout_new_reg[90]\ => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM_n_1\,
      \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ => \^s_axis_mm2s_cmd_tvalid_split\,
      \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ => \^s_axis_mm2s_updtptr_tvalid\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      mm2s_all_idle => \^mm2s_all_idle\,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_ns0 => mm2s_ns0,
      mm2s_ns12_out => mm2s_ns12_out,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_stop_i => mm2s_stop_i,
      p_0_in => p_0_in,
      p_16_out => \^p_16_out\,
      p_17_out => p_17_out,
      p_54_out => p_54_out,
      p_60_out => p_60_out
    );
\GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS\: entity work.axi_dma_ctrl_axi_dma_mm2s_cmdsts_if
     port map (
      E(0) => E(0),
      \GEN_MM2S.queue_dout_new_reg[64]\ => \GEN_MM2S.queue_dout_new_reg[64]\,
      \GEN_MM2S.queue_dout_new_reg[64]_0\(0) => \GEN_MM2S.queue_dout_new_reg[90]\(0),
      dma_mm2s_error => dma_mm2s_error,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axis_mm2s_sts_tvalid_int => m_axis_mm2s_sts_tvalid_int,
      mm2s_decerr_i => mm2s_decerr_i,
      mm2s_interr_i => mm2s_interr_i,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_slverr_i => mm2s_slverr_i,
      p_0_in => p_0_in,
      p_2_out => p_2_out,
      p_37_out => p_37_out,
      p_3_out => p_3_out,
      p_4_out => p_4_out,
      p_5_out => p_5_out,
      p_7_out => \^p_7_out\,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => \^s_axis_mm2s_cmd_tvalid_split\,
      sts_received_i_reg_0 => sts_received_i_reg,
      sts_received_i_reg_1 => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SG_IF_n_5\,
      \updt_desc_reg2_reg[32]\ => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS_n_3\
    );
\GEN_MM2S_DMA_CONTROL.I_MM2S_STS_MNGR\: entity work.axi_dma_ctrl_axi_dma_mm2s_sts_mngr
     port map (
      idle_reg => idle_reg,
      idle_reg_0 => idle_reg_0,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      mm2s_all_idle => \^mm2s_all_idle\,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_halted_clr => mm2s_halted_clr,
      mm2s_halted_set => mm2s_halted_set,
      mm2s_halted_set0 => mm2s_halted_set0,
      p_0_in => p_0_in
    );
\GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => mm2s_stop_i,
      Q => mm2s_stop,
      R => p_0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_reset is
  port (
    \out\ : out STD_LOGIC;
    mm2s_prmry_resetn : out STD_LOGIC;
    dm_mm2s_prmry_resetn : out STD_LOGIC;
    mm2s_prmry_reset_out_n : out STD_LOGIC;
    mm2s_cntrl_reset_out_n : out STD_LOGIC;
    soft_reset_d1 : out STD_LOGIC;
    mm2s_halt : out STD_LOGIC;
    halted_reg : out STD_LOGIC;
    halted_reg_0 : out STD_LOGIC;
    \dmacr_i_reg[0]\ : out STD_LOGIC;
    \dmacr_i_reg[0]_0\ : out STD_LOGIC;
    \GEN_S2MM.reg2_reg[90]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ : out STD_LOGIC;
    \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ : out STD_LOGIC;
    \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_reg_0\ : out STD_LOGIC;
    m_axi_sg_aresetn : out STD_LOGIC;
    dm_m_axi_sg_aresetn : out STD_LOGIC;
    sig_s_h_halt_reg_reg : out STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    mm2s_all_idle : in STD_LOGIC;
    mm2s_halt_cmplt : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_0\ : in STD_LOGIC;
    mm2s_halted_set : in STD_LOGIC;
    mm2s_halted_clr : in STD_LOGIC;
    halted_reg_1 : in STD_LOGIC;
    s2mm_halted_set : in STD_LOGIC;
    s2mm_halted_clr : in STD_LOGIC;
    halted_reg_2 : in STD_LOGIC;
    mm2s_stop : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    \dmacr_i_reg[2]_1\ : in STD_LOGIC;
    s2mm_stop : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    scndry_out : in STD_LOGIC;
    \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ : in STD_LOGIC;
    \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg_0\ : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\ : in STD_LOGIC;
    sig_rst2all_stop_request : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_reset : entity is "axi_dma_reset";
end axi_dma_ctrl_axi_dma_reset;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_reset is
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.REG_HALT_CMPLT_IN_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.REG_RESET_OUT_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.scndry_resetn_i_2_n_0\ : STD_LOGIC;
  signal assert_sftrst_d1 : STD_LOGIC;
  signal halt_cmplt_reg : STD_LOGIC;
  signal min_assert_sftrst : STD_LOGIC;
  signal \^mm2s_halt\ : STD_LOGIC;
  signal \^mm2s_prmry_reset_out_n\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of mm2s_prmry_reset_out_n : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of mm2s_prmry_reset_out_n : signal is "no";
  signal n_0_1261 : STD_LOGIC;
  signal \^out\ : STD_LOGIC;
  attribute RTL_KEEP of \out\ : signal is "true";
  attribute equivalent_register_removal of \out\ : signal is "no";
  signal p_1_out : STD_LOGIC;
  signal resetn_i : STD_LOGIC;
  attribute RTL_KEEP of resetn_i : signal is "true";
  attribute equivalent_register_removal of resetn_i : signal is "no";
  signal s_halt : STD_LOGIC;
  signal s_soft_reset_i : STD_LOGIC;
  signal s_soft_reset_i_d1 : STD_LOGIC;
  signal scndry_resetn_i : STD_LOGIC;
  signal sft_rst_dly1 : STD_LOGIC;
  signal sft_rst_dly10 : STD_LOGIC;
  signal sft_rst_dly11 : STD_LOGIC;
  signal sft_rst_dly12 : STD_LOGIC;
  signal sft_rst_dly13 : STD_LOGIC;
  signal sft_rst_dly14 : STD_LOGIC;
  signal sft_rst_dly15 : STD_LOGIC;
  signal sft_rst_dly16 : STD_LOGIC;
  signal sft_rst_dly2 : STD_LOGIC;
  signal sft_rst_dly3 : STD_LOGIC;
  signal sft_rst_dly4 : STD_LOGIC;
  signal sft_rst_dly5 : STD_LOGIC;
  signal sft_rst_dly6 : STD_LOGIC;
  signal sft_rst_dly7 : STD_LOGIC;
  signal sft_rst_dly8 : STD_LOGIC;
  signal sft_rst_dly9 : STD_LOGIC;
  signal soft_reset_re : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1\ : label is "soft_lutpair182";
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1\ : label is "soft_lutpair183";
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1__0\ : label is "soft_lutpair183";
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.scndry_resetn_i_2\ : label is "soft_lutpair182";
  attribute equivalent_register_removal of \GEN_ASYNC_RESET.scndry_resetn_i_reg\ : label is "no";
  attribute KEEP : string;
  attribute KEEP of \GEN_ASYNC_RESET.scndry_resetn_reg\ : label is "yes";
  attribute equivalent_register_removal of \GEN_ASYNC_RESET.scndry_resetn_reg\ : label is "no";
begin
  mm2s_halt <= \^mm2s_halt\;
  mm2s_prmry_reset_out_n <= \^mm2s_prmry_reset_out_n\;
  \out\ <= \^out\;
\FSM_sequential_mm2s_cs[1]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\,
      O => \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.HALT_PROCESS\: entity work.axi_dma_ctrl_cdc_sync_6
     port map (
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      prmry_in => s_halt,
      scndry_out => p_1_out
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => sft_rst_dly16,
      I1 => min_assert_sftrst,
      I2 => s_soft_reset_i_d1,
      I3 => s_soft_reset_i,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1_n_0\,
      Q => min_assert_sftrst,
      R => '0'
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => soft_reset_re,
      I1 => mm2s_stop,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => soft_reset_re,
      I1 => s2mm_stop,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_reg_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_i_1_n_0\,
      Q => s_halt,
      R => '0'
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly10_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly9,
      Q => sft_rst_dly10,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly11_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly10,
      Q => sft_rst_dly11,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly12_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly11,
      Q => sft_rst_dly12,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly13_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly12,
      Q => sft_rst_dly13,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly14_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly13,
      Q => sft_rst_dly14,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly15_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly14,
      Q => sft_rst_dly15,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly16_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly15,
      Q => sft_rst_dly16,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_soft_reset_i,
      I1 => s_soft_reset_i_d1,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_reg\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => '0',
      Q => sft_rst_dly1,
      S => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly2_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly1,
      Q => sft_rst_dly2,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly3_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly2,
      Q => sft_rst_dly3,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly4_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly3,
      Q => sft_rst_dly4,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly5_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly4,
      Q => sft_rst_dly5,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly6_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly5,
      Q => sft_rst_dly6,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly7_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly6,
      Q => sft_rst_dly7,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly8_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly7,
      Q => sft_rst_dly8,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly9_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => mm2s_all_idle,
      D => sft_rst_dly8,
      Q => sft_rst_dly9,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1_n_0\
    );
\GEN_ASYNC_RESET.REG_HALT_CMPLT_IN\: entity work.axi_dma_ctrl_cdc_sync_7
     port map (
      \GEN_ASYNC_RESET.s_soft_reset_i_reg\ => \GEN_ASYNC_RESET.REG_HALT_CMPLT_IN_n_0\,
      \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg_0\,
      \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      mm2s_all_idle => mm2s_all_idle,
      prmry_in => halt_cmplt_reg,
      s_soft_reset_i => s_soft_reset_i,
      soft_reset => soft_reset
    );
\GEN_ASYNC_RESET.REG_RESET_OUT\: entity work.axi_dma_ctrl_cdc_sync_8
     port map (
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\ => p_1_out,
      \GEN_ASYNC_RESET.halt_i_reg\ => \GEN_ASYNC_RESET.REG_RESET_OUT_n_0\,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      mm2s_halt => \^mm2s_halt\,
      prmry_in => scndry_resetn_i,
      scndry_out => \^mm2s_prmry_reset_out_n\
    );
\GEN_ASYNC_RESET.halt_cmplt_reg_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => mm2s_halt_cmplt,
      Q => halt_cmplt_reg,
      R => '0'
    );
\GEN_ASYNC_RESET.halt_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.REG_RESET_OUT_n_0\,
      Q => \^mm2s_halt\,
      R => '0'
    );
\GEN_ASYNC_RESET.s_soft_reset_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.REG_HALT_CMPLT_IN_n_0\,
      Q => s_soft_reset_i,
      R => '0'
    );
\GEN_ASYNC_RESET.scndry_resetn_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_soft_reset_i,
      I1 => min_assert_sftrst,
      O => \GEN_ASYNC_RESET.scndry_resetn_i_2_n_0\
    );
\GEN_ASYNC_RESET.scndry_resetn_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_i_2_n_0\,
      Q => scndry_resetn_i,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_RESET.scndry_resetn_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_i_2_n_0\,
      Q => \^out\,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_RESET/sig_s_h_halt_reg_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^mm2s_halt\,
      I1 => sig_rst2all_stop_request,
      O => sig_s_h_halt_reg_reg
    );
\GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00F02020"
    )
        port map (
      I0 => assert_sftrst_d1,
      I1 => min_assert_sftrst,
      I2 => scndry_out,
      I3 => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\,
      I4 => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg_0\,
      O => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\
    );
\GEN_S2MM.reg2[90]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => p_0_in,
      I1 => \^out\,
      I2 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      O => \GEN_S2MM.reg2_reg[90]\(0)
    );
assert_sftrst_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => min_assert_sftrst,
      Q => assert_sftrst_d1,
      R => '0'
    );
dm_scndry_resetn_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => scndry_out,
      I1 => min_assert_sftrst,
      I2 => s_soft_reset_i,
      O => resetn_i
    );
\dmacr_i[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000054"
    )
        port map (
      I0 => mm2s_stop,
      I1 => \^out\,
      I2 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I3 => \dmacr_i_reg[2]_0\,
      I4 => \dmacr_i_reg[2]_1\,
      O => \dmacr_i_reg[0]\
    );
\dmacr_i[0]_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000054"
    )
        port map (
      I0 => s2mm_stop,
      I1 => \^out\,
      I2 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I3 => \dmacr_i_reg[2]_0\,
      I4 => \dmacr_i_reg[2]_1\,
      O => \dmacr_i_reg[0]_0\
    );
halted_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F1FFF1F1"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I2 => mm2s_halted_set,
      I3 => mm2s_halted_clr,
      I4 => halted_reg_1,
      O => halted_reg
    );
\halted_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F1FFF1F1"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I2 => s2mm_halted_set,
      I3 => s2mm_halted_clr,
      I4 => halted_reg_2,
      O => halted_reg_0
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mm2s_prmry_reset_out_n\,
      O => mm2s_prmry_resetn
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mm2s_prmry_reset_out_n\,
      O => dm_mm2s_prmry_resetn
    );
i_1261: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\,
      O => n_0_1261
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => mm2s_cntrl_reset_out_n
    );
m_axis_ftch_sts_tready_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      O => m_axi_sg_aresetn
    );
s_soft_reset_i_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_soft_reset_i,
      Q => s_soft_reset_i_d1,
      R => '0'
    );
sig_cmd_stat_rst_user_reg_n_cdc_from_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => resetn_i,
      I1 => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\,
      O => dm_m_axi_sg_aresetn
    );
soft_reset_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => soft_reset,
      Q => soft_reset_d1,
      R => '0'
    );
soft_reset_re_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \dmacr_i_reg[2]\,
      Q => soft_reset_re,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_reset_1 is
  port (
    \out\ : out STD_LOGIC;
    s2mm_prmry_resetn : out STD_LOGIC;
    dm_s2mm_prmry_resetn : out STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : out STD_LOGIC;
    s2mm_prmry_reset_out_n : out STD_LOGIC;
    s2mm_sts_reset_out_n : out STD_LOGIC;
    s2mm_halt : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_MM2S.queue_dout_valid_reg\ : out STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg_0\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ : out STD_LOGIC;
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ : out STD_LOGIC;
    updt_data1 : out STD_LOGIC;
    \counter_reg[6]\ : out STD_LOGIC;
    \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ : out STD_LOGIC;
    sig_s_h_halt_reg_reg : out STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_all_idle : in STD_LOGIC;
    s2mm_halt_cmplt : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    soft_reset_re_reg : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_0\ : in STD_LOGIC;
    queue_rden_new : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    \dmacr_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_stop_i : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    \counter_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_rvalid : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC;
    m_axi_sg_rlast : in STD_LOGIC;
    scndry_out : in STD_LOGIC;
    \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg_0\ : in STD_LOGIC;
    \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_idle_reg\ : in STD_LOGIC;
    sig_s_h_halt_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_reset_1 : entity is "axi_dma_reset";
end axi_dma_ctrl_axi_dma_reset_1;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_reset_1 is
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1__0_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly10_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly11_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly12_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly13_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly14_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly15_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly16_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly2_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly3_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly4_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly5_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly6_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly7_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly8_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly9_reg_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.REG_HALT_CMPLT_IN_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.REG_RESET_OUT_n_0\ : STD_LOGIC;
  signal \GEN_ASYNC_RESET.scndry_resetn_i_1_n_0\ : STD_LOGIC;
  signal \^gen_mm2s.queue_dout_valid_reg_0\ : STD_LOGIC;
  signal assert_sftrst_d1 : STD_LOGIC;
  signal halt_cmplt_reg : STD_LOGIC;
  signal min_assert_sftrst : STD_LOGIC;
  signal n_0_1262 : STD_LOGIC;
  signal \^out\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \out\ : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of \out\ : signal is "no";
  signal p_1_out : STD_LOGIC;
  signal \^s2mm_halt\ : STD_LOGIC;
  signal \^s2mm_prmry_reset_out_n\ : STD_LOGIC;
  attribute RTL_KEEP of s2mm_prmry_reset_out_n : signal is "true";
  attribute equivalent_register_removal of s2mm_prmry_reset_out_n : signal is "no";
  signal s_halt : STD_LOGIC;
  signal s_soft_reset_i : STD_LOGIC;
  signal s_soft_reset_i_d1 : STD_LOGIC;
  signal scndry_resetn_i : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1__0\ : label is "soft_lutpair184";
  attribute SOFT_HLUTNM of \GEN_ASYNC_RESET.scndry_resetn_i_1\ : label is "soft_lutpair184";
  attribute equivalent_register_removal of \GEN_ASYNC_RESET.scndry_resetn_i_reg\ : label is "no";
  attribute KEEP : string;
  attribute KEEP of \GEN_ASYNC_RESET.scndry_resetn_reg\ : label is "yes";
  attribute equivalent_register_removal of \GEN_ASYNC_RESET.scndry_resetn_reg\ : label is "no";
begin
  \GEN_MM2S.queue_dout_valid_reg_0\ <= \^gen_mm2s.queue_dout_valid_reg_0\;
  \out\ <= \^out\;
  s2mm_halt <= \^s2mm_halt\;
  s2mm_prmry_reset_out_n <= \^s2mm_prmry_reset_out_n\;
\FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs[1]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\,
      O => updt_data1
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.HALT_PROCESS\: entity work.axi_dma_ctrl_cdc_sync_3
     port map (
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      prmry_in => s_halt,
      scndry_out => p_1_out
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly16_reg_n_0\,
      I1 => min_assert_sftrst,
      I2 => s_soft_reset_i_d1,
      I3 => s_soft_reset_i,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.min_assert_sftrst_i_1__0_n_0\,
      Q => min_assert_sftrst,
      R => '0'
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => soft_reset_re_reg,
      Q => s_halt,
      R => '0'
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly10_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly9_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly10_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly11_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly10_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly11_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly12_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly11_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly12_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly13_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly12_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly13_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly14_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly13_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly14_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly15_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly14_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly15_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly16_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly15_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly16_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_soft_reset_i,
      I1 => s_soft_reset_i_d1,
      O => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_reg\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => '0',
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_reg_n_0\,
      S => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly2_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly2_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly3_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly2_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly3_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly4_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly3_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly4_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly5_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly4_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly5_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly6_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly5_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly6_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly7_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly6_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly7_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly8_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly7_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly8_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly9_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => s2mm_all_idle,
      D => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly8_reg_n_0\,
      Q => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly9_reg_n_0\,
      R => \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.sft_rst_dly1_i_1__0_n_0\
    );
\GEN_ASYNC_RESET.REG_HALT_CMPLT_IN\: entity work.axi_dma_ctrl_cdc_sync_4
     port map (
      \GEN_ASYNC_RESET.s_soft_reset_i_reg\ => \GEN_ASYNC_RESET.REG_HALT_CMPLT_IN_n_0\,
      \GEN_CH2_UPDATE.ch2_updt_idle_reg\ => \GEN_CH2_UPDATE.ch2_updt_idle_reg\,
      \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\,
      \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg_0\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      prmry_in => halt_cmplt_reg,
      s_soft_reset_i => s_soft_reset_i,
      soft_reset => soft_reset
    );
\GEN_ASYNC_RESET.REG_RESET_OUT\: entity work.axi_dma_ctrl_cdc_sync_5
     port map (
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\ => p_1_out,
      \GEN_ASYNC_RESET.halt_i_reg\ => \GEN_ASYNC_RESET.REG_RESET_OUT_n_0\,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      prmry_in => scndry_resetn_i,
      s2mm_halt => \^s2mm_halt\,
      scndry_out => \^s2mm_prmry_reset_out_n\
    );
\GEN_ASYNC_RESET.halt_cmplt_reg_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => s2mm_halt_cmplt,
      Q => halt_cmplt_reg,
      R => '0'
    );
\GEN_ASYNC_RESET.halt_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.REG_RESET_OUT_n_0\,
      Q => \^s2mm_halt\,
      R => '0'
    );
\GEN_ASYNC_RESET.s_soft_reset_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.REG_HALT_CMPLT_IN_n_0\,
      Q => s_soft_reset_i,
      R => '0'
    );
\GEN_ASYNC_RESET.scndry_resetn_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_soft_reset_i,
      I1 => min_assert_sftrst,
      O => \GEN_ASYNC_RESET.scndry_resetn_i_1_n_0\
    );
\GEN_ASYNC_RESET.scndry_resetn_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_i_1_n_0\,
      Q => scndry_resetn_i,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_ASYNC_RESET.scndry_resetn_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_i_1_n_0\,
      Q => \^out\,
      R => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\
    );
\GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      O => SR(0)
    );
\GEN_MM2S.queue_dout_valid_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^gen_mm2s.queue_dout_valid_reg_0\,
      I1 => queue_rden_new,
      I2 => p_37_out,
      O => \GEN_MM2S.queue_dout_valid_reg\
    );
\GEN_PNTR_FOR_CH1.ch1_sg_idle_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000EEE0"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I2 => p_16_out,
      I3 => \dmacr_i_reg[0]\(0),
      I4 => mm2s_stop_i,
      O => \^gen_mm2s.queue_dout_valid_reg_0\
    );
\GEN_PNTR_FOR_CH2.ch2_sg_idle_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I2 => p_0_in,
      O => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\
    );
\GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0020F020"
    )
        port map (
      I0 => assert_sftrst_d1,
      I1 => min_assert_sftrst,
      I2 => scndry_out,
      I3 => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg_0\,
      I4 => \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\,
      O => \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\
    );
\GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_RESET/sig_s_h_halt_reg_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^s2mm_halt\,
      I1 => sig_s_h_halt_reg,
      O => sig_s_h_halt_reg_reg
    );
\GEN_STALE_DESC_CHECK.ftch_stale_desc_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E0000000"
    )
        port map (
      I0 => \^out\,
      I1 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      I2 => \counter_reg[7]\(0),
      I3 => m_axi_sg_rvalid,
      I4 => D(0),
      I5 => \GEN_CH1_FETCH.ch1_active_i_reg\,
      O => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\
    );
assert_sftrst_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => min_assert_sftrst,
      Q => assert_sftrst_d1,
      R => '0'
    );
\counter[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"888F"
    )
        port map (
      I0 => m_axi_sg_rlast,
      I1 => m_axi_sg_rvalid,
      I2 => \^out\,
      I3 => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      O => \counter_reg[6]\
    );
dm_scndry_resetn_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => scndry_out,
      I1 => min_assert_sftrst,
      I2 => s_soft_reset_i,
      O => sig_cmd_stat_rst_user_reg_n_cdc_from_reg
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^s2mm_prmry_reset_out_n\,
      O => s2mm_prmry_resetn
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^s2mm_prmry_reset_out_n\,
      O => dm_s2mm_prmry_resetn
    );
i_1262: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^out\,
      O => n_0_1262
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => s2mm_sts_reset_out_n
    );
s_soft_reset_i_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s_soft_reset_i,
      Q => s_soft_reset_i_d1,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_s2mm_mngr is
  port (
    s2mm_halted_clr : out STD_LOGIC;
    s2mm_halted_set : out STD_LOGIC;
    p_8_out : out STD_LOGIC;
    s2mm_stop : out STD_LOGIC;
    p_0_in : out STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : out STD_LOGIC;
    m_axis_s2mm_sts_tready : out STD_LOGIC;
    s_axis_s2mm_updtptr_tvalid : out STD_LOGIC;
    s_axis_s2mm_updtsts_tvalid : out STD_LOGIC;
    \GEN_S2MM.queue_dout2_valid_reg\ : out STD_LOGIC;
    queue_rden2_new : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axis_s2mm_updtsts_tdata : out STD_LOGIC_VECTOR ( 5 downto 0 );
    idle_reg : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    dma_s2mm_error : out STD_LOGIC;
    \QUEUE_COUNT.cmnds_queued_shift_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 25 downto 0 );
    updt_data1 : in STD_LOGIC;
    s2mm_interr_i : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_slverr_i : in STD_LOGIC;
    s2mm_decerr_i : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_halted_set0 : in STD_LOGIC;
    s2mm_all_idle : in STD_LOGIC;
    s2mm_stop_i2_out : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[64]\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_valid_reg_0\ : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    p_10_out : in STD_LOGIC;
    ch2_ftch_queue_empty : in STD_LOGIC;
    p_3_out : in STD_LOGIC;
    m_axis_s2mm_sts_tvalid_int : in STD_LOGIC;
    sts2_queue_full : in STD_LOGIC;
    s2mm_halt : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_idle_reg\ : in STD_LOGIC;
    idle_reg_0 : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    ptr2_queue_full : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[90]\ : in STD_LOGIC_VECTOR ( 26 downto 0 );
    p_1_out : in STD_LOGIC;
    \dmacr_i_reg[0]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_s2mm_mngr : entity is "axi_dma_s2mm_mngr";
end axi_dma_ctrl_axi_dma_s2mm_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_s2mm_mngr is
  signal \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF_n_5\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF_n_6\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_5\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_7\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_8\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_9\ : STD_LOGIC;
  signal cmd_wr_mask : STD_LOGIC;
  signal \^out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^p_0_in\ : STD_LOGIC;
  signal p_19_out : STD_LOGIC;
  signal p_3_out_0 : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal p_5_out : STD_LOGIC;
  signal \^p_8_out\ : STD_LOGIC;
  signal \^s_axis_s2mm_cmd_tvalid_split\ : STD_LOGIC;
  signal \^s_axis_s2mm_updtptr_tvalid\ : STD_LOGIC;
  signal sts_received_d1 : STD_LOGIC;
begin
  \out\(1 downto 0) <= \^out\(1 downto 0);
  p_0_in <= \^p_0_in\;
  p_8_out <= \^p_8_out\;
  s_axis_s2mm_cmd_tvalid_split <= \^s_axis_s2mm_cmd_tvalid_split\;
  s_axis_s2mm_updtptr_tvalid <= \^s_axis_s2mm_updtptr_tvalid\;
\GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF\: entity work.axi_dma_ctrl_axi_dma_s2mm_sg_if
     port map (
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_8\,
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_5\,
      \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ => \^s_axis_s2mm_cmd_tvalid_split\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\ => s_axis_s2mm_updtsts_tvalid,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]_0\(0) => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\(0),
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[31]\ => s_axis_s2mm_updtsts_tdata(5),
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\ => \^s_axis_s2mm_updtptr_tvalid\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]_0\(0) => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\(0),
      \GEN_S2MM.queue_dout2_new_reg[90]\(25 downto 0) => \GEN_S2MM.queue_dout2_new_reg[90]\(26 downto 1),
      \GEN_S2MM.queue_dout2_valid_reg\ => \GEN_S2MM.queue_dout2_valid_reg_0\,
      Q(25 downto 0) => Q(25 downto 0),
      \QUEUE_COUNT.cmnds_queued_shift_reg[3]\ => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF_n_5\,
      cmd_wr_mask => cmd_wr_mask,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axis_s2mm_sts_tvalid_int => m_axis_s2mm_sts_tvalid_int,
      \out\(1 downto 0) => \^out\(1 downto 0),
      p_10_out => p_10_out,
      p_19_out => p_19_out,
      p_3_out => p_3_out,
      p_3_out_0 => p_3_out_0,
      p_4_out => p_4_out,
      p_5_out => p_5_out,
      ptr2_queue_full => ptr2_queue_full,
      s2mm_halt => s2mm_halt,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_s2mm_updtsts_tdata(4 downto 0) => s_axis_s2mm_updtsts_tdata(4 downto 0),
      sts2_queue_full => sts2_queue_full,
      sts_received_d1 => sts_received_d1,
      sts_received_i_reg => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF_n_6\,
      sts_received_i_reg_0 => \^p_8_out\,
      sts_received_i_reg_1 => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_7\,
      updt_data1 => updt_data1
    );
\GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM\: entity work.axi_dma_ctrl_axi_dma_s2mm_sm
     port map (
      \GEN_DESC_UPDT_QUEUE.desc_update_done_reg\ => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF_n_5\,
      \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ => \^s_axis_s2mm_cmd_tvalid_split\,
      \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg_0\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_9\,
      \GEN_S2MM.queue_dout2_valid_reg\ => \GEN_S2MM.queue_dout2_valid_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => \^p_0_in\,
      \QUEUE_COUNT.cmnds_queued_shift_reg[0]_0\(0) => \QUEUE_COUNT.cmnds_queued_shift_reg[0]\(0),
      ch2_ftch_queue_empty => ch2_ftch_queue_empty,
      \dmacr_i_reg[0]\ => \dmacr_i_reg[0]\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      \out\(1 downto 0) => \^out\(1 downto 0),
      p_10_out => p_10_out,
      p_19_out => p_19_out,
      p_1_out => p_1_out,
      p_3_out => p_3_out,
      queue_rden2_new => queue_rden2_new,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_stop_i2_out => s2mm_stop_i2_out,
      updt_data1 => updt_data1,
      updt_data_reg => \^s_axis_s2mm_updtptr_tvalid\
    );
\GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS\: entity work.axi_dma_ctrl_axi_dma_s2mm_cmdsts_if
     port map (
      \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_9\,
      \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[1]\ => \^s_axis_s2mm_cmd_tvalid_split\,
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      \GEN_DESC_UPDT_QUEUE.GEN_DESC_UPDT_NO_STSAPP.updt_desc_sts_reg[26]\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_5\,
      \GEN_DESC_UPDT_QUEUE.sts_received_d1_reg\ => \^p_8_out\,
      \GEN_S2MM.queue_dout2_new_reg[64]\ => \GEN_S2MM.queue_dout2_new_reg[64]\,
      \GEN_S2MM.queue_dout2_new_reg[64]_0\(0) => \GEN_S2MM.queue_dout2_new_reg[90]\(0),
      \GEN_SOF_QUEUE_MODE.cmd_wr_mask_reg\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_8\,
      \GEN_SOF_QUEUE_MODE.sof_count_reg[2]\ => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS_n_7\,
      \USE_SINGLE_REG.sig_regfifo_full_reg_reg\ => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF_n_6\,
      cmd_wr_mask => cmd_wr_mask,
      dma_s2mm_error => dma_s2mm_error,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axis_s2mm_sts_tready => m_axis_s2mm_sts_tready,
      m_axis_s2mm_sts_tvalid_int => m_axis_s2mm_sts_tvalid_int,
      p_0_in => \^p_0_in\,
      p_10_out => p_10_out,
      p_3_out_0 => p_3_out_0,
      p_4_out => p_4_out,
      p_5_out => p_5_out,
      s2mm_decerr_i => s2mm_decerr_i,
      s2mm_halt => s2mm_halt,
      s2mm_interr_i => s2mm_interr_i,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_slverr_i => s2mm_slverr_i,
      s2mm_stop_i2_out => s2mm_stop_i2_out,
      sts_received_d1 => sts_received_d1,
      updt_data1 => updt_data1
    );
\GEN_S2MM_DMA_CONTROL.I_S2MM_STS_MNGR\: entity work.axi_dma_ctrl_axi_dma_s2mm_sts_mngr
     port map (
      \GEN_CH2_UPDATE.ch2_updt_idle_reg\ => \GEN_CH2_UPDATE.ch2_updt_idle_reg\,
      idle_reg => idle_reg,
      idle_reg_0 => idle_reg_0,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_halted_clr => s2mm_halted_clr,
      s2mm_halted_set => s2mm_halted_set,
      s2mm_halted_set0 => s2mm_halted_set0,
      updt_data1 => updt_data1
    );
\GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \dmacr_i_reg[2]\,
      Q => \^p_0_in\,
      R => updt_data1
    );
\GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => s2mm_stop_i2_out,
      Q => s2mm_stop,
      R => updt_data1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_cmd_status is
  port (
    s_axis_updt_cmd_tready : out STD_LOGIC;
    sig_stat2wsc_status_ready : out STD_LOGIC;
    updt_done_reg : out STD_LOGIC;
    sig_load_input_cmd : out STD_LOGIC;
    updt_decerr_i : out STD_LOGIC;
    updt_interr_i : out STD_LOGIC;
    updt_slverr_i : out STD_LOGIC;
    sig_init_done_reg : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_init_done_reg_1 : out STD_LOGIC;
    sig_init_done_reg_2 : out STD_LOGIC;
    sig_btt_is_zero : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 27 downto 0 );
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ : in STD_LOGIC;
    sig_addr2wsc_cmd_fifo_empty : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    p_20_out_0 : in STD_LOGIC;
    sig_wsc2stat_status_valid : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    sig_init_done_1 : in STD_LOGIC;
    sig_init_done_2 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \update_address_reg[31]\ : in STD_LOGIC_VECTOR ( 26 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_cmd_status : entity is "axi_sg_cmd_status";
end axi_dma_ctrl_axi_sg_cmd_status;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_cmd_status is
  signal I_CMD_FIFO_n_4 : STD_LOGIC;
  signal sig_init_done_3 : STD_LOGIC;
begin
\GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO\: entity work.\axi_dma_ctrl_axi_sg_fifo__parameterized0\
     port map (
      D(3 downto 0) => D(3 downto 0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4]_0\ => sig_stat2wsc_status_ready,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      p_18_out => p_18_out,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => sig_init_done_3,
      sig_init_reg_reg => I_CMD_FIFO_n_4,
      sig_stream_rst => sig_stream_rst,
      sig_wsc2stat_status_valid => sig_wsc2stat_status_valid,
      updt_decerr_i => updt_decerr_i,
      updt_done_reg => updt_done_reg,
      updt_interr_i => updt_interr_i,
      updt_slverr_i => updt_slverr_i
    );
I_CMD_FIFO: entity work.axi_dma_ctrl_axi_sg_fifo
     port map (
      \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\,
      Q(27 downto 0) => Q(27 downto 0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      p_20_out_0 => p_20_out_0,
      s_axis_updt_cmd_tready => s_axis_updt_cmd_tready,
      sig_addr2wsc_cmd_fifo_empty => sig_addr2wsc_cmd_fifo_empty,
      sig_btt_is_zero => sig_btt_is_zero,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => sig_init_done,
      sig_init_done_0 => sig_init_done_0,
      sig_init_done_1 => sig_init_done_1,
      sig_init_done_2 => sig_init_done_2,
      sig_init_done_3 => sig_init_done_3,
      sig_init_done_reg_0 => sig_init_done_reg,
      sig_init_done_reg_1 => sig_init_done_reg_0,
      sig_init_done_reg_2 => I_CMD_FIFO_n_4,
      sig_init_done_reg_3 => sig_init_done_reg_1,
      sig_init_done_reg_4 => sig_init_done_reg_2,
      sig_load_input_cmd => sig_load_input_cmd,
      sig_stream_rst => sig_stream_rst,
      \update_address_reg[31]\(26 downto 0) => \update_address_reg[31]\(26 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_cmd_status_31 is
  port (
    sig_init_done : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ : out STD_LOGIC;
    sig_init_done_0 : out STD_LOGIC;
    sig_stat2rsc_status_ready : out STD_LOGIC;
    ftch_done_reg : out STD_LOGIC;
    ftch_decerr_i : out STD_LOGIC;
    ftch_slverr_i : out STD_LOGIC;
    sig_load_input_cmd : out STD_LOGIC;
    sig_btt_is_zero : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 26 downto 0 );
    sig_init_reg_reg : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_init_reg_reg_0 : in STD_LOGIC;
    s_axis_ftch_cmd_tvalid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 : in STD_LOGIC;
    sig_cmd_reg_empty : in STD_LOGIC;
    sig_addr2rsc_cmd_fifo_empty : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    sig_rd_sts_okay_reg : in STD_LOGIC;
    sig_rsc2stat_status : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 25 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_cmd_status_31 : entity is "axi_sg_cmd_status";
end axi_dma_ctrl_axi_sg_cmd_status_31;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_cmd_status_31 is
begin
\GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO\: entity work.\axi_dma_ctrl_axi_sg_fifo__parameterized0_32\
     port map (
      \USE_SINGLE_REG.sig_regfifo_full_reg_reg_0\ => sig_stat2rsc_status_ready,
      ftch_decerr_i => ftch_decerr_i,
      ftch_done_reg => ftch_done_reg,
      ftch_slverr_i => ftch_slverr_i,
      m_axi_sg_aclk => m_axi_sg_aclk,
      p_18_out => p_18_out,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      sig_init_done_0 => sig_init_done_0,
      sig_init_reg_reg => sig_init_reg_reg_0,
      sig_rd_sts_okay_reg => sig_rd_sts_okay_reg,
      sig_rsc2stat_status(1 downto 0) => sig_rsc2stat_status(1 downto 0),
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid
    );
I_CMD_FIFO: entity work.axi_dma_ctrl_axi_sg_fifo_33
     port map (
      D(25 downto 0) => D(25 downto 0),
      Q(26 downto 0) => Q(26 downto 0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]_0\ => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      s_axis_ftch_cmd_tvalid => s_axis_ftch_cmd_tvalid,
      sig_addr2rsc_cmd_fifo_empty => sig_addr2rsc_cmd_fifo_empty,
      sig_btt_is_zero => sig_btt_is_zero,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
      sig_init_done => sig_init_done,
      sig_init_reg_reg => sig_init_reg_reg,
      sig_load_input_cmd => sig_load_input_cmd
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_ftch_mngr is
  port (
    p_18_out : out STD_LOGIC;
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    ch2_ftch_active : out STD_LOGIC;
    \GEN_CH1_FETCH.ch1_active_i_reg\ : out STD_LOGIC;
    p_60_out : out STD_LOGIC;
    ch1_use_crntdesc : out STD_LOGIC;
    ch1_sg_idle : out STD_LOGIC;
    ch2_use_crntdesc : out STD_LOGIC;
    s_axis_ftch_cmd_tvalid : out STD_LOGIC;
    sg_ftch_error0 : out STD_LOGIC;
    p_59_out : out STD_LOGIC;
    p_57_out : out STD_LOGIC;
    p_58_out : out STD_LOGIC;
    sg_ftch_error0_0 : out STD_LOGIC;
    p_33_out : out STD_LOGIC;
    p_31_out : out STD_LOGIC;
    p_32_out : out STD_LOGIC;
    \p_7_out__0\ : out STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ : out STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_0\ : out STD_LOGIC;
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \CURRENT_BD_32.current_bd_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\ : out STD_LOGIC;
    \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[29]\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    \ftch_error_addr_reg[29]_0\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    \ftch_error_addr_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[31]_0\ : out STD_LOGIC;
    p_3_out : out STD_LOGIC;
    s2mm_halted_set0 : out STD_LOGIC;
    s2mm_halted_set_reg : out STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_1\ : out STD_LOGIC;
    s2mm_all_idle : out STD_LOGIC;
    p_1_out : out STD_LOGIC;
    \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aresetn : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\ : in STD_LOGIC;
    ftch_decerr_i : in STD_LOGIC;
    ftch_slverr_i : in STD_LOGIC;
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_rvalid : in STD_LOGIC;
    S : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ : in STD_LOGIC;
    ch2_nxtdesc_wren : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    ch1_nxtdesc_wren : in STD_LOGIC;
    ch1_ftch_queue_empty : in STD_LOGIC;
    ch1_ftch_pause : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    packet_in_progress_reg : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    mm2s_stop_i : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : in STD_LOGIC;
    p_5_out : in STD_LOGIC;
    \GEN_S2MM.queue_empty2_new_reg\ : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    ch2_ftch_pause : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \updt_error_addr_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    s_axis_ftch_cmd_tready : in STD_LOGIC;
    dma_mm2s_error : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    s2mm_halt_cmplt : in STD_LOGIC;
    p_28_out : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    cmnds_queued_shift : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    dma_s2mm_error : in STD_LOGIC;
    ftch_stale_desc : in STD_LOGIC;
    \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_ftch_mngr : entity is "axi_sg_ftch_mngr";
end axi_dma_ctrl_axi_sg_ftch_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_ftch_mngr is
  signal \^d\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \^gen_ch1_fetch.ch1_active_i_reg\ : STD_LOGIC;
  signal I_FTCH_CMDSTS_IF_n_6 : STD_LOGIC;
  signal I_FTCH_PNTR_MNGR_n_4 : STD_LOGIC;
  signal I_FTCH_PNTR_MNGR_n_5 : STD_LOGIC;
  signal I_FTCH_SG_n_47 : STD_LOGIC;
  signal ch1_active_set : STD_LOGIC;
  signal \^ch1_sg_idle\ : STD_LOGIC;
  signal \^ch2_ftch_active\ : STD_LOGIC;
  signal ftch_cs : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal ftch_decerr : STD_LOGIC;
  signal ftch_done : STD_LOGIC;
  signal ftch_slverr : STD_LOGIC;
  signal p_29_out : STD_LOGIC;
  signal p_34_out : STD_LOGIC;
  signal p_55_out : STD_LOGIC;
  signal \^p_7_out__0\ : STD_LOGIC;
  signal \^s_axis_ftch_cmd_tvalid\ : STD_LOGIC;
begin
  D(25 downto 0) <= \^d\(25 downto 0);
  \GEN_CH1_FETCH.ch1_active_i_reg\ <= \^gen_ch1_fetch.ch1_active_i_reg\;
  ch1_sg_idle <= \^ch1_sg_idle\;
  ch2_ftch_active <= \^ch2_ftch_active\;
  \p_7_out__0\ <= \^p_7_out__0\;
  s_axis_ftch_cmd_tvalid <= \^s_axis_ftch_cmd_tvalid\;
I_FTCH_CMDSTS_IF: entity work.axi_dma_ctrl_axi_sg_ftch_cmdsts_if
     port map (
      \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\,
      \GEN_CH1_FETCH.ch1_active_i_reg\ => \^gen_ch1_fetch.ch1_active_i_reg\,
      \GEN_CH2_FETCH.ch2_active_i_reg\ => \^ch2_ftch_active\,
      \GEN_S2MM.queue_empty2_new_reg\ => \GEN_S2MM.queue_empty2_new_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ => \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_0\ => \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_0\,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_1\ => \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_1\,
      Q(1 downto 0) => ftch_cs(1 downto 0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\ => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\,
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => I_FTCH_SG_n_47,
      ch1_active_set => ch1_active_set,
      ch1_ftch_pause => ch1_ftch_pause,
      cmnds_queued_shift(0) => cmnds_queued_shift(0),
      dma_mm2s_error => dma_mm2s_error,
      dma_s2mm_error => dma_s2mm_error,
      \dmacr_i_reg[0]\ => I_FTCH_PNTR_MNGR_n_5,
      \dmacr_i_reg[2]\ => \dmacr_i_reg[2]\,
      \dmacr_i_reg[2]_0\ => \dmacr_i_reg[2]_0\,
      \ftch_cs_reg[0]\ => I_FTCH_CMDSTS_IF_n_6,
      ftch_decerr => ftch_decerr,
      ftch_decerr_i => ftch_decerr_i,
      ftch_done => ftch_done,
      ftch_error_reg_0 => \^p_7_out__0\,
      ftch_slverr => ftch_slverr,
      ftch_slverr_i => ftch_slverr_i,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_rresp(0) => m_axi_sg_rresp(0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      \out\(1 downto 0) => \out\(1 downto 0),
      p_0_in => p_0_in,
      p_18_out => p_18_out,
      p_1_out => p_1_out,
      p_28_out => p_28_out,
      p_29_out => p_29_out,
      p_34_out => p_34_out,
      p_3_out => p_3_out,
      p_55_out => p_55_out,
      p_5_out => p_5_out,
      packet_in_progress_reg => packet_in_progress_reg,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_halted_set0 => s2mm_halted_set0,
      s2mm_halted_set_reg => s2mm_halted_set_reg,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_ftch_cmd_tvalid => \^s_axis_ftch_cmd_tvalid\,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      soft_reset => soft_reset
    );
I_FTCH_PNTR_MNGR: entity work.axi_dma_ctrl_axi_sg_ftch_pntr
     port map (
      CO(0) => CO(0),
      D(25 downto 0) => \^d\(25 downto 0),
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      \GEN_CH1_FETCH.ch1_active_i_reg\ => \^gen_ch1_fetch.ch1_active_i_reg\,
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\,
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\ => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25 downto 0) => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25 downto 0),
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25 downto 0) => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(3 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(3 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(3 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(3 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(1 downto 0),
      \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\(0) => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg_0\(0),
      \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\(0) => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg_0\(0),
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\ => I_FTCH_PNTR_MNGR_n_4,
      S(1 downto 0) => S(1 downto 0),
      SR(0) => SR(0),
      ch1_nxtdesc_wren => ch1_nxtdesc_wren,
      ch1_sg_idle => \^ch1_sg_idle\,
      ch1_use_crntdesc => ch1_use_crntdesc,
      ch2_nxtdesc_wren => ch2_nxtdesc_wren,
      ch2_use_crntdesc => ch2_use_crntdesc,
      \ftch_cs_reg[0]\ => I_FTCH_PNTR_MNGR_n_5,
      \ftch_error_addr_reg[29]\(23 downto 0) => \ftch_error_addr_reg[29]\(23 downto 0),
      \ftch_error_addr_reg[29]_0\(23 downto 0) => \ftch_error_addr_reg[29]_0\(23 downto 0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_55_out => p_55_out,
      p_5_out => p_5_out,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_scndry_resetn => s2mm_scndry_resetn
    );
I_FTCH_SG: entity work.axi_dma_ctrl_axi_sg_ftch_sm
     port map (
      \CURRENT_BD_32.current_bd_reg[6]\(0) => \CURRENT_BD_32.current_bd_reg[6]\(0),
      D(25 downto 0) => \^d\(25 downto 0),
      E(0) => E(0),
      \GEN_CH1_FETCH.ch1_active_i_reg_0\ => \^gen_ch1_fetch.ch1_active_i_reg\,
      \GEN_CH1_FETCH.ch1_ftch_decerr_set_reg_0\ => p_57_out,
      \GEN_CH1_FETCH.ch1_ftch_interr_set_i_reg_0\ => p_59_out,
      \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg_0\ => p_58_out,
      \GEN_CH2_FETCH.ch2_ftch_decerr_set_reg_0\ => p_31_out,
      \GEN_CH2_FETCH.ch2_ftch_interr_set_i_reg_0\ => p_33_out,
      \GEN_CH2_FETCH.ch2_ftch_slverr_set_reg_0\ => p_32_out,
      \GEN_MM2S.queue_full_new_reg\ => I_FTCH_CMDSTS_IF_n_6,
      \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\,
      \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\ => \^ch2_ftch_active\,
      \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg_0\ => \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ => I_FTCH_PNTR_MNGR_n_4,
      \GEN_S2MM.queue_empty2_new_reg\ => \GEN_S2MM.queue_empty2_new_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\,
      Q(1 downto 0) => ftch_cs(1 downto 0),
      SR(0) => SR(0),
      ch1_active_set => ch1_active_set,
      ch1_ftch_queue_empty => ch1_ftch_queue_empty,
      ch1_sg_idle => \^ch1_sg_idle\,
      ch2_ftch_pause => ch2_ftch_pause,
      \counter_reg[1]\(0) => Q(0),
      ftch_decerr => ftch_decerr,
      ftch_done => ftch_done,
      \ftch_error_addr_reg[31]_0\(25 downto 0) => \ftch_error_addr_reg[31]\(25 downto 0),
      \ftch_error_addr_reg[31]_1\ => \ftch_error_addr_reg[31]_0\,
      ftch_error_reg => \^p_7_out__0\,
      ftch_slverr => ftch_slverr,
      ftch_stale_desc => ftch_stale_desc,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_stop_i => mm2s_stop_i,
      p_0_in => p_0_in,
      p_16_out => p_16_out,
      p_29_out => p_29_out,
      p_34_out => p_34_out,
      p_55_out => p_55_out,
      p_5_out => p_5_out,
      p_60_out => p_60_out,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_ftch_cmd_tready => s_axis_ftch_cmd_tready,
      s_axis_ftch_cmd_tvalid => \^s_axis_ftch_cmd_tvalid\,
      s_axis_ftch_cmd_tvalid_reg => I_FTCH_SG_n_47,
      sg_ftch_error0 => sg_ftch_error0,
      sg_ftch_error0_0 => sg_ftch_error0_0,
      \updt_error_addr_reg[31]\(25 downto 0) => \updt_error_addr_reg[31]\(25 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_ftch_q_mngr is
  port (
    ch1_nxtdesc_wren : out STD_LOGIC;
    ch2_nxtdesc_wren : out STD_LOGIC;
    ch1_ftch_queue_empty : out STD_LOGIC;
    ch1_ftch_pause : out STD_LOGIC;
    ch2_ftch_queue_empty : out STD_LOGIC;
    ch2_ftch_pause : out STD_LOGIC;
    \updt_desc_reg0_reg[6]\ : out STD_LOGIC;
    p_10_out : out STD_LOGIC;
    ftch_stale_desc : out STD_LOGIC;
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    packet_in_progress_reg : out STD_LOGIC;
    \updt_desc_reg0_reg[31]\ : out STD_LOGIC_VECTOR ( 66 downto 0 );
    \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ : out STD_LOGIC;
    \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ : out STD_LOGIC;
    updt_data_reg : out STD_LOGIC;
    \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ : out STD_LOGIC;
    \updt_desc_reg0_reg[31]_0\ : out STD_LOGIC_VECTOR ( 66 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_CH2_FETCH.ch2_active_i_reg\ : in STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg\ : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_0\ : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    ch2_ftch_active : in STD_LOGIC;
    ch1_use_crntdesc : in STD_LOGIC;
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    ch2_use_crntdesc : in STD_LOGIC;
    \GEN_CH1_FETCH.ch1_active_i_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_ASYNC_RESET.scndry_resetn_reg_1\ : in STD_LOGIC;
    queue_rden_new : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    queue_rden2_new : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    ptr_queue_full : in STD_LOGIC;
    s_axis_mm2s_cmd_tready : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    ptr2_queue_full : in STD_LOGIC;
    s_axis_s2mm_cmd_tready : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    m_axi_sg_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \ftch_cs_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \dmacr_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \dmacr_i_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_ftch_q_mngr : entity is "axi_sg_ftch_q_mngr";
end axi_dma_ctrl_axi_sg_ftch_q_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_ftch_q_mngr is
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^ch1_nxtdesc_wren\ : STD_LOGIC;
  signal \^ch2_nxtdesc_wren\ : STD_LOGIC;
  signal \counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0_n_0\ : STD_LOGIC;
  signal \counter_reg[5]_GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_1_n_0\ : STD_LOGIC;
  signal counter_reg_gate_n_0 : STD_LOGIC;
  signal \counter_reg_n_0_[0]\ : STD_LOGIC;
  signal \counter_reg_n_0_[6]\ : STD_LOGIC;
  signal counter_reg_r_0_n_0 : STD_LOGIC;
  signal counter_reg_r_1_n_0 : STD_LOGIC;
  signal counter_reg_r_n_0 : STD_LOGIC;
  signal lsbnxtdesc_tready : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[10]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[11]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[12]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[13]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[14]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[15]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[16]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[17]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[18]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[19]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[20]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[21]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[22]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[23]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[24]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[25]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[26]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[27]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[28]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[29]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[30]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[31]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[6]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[7]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[8]\ : STD_LOGIC;
  signal \nxtdesc_int_reg_n_0_[9]\ : STD_LOGIC;
  signal p_1_in : STD_LOGIC;
  signal p_3_out : STD_LOGIC_VECTOR ( 59 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \GEN_PNTR_FOR_CH1.ch1_fetch_address_i[30]_i_1\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \GEN_PNTR_FOR_CH1.ch1_fetch_address_i[31]_i_1\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \GEN_PNTR_FOR_CH1.ch1_fetch_address_i[31]_i_2\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \GEN_PNTR_FOR_CH1.ch1_sg_idle_i_3\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \GEN_PNTR_FOR_CH2.ch2_fetch_address_i[30]_i_1\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \GEN_PNTR_FOR_CH2.ch2_fetch_address_i[31]_i_1\ : label is "soft_lutpair109";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_FETCH_QUEUE/counter_reg ";
  attribute srl_name : string;
  attribute srl_name of \counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0\ : label is "U0/\GEN_SG_ENGINE.I_SG_ENGINE/I_SG_FETCH_QUEUE/counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0 ";
begin
  Q(1 downto 0) <= \^q\(1 downto 0);
  ch1_nxtdesc_wren <= \^ch1_nxtdesc_wren\;
  ch2_nxtdesc_wren <= \^ch2_nxtdesc_wren\;
\DMA_REG2.data_concat_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(0),
      Q => p_3_out(32),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(1),
      Q => p_3_out(33),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(2),
      Q => p_3_out(34),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(3),
      Q => p_3_out(35),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(4),
      Q => p_3_out(36),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(5),
      Q => p_3_out(37),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(6),
      Q => p_3_out(38),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(26),
      Q => p_3_out(58),
      R => SR(0)
    );
\DMA_REG2.data_concat_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => \counter_reg_n_0_[6]\,
      D => m_axi_sg_rdata(27),
      Q => p_3_out(59),
      R => SR(0)
    );
\GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH1_FETCH.ch1_active_i_reg\,
      Q => \^ch1_nxtdesc_wren\,
      R => SR(0)
    );
\GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_CH2_FETCH.ch2_active_i_reg\,
      Q => \^ch2_nxtdesc_wren\,
      R => SR(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(4),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[10]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(4)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(5),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[11]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(5)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(6),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[12]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(6)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(7),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[13]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(7)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(8),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[14]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(8)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(9),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[15]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(9)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(10),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[16]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(10)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(11),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[17]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(11)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(12),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[18]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(12)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(13),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[19]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(13)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(14),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[20]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(14)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(15),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[21]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(15)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(16),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[22]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(16)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(17),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[23]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(17)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(18),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[24]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(18)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(19),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[25]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(19)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(20),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[26]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(20)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(21),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[27]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(21)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(22),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[28]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(22)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(23),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[29]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(23)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(24),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[30]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(24)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ch1_nxtdesc_wren\,
      I1 => ch1_use_crntdesc,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[6]\(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[31]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[31]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(25)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(0),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[6]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(0)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(1),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[7]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(1)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(2),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[8]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(2)
    );
\GEN_PNTR_FOR_CH1.ch1_fetch_address_i[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(3),
      I1 => ch1_use_crntdesc,
      I2 => \^ch1_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[9]\,
      O => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(3)
    );
\GEN_PNTR_FOR_CH1.ch1_sg_idle_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ch1_nxtdesc_wren\,
      I1 => CO(0),
      O => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(4),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[10]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(4)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(5),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[11]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(5)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(6),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[12]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(6)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(7),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[13]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(7)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(8),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[14]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(8)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(9),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[15]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(9)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(10),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[16]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(10)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(11),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[17]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(11)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(12),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[18]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(12)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(13),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[19]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(13)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(14),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[20]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(14)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(15),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[21]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(15)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(16),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[22]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(16)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(17),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[23]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(17)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(18),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[24]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(18)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(19),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[25]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(19)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(20),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[26]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(20)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(21),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[27]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(21)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(22),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[28]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(22)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(23),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[29]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(23)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(24),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[30]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(24)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ch2_nxtdesc_wren\,
      I1 => ch2_use_crntdesc,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[6]\(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[31]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[31]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(25)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(0),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[6]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(0)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(1),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[7]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(1)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(2),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[8]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(2)
    );
\GEN_PNTR_FOR_CH2.ch2_fetch_address_i[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(3),
      I1 => ch2_use_crntdesc,
      I2 => \^ch2_nxtdesc_wren\,
      I3 => \nxtdesc_int_reg_n_0_[9]\,
      O => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(3)
    );
\GEN_QUEUE.FTCH_QUEUE_I\: entity work.axi_dma_ctrl_axi_sg_ftch_queue
     port map (
      D(25 downto 0) => D(25 downto 0),
      E(0) => E(0),
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg_1\,
      \GEN_CH1_FETCH.ch1_active_i_reg\(0) => \GEN_CH1_FETCH.ch1_active_i_reg_0\(0),
      \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\,
      \GEN_MM2S.queue_dout_valid_reg_0\ => \GEN_MM2S.queue_dout_valid_reg\,
      \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\,
      \GEN_S2MM.reg2_reg[0]_0\ => ch2_ftch_pause,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0) => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0),
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg_0\,
      \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\,
      Q(2 downto 1) => \^q\(1 downto 0),
      Q(0) => \counter_reg_n_0_[0]\,
      SR(0) => SR(0),
      ch1_ftch_pause => ch1_ftch_pause,
      ch1_ftch_queue_empty => ch1_ftch_queue_empty,
      ch2_ftch_active => ch2_ftch_active,
      ch2_ftch_queue_empty => ch2_ftch_queue_empty,
      \dmacr_i_reg[0]\(0) => \dmacr_i_reg[0]\(0),
      \dmacr_i_reg[4]\(41) => \dmacr_i_reg[4]\(0),
      \dmacr_i_reg[4]\(40 downto 39) => p_3_out(59 downto 58),
      \dmacr_i_reg[4]\(38 downto 0) => p_3_out(38 downto 0),
      \ftch_cs_reg[1]\(0) => \ftch_cs_reg[1]\(0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_0_in => p_0_in,
      p_10_out => p_10_out,
      p_16_out => p_16_out,
      packet_in_progress_reg => packet_in_progress_reg,
      ptr2_queue_full => ptr2_queue_full,
      ptr_queue_full => ptr_queue_full,
      queue_rden2_new => queue_rden2_new,
      queue_rden_new => queue_rden_new,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      s_axis_s2mm_cmd_tready => s_axis_s2mm_cmd_tready,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      updt_data_reg => updt_data_reg,
      \updt_desc_reg0_reg[31]\(66 downto 0) => \updt_desc_reg0_reg[31]\(66 downto 0),
      \updt_desc_reg0_reg[31]_0\(66 downto 0) => \updt_desc_reg0_reg[31]_0\(66 downto 0),
      \updt_desc_reg0_reg[6]\ => \updt_desc_reg0_reg[6]\
    );
\GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      Q => ftch_stale_desc,
      R => '0'
    );
\counter_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => '0',
      Q => \counter_reg_n_0_[0]\,
      S => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
\counter_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => \counter_reg_n_0_[0]\,
      Q => \^q\(0),
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
\counter_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => \^q\(0),
      Q => p_1_in,
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
\counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0\: unisim.vcomponents.SRL16E
     port map (
      A0 => '1',
      A1 => '0',
      A2 => '0',
      A3 => '0',
      CE => m_axi_sg_rvalid,
      CLK => m_axi_sg_aclk,
      D => p_1_in,
      Q => \counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0_n_0\
    );
\counter_reg[5]_GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_1\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => \counter_reg[4]_srl2___GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_0_n_0\,
      Q => \counter_reg[5]_GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_1_n_0\,
      R => '0'
    );
\counter_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => counter_reg_gate_n_0,
      Q => \counter_reg_n_0_[6]\,
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
\counter_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => \counter_reg_n_0_[6]\,
      Q => \^q\(1),
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
counter_reg_gate: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \counter_reg[5]_GEN_SG_ENGINE.I_SG_ENGINE_I_SG_FETCH_QUEUE_counter_reg_r_1_n_0\,
      I1 => counter_reg_r_1_n_0,
      O => counter_reg_gate_n_0
    );
counter_reg_r: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => '1',
      Q => counter_reg_r_n_0,
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
counter_reg_r_0: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => counter_reg_r_n_0,
      Q => counter_reg_r_0_n_0,
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
counter_reg_r_1: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => m_axi_sg_rvalid,
      D => counter_reg_r_0_n_0,
      Q => counter_reg_r_1_n_0,
      R => \GEN_ASYNC_RESET.scndry_resetn_reg_0\
    );
\data_concat_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(0),
      Q => p_3_out(0),
      R => SR(0)
    );
\data_concat_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(10),
      Q => p_3_out(10),
      R => SR(0)
    );
\data_concat_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(11),
      Q => p_3_out(11),
      R => SR(0)
    );
\data_concat_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(12),
      Q => p_3_out(12),
      R => SR(0)
    );
\data_concat_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(13),
      Q => p_3_out(13),
      R => SR(0)
    );
\data_concat_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(14),
      Q => p_3_out(14),
      R => SR(0)
    );
\data_concat_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(15),
      Q => p_3_out(15),
      R => SR(0)
    );
\data_concat_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(16),
      Q => p_3_out(16),
      R => SR(0)
    );
\data_concat_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(17),
      Q => p_3_out(17),
      R => SR(0)
    );
\data_concat_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(18),
      Q => p_3_out(18),
      R => SR(0)
    );
\data_concat_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(19),
      Q => p_3_out(19),
      R => SR(0)
    );
\data_concat_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(1),
      Q => p_3_out(1),
      R => SR(0)
    );
\data_concat_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(20),
      Q => p_3_out(20),
      R => SR(0)
    );
\data_concat_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(21),
      Q => p_3_out(21),
      R => SR(0)
    );
\data_concat_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(22),
      Q => p_3_out(22),
      R => SR(0)
    );
\data_concat_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(23),
      Q => p_3_out(23),
      R => SR(0)
    );
\data_concat_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(24),
      Q => p_3_out(24),
      R => SR(0)
    );
\data_concat_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(25),
      Q => p_3_out(25),
      R => SR(0)
    );
\data_concat_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(26),
      Q => p_3_out(26),
      R => SR(0)
    );
\data_concat_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(27),
      Q => p_3_out(27),
      R => SR(0)
    );
\data_concat_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(28),
      Q => p_3_out(28),
      R => SR(0)
    );
\data_concat_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(29),
      Q => p_3_out(29),
      R => SR(0)
    );
\data_concat_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(2),
      Q => p_3_out(2),
      R => SR(0)
    );
\data_concat_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(30),
      Q => p_3_out(30),
      R => SR(0)
    );
\data_concat_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(31),
      Q => p_3_out(31),
      R => SR(0)
    );
\data_concat_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(3),
      Q => p_3_out(3),
      R => SR(0)
    );
\data_concat_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(4),
      Q => p_3_out(4),
      R => SR(0)
    );
\data_concat_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(5),
      Q => p_3_out(5),
      R => SR(0)
    );
\data_concat_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(6),
      Q => p_3_out(6),
      R => SR(0)
    );
\data_concat_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(7),
      Q => p_3_out(7),
      R => SR(0)
    );
\data_concat_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(8),
      Q => p_3_out(8),
      R => SR(0)
    );
\data_concat_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => p_1_in,
      D => m_axi_sg_rdata(9),
      Q => p_3_out(9),
      R => SR(0)
    );
\nxtdesc_int[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axi_sg_rvalid,
      I1 => \counter_reg_n_0_[0]\,
      O => lsbnxtdesc_tready
    );
\nxtdesc_int_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(10),
      Q => \nxtdesc_int_reg_n_0_[10]\,
      R => SR(0)
    );
\nxtdesc_int_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(11),
      Q => \nxtdesc_int_reg_n_0_[11]\,
      R => SR(0)
    );
\nxtdesc_int_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(12),
      Q => \nxtdesc_int_reg_n_0_[12]\,
      R => SR(0)
    );
\nxtdesc_int_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(13),
      Q => \nxtdesc_int_reg_n_0_[13]\,
      R => SR(0)
    );
\nxtdesc_int_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(14),
      Q => \nxtdesc_int_reg_n_0_[14]\,
      R => SR(0)
    );
\nxtdesc_int_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(15),
      Q => \nxtdesc_int_reg_n_0_[15]\,
      R => SR(0)
    );
\nxtdesc_int_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(16),
      Q => \nxtdesc_int_reg_n_0_[16]\,
      R => SR(0)
    );
\nxtdesc_int_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(17),
      Q => \nxtdesc_int_reg_n_0_[17]\,
      R => SR(0)
    );
\nxtdesc_int_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(18),
      Q => \nxtdesc_int_reg_n_0_[18]\,
      R => SR(0)
    );
\nxtdesc_int_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(19),
      Q => \nxtdesc_int_reg_n_0_[19]\,
      R => SR(0)
    );
\nxtdesc_int_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(20),
      Q => \nxtdesc_int_reg_n_0_[20]\,
      R => SR(0)
    );
\nxtdesc_int_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(21),
      Q => \nxtdesc_int_reg_n_0_[21]\,
      R => SR(0)
    );
\nxtdesc_int_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(22),
      Q => \nxtdesc_int_reg_n_0_[22]\,
      R => SR(0)
    );
\nxtdesc_int_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(23),
      Q => \nxtdesc_int_reg_n_0_[23]\,
      R => SR(0)
    );
\nxtdesc_int_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(24),
      Q => \nxtdesc_int_reg_n_0_[24]\,
      R => SR(0)
    );
\nxtdesc_int_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(25),
      Q => \nxtdesc_int_reg_n_0_[25]\,
      R => SR(0)
    );
\nxtdesc_int_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(26),
      Q => \nxtdesc_int_reg_n_0_[26]\,
      R => SR(0)
    );
\nxtdesc_int_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(27),
      Q => \nxtdesc_int_reg_n_0_[27]\,
      R => SR(0)
    );
\nxtdesc_int_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(28),
      Q => \nxtdesc_int_reg_n_0_[28]\,
      R => SR(0)
    );
\nxtdesc_int_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(29),
      Q => \nxtdesc_int_reg_n_0_[29]\,
      R => SR(0)
    );
\nxtdesc_int_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(30),
      Q => \nxtdesc_int_reg_n_0_[30]\,
      R => SR(0)
    );
\nxtdesc_int_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(31),
      Q => \nxtdesc_int_reg_n_0_[31]\,
      R => SR(0)
    );
\nxtdesc_int_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(6),
      Q => \nxtdesc_int_reg_n_0_[6]\,
      R => SR(0)
    );
\nxtdesc_int_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(7),
      Q => \nxtdesc_int_reg_n_0_[7]\,
      R => SR(0)
    );
\nxtdesc_int_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(8),
      Q => \nxtdesc_int_reg_n_0_[8]\,
      R => SR(0)
    );
\nxtdesc_int_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => lsbnxtdesc_tready,
      D => m_axi_sg_rdata(9),
      Q => \nxtdesc_int_reg_n_0_[9]\,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_updt_mngr is
  port (
    \axi_dma_tstvec[4]\ : out STD_LOGIC;
    \axi_dma_tstvec[5]\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\ : out STD_LOGIC;
    p_38_out : out STD_LOGIC;
    p_54_out : out STD_LOGIC;
    p_28_out : out STD_LOGIC;
    p_20_out_0 : out STD_LOGIC;
    dma_interr_reg : out STD_LOGIC;
    p_49_out : out STD_LOGIC;
    dma_slverr_reg : out STD_LOGIC;
    p_48_out : out STD_LOGIC;
    dma_decerr_reg : out STD_LOGIC;
    p_47_out : out STD_LOGIC;
    sg_interr_reg : out STD_LOGIC;
    sg_interr_reg_0 : out STD_LOGIC;
    sg_slverr_reg : out STD_LOGIC;
    sg_slverr_reg_0 : out STD_LOGIC;
    sg_decerr_reg : out STD_LOGIC;
    sg_decerr_reg_0 : out STD_LOGIC;
    dma_interr_reg_0 : out STD_LOGIC;
    p_23_out : out STD_LOGIC;
    dma_slverr_reg_0 : out STD_LOGIC;
    p_22_out : out STD_LOGIC;
    dma_decerr_reg_0 : out STD_LOGIC;
    p_21_out : out STD_LOGIC;
    sg_interr_reg_1 : out STD_LOGIC;
    sg_interr_reg_2 : out STD_LOGIC;
    sg_slverr_reg_1 : out STD_LOGIC;
    sg_slverr_reg_2 : out STD_LOGIC;
    sg_decerr_reg_1 : out STD_LOGIC;
    sg_decerr_reg_2 : out STD_LOGIC;
    sig_last_mmap_dbeat : out STD_LOGIC;
    sig_last_mmap_dbeat_reg_reg : out STD_LOGIC;
    p_5_out : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \ftch_error_addr_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_error_addr_reg[31]\ : out STD_LOGIC_VECTOR ( 26 downto 0 );
    \ftch_error_addr_reg[31]_0\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    updt_decerr_i : in STD_LOGIC;
    updt_interr_i : in STD_LOGIC;
    updt_slverr_i : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\ : in STD_LOGIC;
    dma_interr_reg_1 : in STD_LOGIC;
    dma_slverr_reg_1 : in STD_LOGIC;
    dma_decerr_reg_1 : in STD_LOGIC;
    p_59_out : in STD_LOGIC;
    sg_interr_reg_3 : in STD_LOGIC;
    p_58_out : in STD_LOGIC;
    sg_slverr_reg_3 : in STD_LOGIC;
    p_57_out : in STD_LOGIC;
    sg_decerr_reg_3 : in STD_LOGIC;
    dma_interr_reg_2 : in STD_LOGIC;
    dma_slverr_reg_2 : in STD_LOGIC;
    dma_decerr_reg_2 : in STD_LOGIC;
    p_33_out : in STD_LOGIC;
    sg_interr_reg_4 : in STD_LOGIC;
    p_32_out : in STD_LOGIC;
    sg_slverr_reg_4 : in STD_LOGIC;
    p_31_out : in STD_LOGIC;
    sg_decerr_reg_4 : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\ : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    \sig_dbeat_cntr_reg[7]\ : in STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    sig_dqual_reg_full_reg : in STD_LOGIC;
    follower_full_s2mm : in STD_LOGIC;
    follower_full_mm2s : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    updt_error_reg : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\ : in STD_LOGIC;
    ftch_error_reg : in STD_LOGIC;
    p_12_out : in STD_LOGIC;
    p_7_out_2 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_irqthresh_wren : in STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ : in STD_LOGIC;
    \dmacr_i_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_irqthresh_wren : in STD_LOGIC;
    \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\ : in STD_LOGIC;
    \p_7_out__0\ : in STD_LOGIC;
    s_axis_updt_cmd_tready : in STD_LOGIC;
    \updt_curdesc_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    p_11_out : in STD_LOGIC;
    p_10_out_1 : in STD_LOGIC;
    p_9_out : in STD_LOGIC;
    p_6_out : in STD_LOGIC;
    p_5_out_3 : in STD_LOGIC;
    p_4_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_updt_mngr : entity is "axi_sg_updt_mngr";
end axi_dma_ctrl_axi_sg_updt_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_updt_mngr is
  signal I_UPDT_SG_n_35 : STD_LOGIC;
  signal p_18_out : STD_LOGIC;
  signal \^p_20_out_0\ : STD_LOGIC;
  signal p_27_out : STD_LOGIC;
  signal \^p_5_out\ : STD_LOGIC;
  signal updt_decerr : STD_LOGIC;
  signal updt_done : STD_LOGIC;
  signal updt_interr : STD_LOGIC;
  signal updt_slverr : STD_LOGIC;
begin
  p_20_out_0 <= \^p_20_out_0\;
  p_5_out <= \^p_5_out\;
I_UPDT_CMDSTS_IF: entity work.axi_dma_ctrl_axi_sg_updt_cmdsts_if
     port map (
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\ => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\,
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => I_UPDT_SG_n_35,
      m_axi_sg_aclk => m_axi_sg_aclk,
      p_12_out => p_12_out,
      p_18_out => p_18_out,
      p_20_out_0 => \^p_20_out_0\,
      p_27_out => p_27_out,
      p_7_out_2 => p_7_out_2,
      updt_decerr => updt_decerr,
      updt_decerr_i => updt_decerr_i,
      updt_done => updt_done,
      updt_error_reg_0 => \^p_5_out\,
      updt_interr => updt_interr,
      updt_interr_i => updt_interr_i,
      updt_slverr => updt_slverr,
      updt_slverr_i => updt_slverr_i
    );
I_UPDT_SG: entity work.axi_dma_ctrl_axi_sg_updt_sm
     port map (
      E(0) => E(0),
      \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\ => \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\,
      \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg_0\ => p_47_out,
      \GEN_CH1_UPDATE.ch1_dma_interr_set_reg_0\ => p_49_out,
      \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg_0\ => p_48_out,
      \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg_0\ => p_21_out,
      \GEN_CH2_UPDATE.ch2_dma_interr_set_reg_0\ => p_23_out,
      \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg_0\ => p_22_out,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\,
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(0) => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(0) => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(0),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\ => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.updt_active_d1_reg\ => p_38_out,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\ => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\ => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\,
      Q(0) => Q(0),
      SR(0) => SR(0),
      \axi_dma_tstvec[4]\ => \axi_dma_tstvec[4]\,
      \axi_dma_tstvec[5]\ => \axi_dma_tstvec[5]\,
      dma_decerr_reg => dma_decerr_reg,
      dma_decerr_reg_0 => dma_decerr_reg_0,
      dma_decerr_reg_1 => dma_decerr_reg_1,
      dma_decerr_reg_2 => dma_decerr_reg_2,
      dma_interr_reg => dma_interr_reg,
      dma_interr_reg_0 => dma_interr_reg_0,
      dma_interr_reg_1 => dma_interr_reg_1,
      dma_interr_reg_2 => dma_interr_reg_2,
      dma_slverr_reg => dma_slverr_reg,
      dma_slverr_reg_0 => dma_slverr_reg_0,
      dma_slverr_reg_1 => dma_slverr_reg_1,
      dma_slverr_reg_2 => dma_slverr_reg_2,
      \dmacr_i_reg[13]\(0) => \dmacr_i_reg[13]\(0),
      follower_full_mm2s => follower_full_mm2s,
      follower_full_s2mm => follower_full_s2mm,
      \ftch_error_addr_reg[31]\(0) => \ftch_error_addr_reg[31]\(0),
      \ftch_error_addr_reg[31]_0\(25 downto 0) => \ftch_error_addr_reg[31]_0\(25 downto 0),
      ftch_error_reg => ftch_error_reg,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_wready => m_axi_sg_wready,
      mm2s_irqthresh_wren => mm2s_irqthresh_wren,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_10_out_1 => p_10_out_1,
      p_11_out => p_11_out,
      p_18_out => p_18_out,
      p_20_out_0 => \^p_20_out_0\,
      p_27_out => p_27_out,
      p_28_out => p_28_out,
      p_31_out => p_31_out,
      p_32_out => p_32_out,
      p_33_out => p_33_out,
      p_4_out => p_4_out,
      p_54_out => p_54_out,
      p_57_out => p_57_out,
      p_58_out => p_58_out,
      p_59_out => p_59_out,
      p_5_out_3 => p_5_out_3,
      p_6_out => p_6_out,
      \p_7_out__0\ => \p_7_out__0\,
      p_9_out => p_9_out,
      s2mm_irqthresh_wren => s2mm_irqthresh_wren,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_updt_cmd_tready => s_axis_updt_cmd_tready,
      s_axis_updt_cmd_tvalid_reg => I_UPDT_SG_n_35,
      sg_decerr_reg => sg_decerr_reg,
      sg_decerr_reg_0 => sg_decerr_reg_0,
      sg_decerr_reg_1 => sg_decerr_reg_1,
      sg_decerr_reg_2 => sg_decerr_reg_2,
      sg_decerr_reg_3 => sg_decerr_reg_3,
      sg_decerr_reg_4 => sg_decerr_reg_4,
      sg_interr_reg => sg_interr_reg,
      sg_interr_reg_0 => sg_interr_reg_0,
      sg_interr_reg_1 => sg_interr_reg_1,
      sg_interr_reg_2 => sg_interr_reg_2,
      sg_interr_reg_3 => sg_interr_reg_3,
      sg_interr_reg_4 => sg_interr_reg_4,
      sg_slverr_reg => sg_slverr_reg,
      sg_slverr_reg_0 => sg_slverr_reg_0,
      sg_slverr_reg_1 => sg_slverr_reg_1,
      sg_slverr_reg_2 => sg_slverr_reg_2,
      sg_slverr_reg_3 => sg_slverr_reg_3,
      sg_slverr_reg_4 => sg_slverr_reg_4,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      \sig_dbeat_cntr_reg[7]\ => \sig_dbeat_cntr_reg[7]\,
      sig_dqual_reg_full_reg => sig_dqual_reg_full_reg,
      sig_last_mmap_dbeat => sig_last_mmap_dbeat,
      sig_last_mmap_dbeat_reg_reg => sig_last_mmap_dbeat_reg_reg,
      \updt_curdesc_reg[31]\(25 downto 0) => \updt_curdesc_reg[31]\(25 downto 0),
      updt_decerr => updt_decerr,
      updt_done => updt_done,
      \updt_error_addr_reg[31]_0\(26 downto 0) => \updt_error_addr_reg[31]\(26 downto 0),
      updt_error_reg => \^p_5_out\,
      updt_error_reg_0 => updt_error_reg,
      updt_interr => updt_interr,
      updt_slverr => updt_slverr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_updt_q_mngr is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    sts2_queue_full : out STD_LOGIC;
    follower_full_s2mm : out STD_LOGIC;
    sts_queue_full : out STD_LOGIC;
    follower_full_mm2s : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg\ : out STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg\ : out STD_LOGIC;
    p_12_out : out STD_LOGIC;
    p_11_out : out STD_LOGIC;
    p_10_out_1 : out STD_LOGIC;
    p_9_out : out STD_LOGIC;
    p_7_out_2 : out STD_LOGIC;
    p_6_out : out STD_LOGIC;
    p_5_out_3 : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \pntr_cs_reg[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_UPDATE.ch1_active_i_reg\ : out STD_LOGIC;
    \updt_cs_reg[0]\ : out STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg\ : out STD_LOGIC;
    \updt_cs_reg[0]_0\ : out STD_LOGIC;
    m_axi_sg_wdata : out STD_LOGIC_VECTOR ( 5 downto 0 );
    \update_address_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg_0\ : in STD_LOGIC;
    p_38_out : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\ : in STD_LOGIC;
    p_49_out : in STD_LOGIC;
    p_48_out : in STD_LOGIC;
    p_47_out : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\ : in STD_LOGIC;
    p_23_out : in STD_LOGIC;
    p_22_out : in STD_LOGIC;
    p_21_out : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg\ : in STD_LOGIC;
    \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg\ : in STD_LOGIC;
    p_5_out : in STD_LOGIC;
    \p_7_out__0\ : in STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    s_axis_mm2s_updtsts_tvalid : in STD_LOGIC;
    s_axis_s2mm_updtsts_tvalid : in STD_LOGIC;
    \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg0_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    updt_data_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg0_reg[31]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_UPDT_QUEUE.updt_sts_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_s2mm_updtsts_tdata : in STD_LOGIC_VECTOR ( 5 downto 0 );
    updt_sts_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg2_reg[32]\ : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_updt_q_mngr : entity is "axi_sg_updt_q_mngr";
end axi_dma_ctrl_axi_sg_updt_q_mngr;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_updt_q_mngr is
begin
\GEN_QUEUE.I_UPDT_DESC_QUEUE\: entity work.axi_dma_ctrl_axi_sg_updt_queue
     port map (
      E(0) => E(0),
      \GEN_CH1_UPDATE.ch1_active_i_reg\ => \GEN_CH1_UPDATE.ch1_active_i_reg\,
      \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\ => \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\,
      \GEN_CH2_UPDATE.ch2_active_i_reg\ => \GEN_CH2_UPDATE.ch2_active_i_reg\,
      \GEN_CH2_UPDATE.ch2_active_i_reg_0\ => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\ => \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\,
      \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0) => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg_0\ => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg_0\ => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg_0\ => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg_0\ => \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg\,
      \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0) => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0),
      Q(0) => Q(0),
      SR(0) => SR(0),
      follower_full_mm2s => follower_full_mm2s,
      follower_full_s2mm => follower_full_s2mm,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_wdata(5 downto 0) => m_axi_sg_wdata(5 downto 0),
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_10_out_1 => p_10_out_1,
      p_11_out => p_11_out,
      p_12_out => p_12_out,
      p_21_out => p_21_out,
      p_22_out => p_22_out,
      p_23_out => p_23_out,
      p_38_out => p_38_out,
      p_47_out => p_47_out,
      p_48_out => p_48_out,
      p_49_out => p_49_out,
      p_4_out => p_4_out,
      p_5_out => p_5_out,
      p_5_out_3 => p_5_out_3,
      p_6_out => p_6_out,
      p_7_out_2 => p_7_out_2,
      \p_7_out__0\ => \p_7_out__0\,
      p_9_out => p_9_out,
      \pntr_cs_reg[1]_0\(0) => \pntr_cs_reg[1]\(0),
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      s_axis_mm2s_updtsts_tvalid => s_axis_mm2s_updtsts_tvalid,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      s_axis_s2mm_updtsts_tdata(5 downto 0) => s_axis_s2mm_updtsts_tdata(5 downto 0),
      s_axis_s2mm_updtsts_tvalid => s_axis_s2mm_updtsts_tvalid,
      sts2_queue_full => sts2_queue_full,
      sts_queue_full => sts_queue_full,
      \update_address_reg[31]\(25 downto 0) => \update_address_reg[31]\(25 downto 0),
      \updt_cs_reg[0]\ => \updt_cs_reg[0]\,
      \updt_cs_reg[0]_0\ => \updt_cs_reg[0]_0\,
      updt_data_reg(0) => updt_data_reg(0),
      \updt_desc_reg0_reg[31]\(25 downto 0) => \updt_desc_reg0_reg[31]\(25 downto 0),
      \updt_desc_reg0_reg[31]_0\(25 downto 0) => \updt_desc_reg0_reg[31]_0\(25 downto 0),
      \updt_desc_reg2_reg[32]\(4 downto 0) => \updt_desc_reg2_reg[32]\(4 downto 0),
      updt_sts_reg(0) => updt_sts_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_srl_fifo_rbu_f is
  port (
    m_axi_sg_bready : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_srl_fifo_rbu_f : entity is "srl_fifo_rbu_f";
end axi_dma_ctrl_srl_fifo_rbu_f;

architecture STRUCTURE of axi_dma_ctrl_srl_fifo_rbu_f is
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal FIFO_Full_reg_n_0 : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
begin
CNTR_INCR_DECR_ADDN_F_I: entity work.axi_dma_ctrl_cntr_incr_decr_addn_f_29
     port map (
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \INFERRED_GEN.cnt_i_reg[2]_0\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(2) => Q(0),
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      fifo_full_p1 => fifo_full_p1,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_stream_rst => sig_stream_rst
    );
DYNSHREG_F_I: entity work.axi_dma_ctrl_dynshreg_f
     port map (
      D(1 downto 0) => D(1 downto 0),
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0) => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\,
      addr(0) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      addr(1) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      \out\(0) => \out\(0),
      sig_inhibit_rdy_n => sig_inhibit_rdy_n
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => FIFO_Full_reg_n_0,
      R => sig_stream_rst
    );
m_axi_sg_bready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sig_inhibit_rdy_n,
      I1 => FIFO_Full_reg_n_0,
      O => m_axi_sg_bready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized0\ is
  port (
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_push_coelsc_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_push_to_wsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \INFERRED_GEN.cnt_i_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized0\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized0\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal \^inferred_gen.cnt_i_reg[0]\ : STD_LOGIC;
  signal \^inferred_gen.cnt_i_reg[0]_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal addr_i_p1 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal fifo_full_p1 : STD_LOGIC;
begin
  \INFERRED_GEN.cnt_i_reg[0]\ <= \^inferred_gen.cnt_i_reg[0]\;
  \INFERRED_GEN.cnt_i_reg[0]_0\ <= \^inferred_gen.cnt_i_reg[0]_0\;
  Q(0) <= \^q\(0);
CNTR_INCR_DECR_ADDN_F_I: entity work.axi_dma_ctrl_cntr_incr_decr_addn_f_30
     port map (
      D(0) => addr_i_p1(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \^inferred_gen.cnt_i_reg[0]_0\,
      \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      Q(2) => \^q\(0),
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      fifo_full_p1 => fifo_full_p1,
      m_axi_sg_aclk => m_axi_sg_aclk,
      sig_stream_rst => sig_stream_rst
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized0\
     port map (
      D(0) => addr_i_p1(0),
      FIFO_Full_reg => \^inferred_gen.cnt_i_reg[0]\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(2 downto 0) => D(2 downto 0),
      \INFERRED_GEN.cnt_i_reg[0]\ => \^inferred_gen.cnt_i_reg[0]_0\,
      \INFERRED_GEN.cnt_i_reg[0]_0\(0) => \INFERRED_GEN.cnt_i_reg[0]_1\(0),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(2) => \^q\(0),
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      \in\(2 downto 0) => \in\(2 downto 0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      \out\(1 downto 0) => \out\(1 downto 0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => sig_inhibit_rdy_n_reg,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_tlast_err_stop => sig_tlast_err_stop
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => \^inferred_gen.cnt_i_reg[0]\,
      R => sig_stream_rst
    );
sig_push_to_wsc_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => sig_inhibit_rdy_n_reg,
      I1 => \^inferred_gen.cnt_i_reg[0]\,
      I2 => sig_push_to_wsc,
      O => sig_push_to_wsc_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1\ is
  port (
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    sig_posted_to_axi_2_reg : out STD_LOGIC;
    sel : out STD_LOGIC;
    sig_addr_reg_empty_reg : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    sig_halt_reg : in STD_LOGIC;
    sig_addr_reg_empty_reg_0 : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal FIFO_Full_reg_n_0 : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
  signal \^sel\ : STD_LOGIC;
begin
  sel <= \^sel\;
CNTR_INCR_DECR_ADDN_F_I: entity work.axi_dma_ctrl_cntr_incr_decr_addn_f_10
     port map (
      FIFO_Full_reg => \^sel\,
      FIFO_Full_reg_0 => FIFO_Full_reg_n_0,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      SR(0) => SR(0),
      fifo_full_p1 => fifo_full_p1,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      sig_addr_reg_empty_reg => sig_addr_reg_empty_reg,
      sig_addr_reg_empty_reg_0 => sig_addr_reg_empty_reg_0,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_reg => sig_halt_reg_reg,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_2_reg => sig_posted_to_axi_2_reg
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized1\
     port map (
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(39 downto 0) => \out\(39 downto 0),
      sig_addr_valid_reg_reg => sig_addr_valid_reg_reg,
      sig_calc_error_reg_reg => \^sel\,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => FIFO_Full_reg_n_0,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1_20\ is
  port (
    FIFO_Full_reg_0 : out STD_LOGIC;
    sig_push_addr_reg1_out : out STD_LOGIC;
    sig_posted_to_axi_reg : out STD_LOGIC;
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_data2addr_stop_req : in STD_LOGIC;
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1_20\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1_20\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized1_20\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal FIFO_Full_reg_n_0 : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
begin
CNTR_INCR_DECR_ADDN_F_I: entity work.axi_dma_ctrl_cntr_incr_decr_addn_f_21
     port map (
      FIFO_Full_reg => FIFO_Full_reg_0,
      FIFO_Full_reg_0 => FIFO_Full_reg_n_0,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      SR(0) => SR(0),
      fifo_full_p1 => fifo_full_p1,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      sig_addr_reg_empty_reg => sig_addr_reg_empty_reg,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_reg => sig_posted_to_axi_reg,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized1_22\
     port map (
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      \out\(39 downto 0) => \out\(39 downto 0),
      sig_addr_valid_reg_reg => sig_addr_valid_reg_reg,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => FIFO_Full_reg_n_0,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized2\ is
  port (
    sig_first_dbeat_reg : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    FIFO_Full_reg_0 : out STD_LOGIC;
    sig_next_eof_reg_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 7 downto 0 );
    sig_ld_new_cmd_reg_reg : out STD_LOGIC;
    sig_last_dbeat_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC;
    \sig_good_mmap_dbeat10_out__0\ : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_dqual_reg_full : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    sig_next_calc_error_reg : in STD_LOGIC;
    \sig_dbeat_cntr_eq_1__3\ : in STD_LOGIC;
    \sig_dbeat_cntr_reg[3]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_ld_new_cmd_reg : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized2\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized2\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized2\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_4 : STD_LOGIC;
  signal FIFO_Full_reg_n_0 : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
  signal sig_cmd_fifo_data_out : STD_LOGIC_VECTOR ( 10 downto 7 );
  signal \^sig_dqual_reg_empty_reg\ : STD_LOGIC;
begin
  sig_dqual_reg_empty_reg <= \^sig_dqual_reg_empty_reg\;
CNTR_INCR_DECR_ADDN_F_I: entity work.axi_dma_ctrl_cntr_incr_decr_addn_f_15
     port map (
      D(6 downto 0) => D(7 downto 1),
      E(0) => E(0),
      FIFO_Full_reg => FIFO_Full_reg_0,
      FIFO_Full_reg_0 => FIFO_Full_reg_n_0,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_4,
      SR(0) => SR(0),
      fifo_full_p1 => fifo_full_p1,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      \out\(3 downto 0) => sig_cmd_fifo_data_out(10 downto 7),
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr_reg[2]\,
      \sig_dbeat_cntr_reg[3]\ => \sig_dbeat_cntr_reg[3]\,
      \sig_dbeat_cntr_reg[7]\(7 downto 0) => Q(7 downto 0),
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => \^sig_dqual_reg_empty_reg\,
      sig_dqual_reg_full => sig_dqual_reg_full,
      \sig_good_mmap_dbeat10_out__0\ => \sig_good_mmap_dbeat10_out__0\,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_ld_new_cmd_reg => sig_ld_new_cmd_reg,
      sig_ld_new_cmd_reg_reg => sig_ld_new_cmd_reg_reg,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_next_eof_reg_reg(0) => sig_next_eof_reg_reg(0),
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized2\
     port map (
      D(0) => D(0),
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      \INFERRED_GEN.cnt_i_reg[1]\(1) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      \INFERRED_GEN.cnt_i_reg[1]\(0) => CNTR_INCR_DECR_ADDN_F_I_n_4,
      Q(0) => Q(0),
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => \^sig_dqual_reg_empty_reg\,
      \in\(10 downto 0) => \in\(10 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      \out\(15 downto 5) => \out\(11 downto 1),
      \out\(4 downto 1) => sig_cmd_fifo_data_out(10 downto 7),
      \out\(0) => \out\(0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_eq_1__3\ => \sig_dbeat_cntr_eq_1__3\,
      \sig_dbeat_cntr_reg[4]\ => \sig_dbeat_cntr_reg[4]\,
      sig_first_dbeat_reg => sig_first_dbeat_reg,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_0,
      \sig_good_mmap_dbeat10_out__0\ => \sig_good_mmap_dbeat10_out__0\,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_last_dbeat_reg => sig_last_dbeat_reg,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_0,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => FIFO_Full_reg_n_0,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized3\ is
  port (
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC;
    m_axi_s2mm_bready : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \out\ : in STD_LOGIC;
    sig_data2wsc_calc_err_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_halt_reg_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    m_axi_s2mm_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_0\ : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized3\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized3\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized3\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_1 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal FIFO_Full_reg_n_0 : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
  signal sig_wr_fifo : STD_LOGIC;
begin
CNTR_INCR_DECR_ADDN_F_I: entity work.\axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0\
     port map (
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      \INFERRED_GEN.cnt_i_reg[3]_0\ => \INFERRED_GEN.cnt_i_reg[3]\,
      \INFERRED_GEN.cnt_i_reg[3]_1\ => \INFERRED_GEN.cnt_i_reg[3]_0\,
      Q(3) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(2) => CNTR_INCR_DECR_ADDN_F_I_n_1,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      SR(0) => SR(0),
      fifo_full_p1 => fifo_full_p1,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_wr_fifo => sig_wr_fifo
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized3\
     port map (
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0) => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0),
      addr(0) => CNTR_INCR_DECR_ADDN_F_I_n_1,
      addr(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      addr(2) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      sig_data2wsc_calc_err_reg(0) => sig_data2wsc_calc_err_reg(0),
      sig_wr_fifo => sig_wr_fifo
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => FIFO_Full_reg_n_0,
      R => SR(0)
    );
m_axi_s2mm_bready_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => sig_halt_reg_reg,
      I1 => FIFO_Full_reg_n_0,
      I2 => sig_inhibit_rdy_n,
      O => m_axi_s2mm_bready
    );
\sig_addr_posted_cntr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"99999999E6669999"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(2),
      I3 => Q(3),
      I4 => \out\,
      I5 => sig_wr_fifo,
      O => D(0)
    );
\sig_addr_posted_cntr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FB44FF00FF0044BB"
    )
        port map (
      I0 => sig_wr_fifo,
      I1 => \out\,
      I2 => Q(3),
      I3 => Q(2),
      I4 => Q(0),
      I5 => Q(1),
      O => D(1)
    );
\sig_addr_posted_cntr[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4666666666666662"
    )
        port map (
      I0 => \out\,
      I1 => sig_wr_fifo,
      I2 => Q(0),
      I3 => Q(1),
      I4 => Q(3),
      I5 => Q(2),
      O => E(0)
    );
\sig_addr_posted_cntr[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFF44000000B"
    )
        port map (
      I0 => sig_wr_fifo,
      I1 => \out\,
      I2 => Q(1),
      I3 => Q(0),
      I4 => Q(2),
      I5 => Q(3),
      O => D(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized4\ is
  port (
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \sig_wdc_statcnt_reg[2]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_push_coelsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[1]\ : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized4\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized4\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized4\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_4 : STD_LOGIC;
  signal \^inferred_gen.cnt_i_reg[0]\ : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
  signal sig_rd_empty : STD_LOGIC;
  signal \^sig_wdc_statcnt_reg[2]\ : STD_LOGIC;
  signal sig_wr_fifo : STD_LOGIC;
begin
  \INFERRED_GEN.cnt_i_reg[0]\ <= \^inferred_gen.cnt_i_reg[0]\;
  \sig_wdc_statcnt_reg[2]\ <= \^sig_wdc_statcnt_reg[2]\;
CNTR_INCR_DECR_ADDN_F_I: entity work.\axi_dma_ctrl_cntr_incr_decr_addn_f__parameterized0_9\
     port map (
      FIFO_Full_reg => \^inferred_gen.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[1]_0\ => \INFERRED_GEN.cnt_i_reg[1]\,
      \INFERRED_GEN.cnt_i_reg[3]_0\ => \^sig_wdc_statcnt_reg[2]\,
      \INFERRED_GEN.cnt_i_reg[3]_1\(0) => \INFERRED_GEN.cnt_i_reg[3]\(0),
      Q(3) => sig_rd_empty,
      Q(2) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_4,
      SR(0) => SR(0),
      fifo_full_p1 => fifo_full_p1,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => sig_inhibit_rdy_n_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_tlast_err_stop => sig_tlast_err_stop,
      sig_wr_fifo => sig_wr_fifo
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized4\
     port map (
      D(2 downto 0) => D(2 downto 0),
      E(0) => E(0),
      FIFO_Full_reg => \^inferred_gen.cnt_i_reg[0]\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0) => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \INFERRED_GEN.cnt_i_reg[3]\(3) => sig_rd_empty,
      \INFERRED_GEN.cnt_i_reg[3]\(2) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      \INFERRED_GEN.cnt_i_reg[3]\(1) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      \INFERRED_GEN.cnt_i_reg[3]\(0) => CNTR_INCR_DECR_ADDN_F_I_n_4,
      \INFERRED_GEN.cnt_i_reg[3]_0\(0) => \INFERRED_GEN.cnt_i_reg[3]\(0),
      Q(3 downto 0) => Q(3 downto 0),
      \in\(3 downto 0) => \in\(3 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(2 downto 0) => \out\(2 downto 0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => sig_inhibit_rdy_n_reg,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_tlast_err_stop => sig_tlast_err_stop,
      \sig_wdc_statcnt_reg[2]\ => \^sig_wdc_statcnt_reg[2]\,
      sig_wr_fifo => sig_wr_fifo
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => \^inferred_gen.cnt_i_reg[0]\,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_rbu_f__parameterized5\ is
  port (
    sig_last_dbeat_reg : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    sig_first_dbeat_reg : out STD_LOGIC;
    sel : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_s_ready_out_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \sig_dbeat_cntr_reg[2]_0\ : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    sm_set_error_reg : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized5\ : entity is "srl_fifo_rbu_f";
end \axi_dma_ctrl_srl_fifo_rbu_f__parameterized5\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_rbu_f__parameterized5\ is
  signal CNTR_INCR_DECR_ADDN_F_I_n_2 : STD_LOGIC;
  signal CNTR_INCR_DECR_ADDN_F_I_n_3 : STD_LOGIC;
  signal FIFO_Full_reg_n_0 : STD_LOGIC;
  signal fifo_full_p1 : STD_LOGIC;
  signal \^sel\ : STD_LOGIC;
  signal \^sig_dqual_reg_empty_reg\ : STD_LOGIC;
begin
  sel <= \^sel\;
  sig_dqual_reg_empty_reg <= \^sig_dqual_reg_empty_reg\;
CNTR_INCR_DECR_ADDN_F_I: entity work.axi_dma_ctrl_cntr_incr_decr_addn_f
     port map (
      FIFO_Full_reg => \^sel\,
      FIFO_Full_reg_0 => FIFO_Full_reg_n_0,
      Q(2) => Q(0),
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      fifo_full_p1 => fifo_full_p1,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => \^sig_dqual_reg_empty_reg\,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid
    );
DYNSHREG_F_I: entity work.\axi_dma_ctrl_dynshreg_f__parameterized5\
     port map (
      D(4 downto 0) => D(4 downto 0),
      FIFO_Full_reg => FIFO_Full_reg_n_0,
      Q(1) => CNTR_INCR_DECR_ADDN_F_I_n_2,
      Q(0) => CNTR_INCR_DECR_ADDN_F_I_n_3,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(11 downto 0) => \out\(11 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr_reg[2]\,
      \sig_dbeat_cntr_reg[2]_0\ => \sig_dbeat_cntr_reg[2]_0\,
      \sig_dbeat_cntr_reg[4]\(4 downto 0) => \sig_dbeat_cntr_reg[4]\(4 downto 0),
      sig_dqual_reg_empty_reg => \^sig_dqual_reg_empty_reg\,
      sig_first_dbeat_reg => sig_first_dbeat_reg,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_0,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_last_dbeat_reg => sig_last_dbeat_reg,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_0,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg_reg => \^sel\,
      sig_s_ready_out_reg => sig_s_ready_out_reg,
      sm_set_error_reg(10 downto 0) => sm_set_error_reg(10 downto 0)
    );
FIFO_Full_reg: unisim.vcomponents.FDRE
     port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => fifo_full_p1,
      Q => FIFO_Full_reg_n_0,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_reg_module is
  port (
    s_axi_lite_arready : out STD_LOGIC;
    s_axi_lite_bvalid : out STD_LOGIC;
    s_axi_lite_rvalid : out STD_LOGIC;
    irqdelay_wren_reg : out STD_LOGIC_VECTOR ( 13 downto 0 );
    \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\ : out STD_LOGIC;
    mm2s_irqthresh_wren : out STD_LOGIC;
    mm2s_irqdelay_wren : out STD_LOGIC;
    sg_updt_error_reg : out STD_LOGIC;
    sg_updt_error_reg_0 : out STD_LOGIC;
    sg_updt_error_reg_1 : out STD_LOGIC;
    error_d1_reg : out STD_LOGIC;
    error_d1_reg_0 : out STD_LOGIC;
    error_d1_reg_1 : out STD_LOGIC;
    irqdelay_wren_reg_0 : out STD_LOGIC_VECTOR ( 15 downto 0 );
    soft_reset_d1_reg : out STD_LOGIC;
    s2mm_irqthresh_wren : out STD_LOGIC;
    s2mm_irqdelay_wren : out STD_LOGIC;
    sg_updt_error_reg_2 : out STD_LOGIC;
    sg_updt_error_reg_3 : out STD_LOGIC;
    sg_updt_error_reg_4 : out STD_LOGIC;
    error_d1_reg_2 : out STD_LOGIC;
    error_d1_reg_3 : out STD_LOGIC;
    error_d1_reg_4 : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.error_pointer_set_reg\ : out STD_LOGIC;
    idle_reg : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\ : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    introut_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    soft_reset : out STD_LOGIC;
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_1\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_3_out : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ : out STD_LOGIC;
    p_7_out : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ : out STD_LOGIC;
    \GEN_MM2S.reg1_reg[90]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_stop_i : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\ : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\ : out STD_LOGIC;
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\ : out STD_LOGIC;
    S : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    mm2s_halted_set0 : out STD_LOGIC;
    mm2s_ns12_out : out STD_LOGIC;
    mm2s_ns0 : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    soft_reset_re_reg : out STD_LOGIC;
    \QUEUE_COUNT.cmnds_queued_shift_reg[2]\ : out STD_LOGIC;
    s_axi_lite_awready : out STD_LOGIC;
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_2\ : out STD_LOGIC;
    s_axi_lite_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    mm2s_introut : out STD_LOGIC;
    s2mm_introut : out STD_LOGIC;
    rdy_to2 : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    s_axi_lite_arvalid : in STD_LOGIC;
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s_axi_lite_awvalid : in STD_LOGIC;
    s_axi_lite_wvalid : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_UPDATE.ch1_dma_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\ : in STD_LOGIC;
    sg_ftch_error0 : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_interr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\ : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\ : in STD_LOGIC;
    sg_ftch_error0_0 : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    all_is_idle_d1_reg : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_0\ : in STD_LOGIC;
    all_is_idle_d1_reg_0 : in STD_LOGIC;
    s_axi_lite_resetn : in STD_LOGIC;
    s_axi_lite_bready : in STD_LOGIC;
    m_axi_sg_hrdresetn : in STD_LOGIC;
    s_axi_lite_rready : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_0\ : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ : in STD_LOGIC;
    s2mm_soft_reset_done : in STD_LOGIC;
    mm2s_soft_reset_done : in STD_LOGIC;
    p_52_out : in STD_LOGIC;
    p_51_out : in STD_LOGIC;
    p_50_out : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    \GEN_MM2S.queue_dout_new_reg[90]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \ftch_error_addr_reg[31]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    p_26_out : in STD_LOGIC;
    p_25_out : in STD_LOGIC;
    p_24_out : in STD_LOGIC;
    p_10_out : in STD_LOGIC;
    \GEN_S2MM.queue_dout2_new_reg[90]\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    p_8_out : in STD_LOGIC;
    p_19_out : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    irqdelay_wren_reg_1 : in STD_LOGIC;
    p_45_out : in STD_LOGIC;
    irqdelay_wren_reg_2 : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_1\ : in STD_LOGIC;
    \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ : in STD_LOGIC;
    ch1_sg_idle : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    m_axi_sg_rdata : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\ : in STD_LOGIC_VECTOR ( 23 downto 0 );
    \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\ : in STD_LOGIC_VECTOR ( 23 downto 0 );
    mm2s_halt_cmplt : in STD_LOGIC;
    mm2s_all_idle : in STD_LOGIC;
    s2mm_error : in STD_LOGIC;
    mm2s_error : in STD_LOGIC;
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    packet_in_progress_reg : in STD_LOGIC;
    soft_reset_d1 : in STD_LOGIC;
    s_axi_lite_awaddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axi_lite_wdata : in STD_LOGIC_VECTOR ( 29 downto 0 );
    s_axi_lite_araddr : in STD_LOGIC_VECTOR ( 9 downto 0 );
    p_46_out : in STD_LOGIC;
    p_20_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_reg_module : entity is "axi_dma_reg_module";
end axi_dma_ctrl_axi_dma_reg_module;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_reg_module is
  signal \^gen_async_read.lite_rdata_cdc_from_reg[1]\ : STD_LOGIC;
  signal \^gen_async_read.lite_rdata_cdc_from_reg[31]\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \^gen_async_read.lite_rdata_cdc_from_reg[31]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^gen_async_read.lite_rdata_cdc_from_reg[31]_1\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_12\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_13\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_14\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_44\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_51\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_52\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_53\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_54\ : STD_LOGIC;
  signal \^gen_desc_reg_for_sg.error_pointer_set_reg\ : STD_LOGIC;
  signal \^gen_desc_reg_for_sg.error_pointer_set_reg_0\ : STD_LOGIC;
  signal \^gen_mm2s_dma_control.mm2s_stop_reg\ : STD_LOGIC;
  signal \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_14\ : STD_LOGIC;
  signal \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_15\ : STD_LOGIC;
  signal \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_35\ : STD_LOGIC;
  signal \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_62\ : STD_LOGIC;
  signal \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_63\ : STD_LOGIC;
  signal \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_14\ : STD_LOGIC;
  signal \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_15\ : STD_LOGIC;
  signal \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_36\ : STD_LOGIC;
  signal \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_37\ : STD_LOGIC;
  signal \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_38\ : STD_LOGIC;
  signal dmacr_i : STD_LOGIC_VECTOR ( 2 to 2 );
  signal dmacr_i_0 : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^error_d1_reg\ : STD_LOGIC;
  signal \^error_d1_reg_0\ : STD_LOGIC;
  signal \^error_d1_reg_1\ : STD_LOGIC;
  signal \^error_d1_reg_2\ : STD_LOGIC;
  signal \^error_d1_reg_3\ : STD_LOGIC;
  signal \^error_d1_reg_4\ : STD_LOGIC;
  signal \^idle_reg\ : STD_LOGIC;
  signal \^irqdelay_wren_reg\ : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \^irqdelay_wren_reg_0\ : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal mm2s_dmacr : STD_LOGIC_VECTOR ( 29 downto 3 );
  signal mm2s_taildesc : STD_LOGIC_VECTOR ( 29 downto 6 );
  signal p_0_out : STD_LOGIC_VECTOR ( 5 downto 2 );
  signal p_13_out : STD_LOGIC;
  signal p_14_out : STD_LOGIC;
  signal p_1_out : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal p_2_out : STD_LOGIC_VECTOR ( 16 downto 0 );
  signal p_73_out : STD_LOGIC;
  signal p_74_out : STD_LOGIC;
  signal s2mm_dmacr : STD_LOGIC_VECTOR ( 29 downto 3 );
  signal s2mm_taildesc : STD_LOGIC_VECTOR ( 29 downto 6 );
  signal \^sg_updt_error_reg\ : STD_LOGIC;
  signal \^sg_updt_error_reg_0\ : STD_LOGIC;
  signal \^sg_updt_error_reg_1\ : STD_LOGIC;
  signal \^sg_updt_error_reg_2\ : STD_LOGIC;
  signal \^sg_updt_error_reg_3\ : STD_LOGIC;
  signal \^sg_updt_error_reg_4\ : STD_LOGIC;
  signal \^soft_reset_d1_reg\ : STD_LOGIC;
begin
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\ <= \^gen_async_read.lite_rdata_cdc_from_reg[1]\;
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(25 downto 0) <= \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25 downto 0);
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(1 downto 0) <= \^gen_async_read.lite_rdata_cdc_from_reg[31]_0\(1 downto 0);
  \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_1\(1 downto 0) <= \^gen_async_read.lite_rdata_cdc_from_reg[31]_1\(1 downto 0);
  \GEN_DESC_REG_FOR_SG.error_pointer_set_reg\ <= \^gen_desc_reg_for_sg.error_pointer_set_reg\;
  \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ <= \^gen_desc_reg_for_sg.error_pointer_set_reg_0\;
  \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\ <= \^gen_mm2s_dma_control.mm2s_stop_reg\;
  \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(25 downto 0) <= \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(25 downto 0);
  error_d1_reg <= \^error_d1_reg\;
  error_d1_reg_0 <= \^error_d1_reg_0\;
  error_d1_reg_1 <= \^error_d1_reg_1\;
  error_d1_reg_2 <= \^error_d1_reg_2\;
  error_d1_reg_3 <= \^error_d1_reg_3\;
  error_d1_reg_4 <= \^error_d1_reg_4\;
  idle_reg <= \^idle_reg\;
  irqdelay_wren_reg(13 downto 0) <= \^irqdelay_wren_reg\(13 downto 0);
  irqdelay_wren_reg_0(15 downto 0) <= \^irqdelay_wren_reg_0\(15 downto 0);
  sg_updt_error_reg <= \^sg_updt_error_reg\;
  sg_updt_error_reg_0 <= \^sg_updt_error_reg_0\;
  sg_updt_error_reg_1 <= \^sg_updt_error_reg_1\;
  sg_updt_error_reg_2 <= \^sg_updt_error_reg_2\;
  sg_updt_error_reg_3 <= \^sg_updt_error_reg_3\;
  sg_updt_error_reg_4 <= \^sg_updt_error_reg_4\;
  soft_reset_d1_reg <= \^soft_reset_d1_reg\;
\GEN_AXI_LITE_IF.AXI_LITE_IF_I\: entity work.axi_dma_ctrl_axi_dma_lite_if
     port map (
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ => \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[0]_0\(2) => p_0_out(5),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[0]_0\(1 downto 0) => p_0_out(3 downto 2),
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_12\,
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg_0\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_13\,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25 downto 0) => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25 downto 0),
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(22 downto 6) => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(25 downto 9),
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(5 downto 0) => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(5 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[12]\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_36\,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[13]\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_37\,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_38\,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(22 downto 21) => \^gen_async_read.lite_rdata_cdc_from_reg[31]_0\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(20 downto 6) => mm2s_taildesc(29 downto 15),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(5 downto 0) => mm2s_taildesc(11 downto 6),
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(7 downto 0) => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\(7 downto 0),
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(7 downto 0) => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(7 downto 0) => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\(7 downto 0),
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(7 downto 0) => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(7 downto 0),
      Q(25 downto 24) => \^gen_async_read.lite_rdata_cdc_from_reg[31]_1\(1 downto 0),
      Q(23 downto 0) => s2mm_taildesc(29 downto 6),
      SR(0) => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_14\,
      dly_irq_reg => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_52\,
      dly_irq_reg_0 => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_54\,
      dly_irq_reg_1 => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_15\,
      dly_irq_reg_2 => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_15\,
      dma_decerr_reg => \^sg_updt_error_reg_4\,
      dma_decerr_reg_0 => \^sg_updt_error_reg_1\,
      dma_interr_reg => \^sg_updt_error_reg\,
      dma_interr_reg_0 => \^sg_updt_error_reg_2\,
      dma_slverr_reg => \^sg_updt_error_reg_3\,
      dma_slverr_reg_0 => \^sg_updt_error_reg_0\,
      dmacr_i(0) => dmacr_i_0(2),
      dmacr_i_0(0) => dmacr_i(2),
      \dmacr_i_reg[0]\ => \^irqdelay_wren_reg\(0),
      \dmacr_i_reg[0]_0\ => \^irqdelay_wren_reg_0\(0),
      \dmacr_i_reg[12]\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_35\,
      \dmacr_i_reg[13]\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_62\,
      \dmacr_i_reg[14]\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_63\,
      \dmacr_i_reg[16]\(0) => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_44\,
      \dmacr_i_reg[2]\ => \^soft_reset_d1_reg\,
      \dmacr_i_reg[2]_0\ => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      \dmacr_i_reg[31]\(14 downto 0) => \^irqdelay_wren_reg_0\(15 downto 1),
      \dmacr_i_reg[31]_0\(12 downto 0) => \^irqdelay_wren_reg\(13 downto 1),
      halted_reg => \^gen_desc_reg_for_sg.error_pointer_set_reg_0\,
      halted_reg_0 => \^gen_desc_reg_for_sg.error_pointer_set_reg\,
      idle_reg => \^gen_async_read.lite_rdata_cdc_from_reg[1]\,
      idle_reg_0 => \^idle_reg\,
      ioc_irq_reg => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_51\,
      ioc_irq_reg_0 => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_53\,
      ioc_irq_reg_1 => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_14\,
      ioc_irq_reg_2 => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_14\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_hrdresetn => m_axi_sg_hrdresetn,
      mm2s_dmacr(4 downto 2) => mm2s_dmacr(29 downto 27),
      mm2s_dmacr(1 downto 0) => mm2s_dmacr(4 downto 3),
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_soft_reset_done => mm2s_soft_reset_done,
      p_0_in => p_0_in,
      p_19_out => p_19_out,
      p_20_out => p_20_out,
      p_2_out(7) => p_2_out(16),
      p_2_out(6 downto 4) => p_2_out(14 downto 12),
      p_2_out(3) => p_2_out(4),
      p_2_out(2 downto 0) => p_2_out(2 downto 0),
      p_45_out => p_45_out,
      p_46_out => p_46_out,
      rdy_to2 => rdy_to2,
      s2mm_dmacr(2) => s2mm_dmacr(29),
      s2mm_dmacr(1 downto 0) => s2mm_dmacr(4 downto 3),
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_soft_reset_done => s2mm_soft_reset_done,
      s_axi_lite_aclk => s_axi_lite_aclk,
      s_axi_lite_araddr(9 downto 0) => s_axi_lite_araddr(9 downto 0),
      s_axi_lite_arready => s_axi_lite_arready,
      s_axi_lite_arvalid => s_axi_lite_arvalid,
      s_axi_lite_awaddr(4 downto 0) => s_axi_lite_awaddr(4 downto 0),
      s_axi_lite_awready => s_axi_lite_awready,
      s_axi_lite_awvalid => s_axi_lite_awvalid,
      s_axi_lite_bready => s_axi_lite_bready,
      s_axi_lite_bvalid => s_axi_lite_bvalid,
      s_axi_lite_rdata(31 downto 0) => s_axi_lite_rdata(31 downto 0),
      s_axi_lite_resetn => s_axi_lite_resetn,
      s_axi_lite_rready => s_axi_lite_rready,
      s_axi_lite_rvalid => s_axi_lite_rvalid,
      s_axi_lite_wdata(29 downto 0) => s_axi_lite_wdata(29 downto 0),
      s_axi_lite_wvalid => s_axi_lite_wvalid,
      scndry_out => scndry_out,
      scndry_vect_out(28 downto 3) => p_1_out(31 downto 6),
      scndry_vect_out(2 downto 1) => p_1_out(4 downto 3),
      scndry_vect_out(0) => p_1_out(0),
      sg_decerr_reg => \^error_d1_reg_4\,
      sg_decerr_reg_0 => \^error_d1_reg_1\,
      sg_interr_reg => \^error_d1_reg_2\,
      sg_interr_reg_0 => \^error_d1_reg\,
      sg_slverr_reg => \^error_d1_reg_3\,
      sg_slverr_reg_0 => \^error_d1_reg_0\
    );
\GEN_MM2S_REGISTERS.GEN_INTROUT_ASYNC.PROC_REG_INTR2LITE\: entity work.axi_dma_ctrl_cdc_sync_23
     port map (
      mm2s_introut => mm2s_introut,
      prmry_in => p_13_out,
      s_axi_lite_aclk => s_axi_lite_aclk
    );
\GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER\: entity work.axi_dma_ctrl_axi_dma_register
     port map (
      \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_51\,
      \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_52\,
      \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0) => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_14\,
      \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(2) => p_0_out(5),
      \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1 downto 0) => p_0_out(3 downto 2),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_35\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_62\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_63\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(25 downto 24) => \^gen_async_read.lite_rdata_cdc_from_reg[31]_0\(1 downto 0),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(23 downto 0) => mm2s_taildesc(29 downto 6),
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      \GEN_ASYNC_RESET.scndry_resetn_reg_0\ => \GEN_ASYNC_RESET.scndry_resetn_reg_1\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[4]\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_12\,
      \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\ => \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\,
      \GEN_CH1_UPDATE.ch1_dma_interr_set_reg\ => \GEN_CH1_UPDATE.ch1_dma_interr_set_reg\,
      \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\ => \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\,
      \GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\ => \GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\,
      \GEN_CH1_UPDATE.ch1_updt_interr_set_reg\ => \GEN_CH1_UPDATE.ch1_updt_interr_set_reg\,
      \GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\ => \GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\,
      \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ => \^gen_desc_reg_for_sg.error_pointer_set_reg\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[5]\(2 downto 0) => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\(5 downto 3),
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\ => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_15\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg_0\ => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\,
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\ => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\,
      \GEN_MM2S.queue_dout_new_reg[90]\(25 downto 0) => \GEN_MM2S.queue_dout_new_reg[90]\(25 downto 0),
      \GEN_MM2S.reg1_reg[90]\(0) => \GEN_MM2S.reg1_reg[90]\(0),
      \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\ => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_0\ => mm2s_stop_i,
      \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_1\ => \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_0\,
      \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ => \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\,
      \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(23 downto 0) => \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(23 downto 0),
      \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(25 downto 0) => \^gen_pntr_for_ch1.ch1_fetch_address_i_reg[31]\(25 downto 0),
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(3 downto 0) => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(3 downto 0),
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\(1 downto 0) => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\(1 downto 0),
      Q(0) => Q(0),
      \QUEUE_COUNT.cmnds_queued_shift_reg[2]\ => \QUEUE_COUNT.cmnds_queued_shift_reg[2]\,
      S(1 downto 0) => S(1 downto 0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\(0) => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\(0),
      all_is_idle_d1_reg => all_is_idle_d1_reg,
      ch1_sg_idle => ch1_sg_idle,
      dmacr_i(0) => dmacr_i_0(2),
      \dmacr_i_reg[2]_0\ => \^soft_reset_d1_reg\,
      error_d1_reg_0 => \^error_d1_reg\,
      error_d1_reg_1 => \^error_d1_reg_0\,
      error_d1_reg_2 => \^error_d1_reg_1\,
      \ftch_error_addr_reg[31]\(25 downto 0) => \ftch_error_addr_reg[31]\(25 downto 0),
      idle_reg_0 => \^idle_reg\,
      ioc_irq_reg_0 => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER_n_14\,
      irqdelay_wren_reg_0(12 downto 0) => \^irqdelay_wren_reg\(13 downto 1),
      irqdelay_wren_reg_1 => irqdelay_wren_reg_2,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      mm2s_all_idle => mm2s_all_idle,
      mm2s_dmacr(4 downto 2) => mm2s_dmacr(29 downto 27),
      mm2s_dmacr(1 downto 0) => mm2s_dmacr(4 downto 3),
      mm2s_error => mm2s_error,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      mm2s_halted_clr_reg => \^irqdelay_wren_reg\(0),
      mm2s_halted_set0 => mm2s_halted_set0,
      mm2s_irqdelay_wren => mm2s_irqdelay_wren,
      mm2s_irqthresh_wren => mm2s_irqthresh_wren,
      mm2s_ns0 => mm2s_ns0,
      mm2s_ns12_out => mm2s_ns12_out,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_14_out => p_14_out,
      p_16_out => p_16_out,
      p_2_out(3) => p_2_out(4),
      p_2_out(2 downto 0) => p_2_out(2 downto 0),
      p_37_out => p_37_out,
      p_45_out => p_45_out,
      p_50_out => p_50_out,
      p_51_out => p_51_out,
      p_52_out => p_52_out,
      p_74_out => p_74_out,
      p_7_out => p_7_out,
      packet_in_progress_reg => packet_in_progress_reg,
      prmry_in => p_13_out,
      s2mm_error => s2mm_error,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      scndry_vect_out(28 downto 3) => p_1_out(31 downto 6),
      scndry_vect_out(2 downto 1) => p_1_out(4 downto 3),
      scndry_vect_out(0) => p_1_out(0),
      sg_ftch_error0 => sg_ftch_error0,
      sg_updt_error_reg_0 => \^sg_updt_error_reg\,
      sg_updt_error_reg_1 => \^sg_updt_error_reg_0\,
      sg_updt_error_reg_2 => \^sg_updt_error_reg_1\,
      soft_reset_d1 => soft_reset_d1,
      soft_reset_re_reg => soft_reset_re_reg
    );
\GEN_S2MM_REGISTERS.GEN_INTROUT_ASYNC.PROC_REG_INTR2LITE\: entity work.axi_dma_ctrl_cdc_sync_24
     port map (
      prmry_in => p_73_out,
      s2mm_introut => s2mm_introut,
      s_axi_lite_aclk => s_axi_lite_aclk
    );
\GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER\: entity work.axi_dma_ctrl_axi_dma_register_s2mm
     port map (
      D(0) => D(0),
      \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[12].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_53\,
      \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[13].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_54\,
      \GENERATE_LEVEL_P_S_CDC.MULTI_BIT.FOR_IN_cdc_to[23].CROSS2_PLEVEL_IN2SCNDRY_IN_cdc_to\(0) => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_44\,
      \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(1) => p_0_out(5),
      \GEN_ASYNC_READ.axi2ip_rdaddr_i_reg[5]\(0) => p_0_out(2),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[12]\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_36\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[13]\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_37\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[14]\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_38\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\ => \^gen_async_read.lite_rdata_cdc_from_reg[1]\,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(25 downto 24) => \^gen_async_read.lite_rdata_cdc_from_reg[31]_1\(1 downto 0),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(23 downto 0) => s2mm_taildesc(29 downto 6),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(25 downto 0) => \^gen_async_read.lite_rdata_cdc_from_reg[31]\(25 downto 0),
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      \GEN_ASYNC_WRITE.axi2ip_wrce_reg[16]\ => \GEN_AXI_LITE_IF.AXI_LITE_IF_I_n_13\,
      \GEN_CH1_FETCH.ch1_active_i_reg\(0) => \GEN_CH1_FETCH.ch1_active_i_reg\(0),
      \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\ => \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\,
      \GEN_CH2_UPDATE.ch2_dma_interr_set_reg\ => \GEN_CH2_UPDATE.ch2_dma_interr_set_reg\,
      \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\ => \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\,
      \GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\ => \GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\,
      \GEN_CH2_UPDATE.ch2_updt_interr_set_reg\ => \GEN_CH2_UPDATE.ch2_updt_interr_set_reg\,
      \GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\ => \GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\,
      \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ => \^gen_desc_reg_for_sg.error_pointer_set_reg_0\,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[14]_0\(2 downto 0) => mm2s_taildesc(14 downto 12),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[6]\(1 downto 0) => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\(6 downto 5),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(0) => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_15\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\ => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_1\ => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\ => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(23 downto 0) => \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(23 downto 0),
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\(1 downto 0) => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\(1 downto 0),
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(3 downto 0) => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(3 downto 0),
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\(1 downto 0) => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\(1 downto 0),
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_2\ => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_2\,
      \GEN_S2MM.queue_dout2_new_reg[90]\(25 downto 0) => \GEN_S2MM.queue_dout2_new_reg[90]\(25 downto 0),
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ => \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\,
      Q(0) => introut_reg(0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\(0) => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]_0\(0),
      all_is_idle_d1_reg => all_is_idle_d1_reg_0,
      dmacr_i(0) => dmacr_i(2),
      \dmacr_i_reg[2]_0\ => \^gen_mm2s_dma_control.mm2s_stop_reg\,
      error_d1_reg_0 => \^error_d1_reg_2\,
      error_d1_reg_1 => \^error_d1_reg_3\,
      error_d1_reg_2 => \^error_d1_reg_4\,
      \ftch_error_addr_reg[31]\(25 downto 0) => \ftch_error_addr_reg[31]\(25 downto 0),
      ioc_irq_reg_0 => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER_n_14\,
      irqdelay_wren_reg_0(14 downto 0) => \^irqdelay_wren_reg_0\(15 downto 1),
      irqdelay_wren_reg_1 => irqdelay_wren_reg_1,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_rdata(0) => m_axi_sg_rdata(0),
      mm2s_dmacr(0) => mm2s_dmacr(4),
      mm2s_error => mm2s_error,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_10_out => p_10_out,
      p_14_out => p_14_out,
      p_19_out => p_19_out,
      p_24_out => p_24_out,
      p_25_out => p_25_out,
      p_26_out => p_26_out,
      p_2_out(3) => p_2_out(16),
      p_2_out(2 downto 0) => p_2_out(14 downto 12),
      p_3_out => p_3_out,
      p_74_out => p_74_out,
      p_8_out => p_8_out,
      prmry_in => p_73_out,
      s2mm_dmacr(2) => s2mm_dmacr(29),
      s2mm_dmacr(1 downto 0) => s2mm_dmacr(4 downto 3),
      s2mm_error => s2mm_error,
      s2mm_halted_clr_reg => \^irqdelay_wren_reg_0\(0),
      s2mm_irqdelay_wren => s2mm_irqdelay_wren,
      s2mm_irqthresh_wren => s2mm_irqthresh_wren,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      scndry_vect_out(28 downto 3) => p_1_out(31 downto 6),
      scndry_vect_out(2 downto 1) => p_1_out(4 downto 3),
      scndry_vect_out(0) => p_1_out(0),
      sg_ftch_error0_0 => sg_ftch_error0_0,
      sg_updt_error_reg_0 => \^sg_updt_error_reg_2\,
      sg_updt_error_reg_1 => \^sg_updt_error_reg_3\,
      sg_updt_error_reg_2 => \^sg_updt_error_reg_4\,
      soft_reset => soft_reset,
      soft_reset_d1_reg => \^soft_reset_d1_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma_rst_module is
  port (
    rdy_to2 : out STD_LOGIC;
    s_axi_lite_resetn : out STD_LOGIC;
    p_0_in_0 : out STD_LOGIC;
    \GEN_ASYNC_READ.rvalid_reg\ : out STD_LOGIC;
    m_axi_sg_hrdresetn : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_scndry_resetn : out STD_LOGIC;
    mm2s_scndry_resetn : out STD_LOGIC;
    halted_reg : out STD_LOGIC;
    halted_reg_0 : out STD_LOGIC;
    \dmacr_i_reg[0]\ : out STD_LOGIC;
    \dmacr_i_reg[0]_0\ : out STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg\ : out STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg_0\ : out STD_LOGIC;
    \GEN_S2MM.reg2_reg[90]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ : out STD_LOGIC;
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ : out STD_LOGIC;
    \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ : out STD_LOGIC;
    updt_data1 : out STD_LOGIC;
    \counter_reg[6]\ : out STD_LOGIC;
    mm2s_halt : out STD_LOGIC;
    s2mm_halt : out STD_LOGIC;
    sig_s_h_halt_reg_reg : out STD_LOGIC;
    sig_s_h_halt_reg_reg_0 : out STD_LOGIC;
    mm2s_prmry_resetn : out STD_LOGIC;
    dm_mm2s_prmry_resetn : out STD_LOGIC;
    mm2s_prmry_reset_out_n : out STD_LOGIC;
    mm2s_cntrl_reset_out_n : out STD_LOGIC;
    s2mm_prmry_resetn : out STD_LOGIC;
    dm_s2mm_prmry_resetn : out STD_LOGIC;
    s2mm_prmry_reset_out_n : out STD_LOGIC;
    s2mm_sts_reset_out_n : out STD_LOGIC;
    soft_reset_d1 : out STD_LOGIC;
    s2mm_soft_reset_done : out STD_LOGIC;
    mm2s_soft_reset_done : out STD_LOGIC;
    m_axi_sg_aresetn : out STD_LOGIC;
    dm_m_axi_sg_aresetn : out STD_LOGIC;
    scndry_out : in STD_LOGIC;
    mm2s_halted_set : in STD_LOGIC;
    mm2s_halted_clr : in STD_LOGIC;
    halted_reg_1 : in STD_LOGIC;
    s2mm_halted_set : in STD_LOGIC;
    s2mm_halted_clr : in STD_LOGIC;
    halted_reg_2 : in STD_LOGIC;
    mm2s_stop : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    s2mm_stop : in STD_LOGIC;
    queue_rden_new : in STD_LOGIC;
    p_37_out : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    \dmacr_i_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_stop_i : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    \counter_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_rvalid : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : in STD_LOGIC;
    m_axi_sg_rlast : in STD_LOGIC;
    sig_rst2all_stop_request : in STD_LOGIC;
    sig_s_h_halt_reg : in STD_LOGIC;
    axi_resetn : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    s_axi_lite_aclk : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    mm2s_all_idle : in STD_LOGIC;
    mm2s_halt_cmplt : in STD_LOGIC;
    soft_reset : in STD_LOGIC;
    \dmacr_i_reg[2]_1\ : in STD_LOGIC;
    s2mm_all_idle : in STD_LOGIC;
    s2mm_halt_cmplt : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_updt_idle_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma_rst_module : entity is "axi_dma_rst_module";
end axi_dma_ctrl_axi_dma_rst_module;

architecture STRUCTURE of axi_dma_ctrl_axi_dma_rst_module is
  signal \GEN_RESET_FOR_MM2S.RESET_I_n_13\ : STD_LOGIC;
  signal \GEN_RESET_FOR_MM2S.RESET_I_n_14\ : STD_LOGIC;
  signal \GEN_RESET_FOR_S2MM.RESET_I_n_14\ : STD_LOGIC;
  signal \GEN_RESET_FOR_S2MM.RESET_I_n_3\ : STD_LOGIC;
  signal REG_HRD_RST_n_0 : STD_LOGIC;
  signal \^m_axi_sg_hrdresetn\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of m_axi_sg_hrdresetn : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of m_axi_sg_hrdresetn : signal is "no";
  signal \^mm2s_scndry_resetn\ : STD_LOGIC;
  signal \^mm2s_soft_reset_done\ : STD_LOGIC;
  signal \^s2mm_scndry_resetn\ : STD_LOGIC;
  signal \^s2mm_soft_reset_done\ : STD_LOGIC;
  signal \^s_axi_lite_resetn\ : STD_LOGIC;
  attribute RTL_KEEP of s_axi_lite_resetn : signal is "true";
  attribute equivalent_register_removal of s_axi_lite_resetn : signal is "no";
begin
  m_axi_sg_hrdresetn <= \^m_axi_sg_hrdresetn\;
  mm2s_scndry_resetn <= \^mm2s_scndry_resetn\;
  mm2s_soft_reset_done <= \^mm2s_soft_reset_done\;
  s2mm_scndry_resetn <= \^s2mm_scndry_resetn\;
  s2mm_soft_reset_done <= \^s2mm_soft_reset_done\;
  s_axi_lite_resetn <= \^s_axi_lite_resetn\;
\GEN_ASYNC_WRITE.awvalid_to2_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^m_axi_sg_hrdresetn\,
      O => \GEN_ASYNC_READ.rvalid_reg\
    );
\GEN_ASYNC_WRITE.rdy_to2_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^s_axi_lite_resetn\,
      I1 => scndry_out,
      O => rdy_to2
    );
\GEN_RESET_FOR_MM2S.RESET_I\: entity work.axi_dma_ctrl_axi_dma_reset
     port map (
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ => REG_HRD_RST_n_0,
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0\ => \GEN_RESET_FOR_S2MM.RESET_I_n_3\,
      \GEN_ASYNC_RESET.GEN_PRMRY_GRTR_EQL_SCNDRY.s_halt_reg_0\ => \GEN_RESET_FOR_MM2S.RESET_I_n_14\,
      \GEN_ASYNC_RESET.scndry_resetn_reg_0\ => \^s2mm_scndry_resetn\,
      \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ => \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\,
      \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ => \GEN_RESET_FOR_MM2S.RESET_I_n_13\,
      \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg_0\ => \^mm2s_soft_reset_done\,
      \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ => \^s2mm_soft_reset_done\,
      \GEN_S2MM.reg2_reg[90]\(0) => \GEN_S2MM.reg2_reg[90]\(0),
      dm_m_axi_sg_aresetn => dm_m_axi_sg_aresetn,
      dm_mm2s_prmry_resetn => dm_mm2s_prmry_resetn,
      \dmacr_i_reg[0]\ => \dmacr_i_reg[0]\,
      \dmacr_i_reg[0]_0\ => \dmacr_i_reg[0]_0\,
      \dmacr_i_reg[2]\ => \dmacr_i_reg[2]_1\,
      \dmacr_i_reg[2]_0\ => \dmacr_i_reg[2]\,
      \dmacr_i_reg[2]_1\ => \dmacr_i_reg[2]_0\,
      halted_reg => halted_reg,
      halted_reg_0 => halted_reg_0,
      halted_reg_1 => halted_reg_1,
      halted_reg_2 => halted_reg_2,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      mm2s_all_idle => mm2s_all_idle,
      mm2s_cntrl_reset_out_n => mm2s_cntrl_reset_out_n,
      mm2s_halt => mm2s_halt,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      mm2s_halted_clr => mm2s_halted_clr,
      mm2s_halted_set => mm2s_halted_set,
      mm2s_prmry_reset_out_n => mm2s_prmry_reset_out_n,
      mm2s_prmry_resetn => mm2s_prmry_resetn,
      mm2s_stop => mm2s_stop,
      \out\ => \^mm2s_scndry_resetn\,
      p_0_in => p_0_in,
      s2mm_halted_clr => s2mm_halted_clr,
      s2mm_halted_set => s2mm_halted_set,
      s2mm_stop => s2mm_stop,
      scndry_out => \^m_axi_sg_hrdresetn\,
      sig_rst2all_stop_request => sig_rst2all_stop_request,
      sig_s_h_halt_reg_reg => sig_s_h_halt_reg_reg,
      soft_reset => soft_reset,
      soft_reset_d1 => soft_reset_d1
    );
\GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_RESET_FOR_MM2S.RESET_I_n_13\,
      Q => \^mm2s_soft_reset_done\,
      R => '0'
    );
\GEN_RESET_FOR_S2MM.RESET_I\: entity work.axi_dma_ctrl_axi_dma_reset_1
     port map (
      D(0) => D(0),
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ => REG_HRD_RST_n_0,
      \GEN_ASYNC_RESET.scndry_resetn_reg_0\ => \^mm2s_scndry_resetn\,
      \GEN_CH1_FETCH.ch1_active_i_reg\ => \GEN_CH1_FETCH.ch1_active_i_reg\,
      \GEN_CH2_UPDATE.ch2_updt_idle_reg\ => \GEN_CH2_UPDATE.ch2_updt_idle_reg\,
      \GEN_MM2S.queue_dout_valid_reg\ => \GEN_MM2S.queue_dout_valid_reg\,
      \GEN_MM2S.queue_dout_valid_reg_0\ => \GEN_MM2S.queue_dout_valid_reg_0\,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ => \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\,
      \GEN_RESET_FOR_MM2S.mm2s_soft_reset_done_reg\ => \^mm2s_soft_reset_done\,
      \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\ => \GEN_RESET_FOR_S2MM.RESET_I_n_14\,
      \GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg_0\ => \^s2mm_soft_reset_done\,
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\,
      SR(0) => SR(0),
      \counter_reg[6]\ => \counter_reg[6]\,
      \counter_reg[7]\(0) => \counter_reg[7]\(0),
      dm_s2mm_prmry_resetn => dm_s2mm_prmry_resetn,
      \dmacr_i_reg[0]\(0) => \dmacr_i_reg[0]_1\(0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      mm2s_stop_i => mm2s_stop_i,
      \out\ => \^s2mm_scndry_resetn\,
      p_0_in => p_0_in,
      p_16_out => p_16_out,
      p_37_out => p_37_out,
      queue_rden_new => queue_rden_new,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_halt => s2mm_halt,
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_prmry_reset_out_n => s2mm_prmry_reset_out_n,
      s2mm_prmry_resetn => s2mm_prmry_resetn,
      s2mm_sts_reset_out_n => s2mm_sts_reset_out_n,
      scndry_out => \^m_axi_sg_hrdresetn\,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \GEN_RESET_FOR_S2MM.RESET_I_n_3\,
      sig_s_h_halt_reg => sig_s_h_halt_reg,
      sig_s_h_halt_reg_reg => sig_s_h_halt_reg_reg_0,
      soft_reset => soft_reset,
      soft_reset_re_reg => \GEN_RESET_FOR_MM2S.RESET_I_n_14\,
      updt_data1 => updt_data1
    );
\GEN_RESET_FOR_S2MM.s2mm_soft_reset_done_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \GEN_RESET_FOR_S2MM.RESET_I_n_14\,
      Q => \^s2mm_soft_reset_done\,
      R => '0'
    );
REG_HRD_RST: entity work.axi_dma_ctrl_cdc_sync
     port map (
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => REG_HRD_RST_n_0,
      axi_resetn => axi_resetn,
      m_axi_sg_aclk => m_axi_sg_aclk,
      scndry_out => \^m_axi_sg_hrdresetn\
    );
REG_HRD_RST_OUT: entity work.axi_dma_ctrl_cdc_sync_2
     port map (
      axi_resetn => axi_resetn,
      s_axi_lite_aclk => s_axi_lite_aclk,
      scndry_out => \^s_axi_lite_resetn\
    );
arready_i_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^s_axi_lite_resetn\,
      O => p_0_in_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_mm2s_basic_wrap is
  port (
    \m_axi_sg_wstrb[0]\ : out STD_LOGIC;
    m_axi_sg_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_arvalid : out STD_LOGIC;
    m_axi_sg_rready : out STD_LOGIC;
    sig_stream_rst : out STD_LOGIC;
    m_axi_sg_arlen : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_init_done : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ : out STD_LOGIC;
    sig_init_done_0 : out STD_LOGIC;
    ftch_done_reg : out STD_LOGIC;
    ftch_decerr_i : out STD_LOGIC;
    ftch_slverr_i : out STD_LOGIC;
    m_axi_sg_araddr : out STD_LOGIC_VECTOR ( 25 downto 0 );
    dm_m_axi_sg_aresetn : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    sig_init_reg_reg_0 : in STD_LOGIC;
    s_axis_ftch_cmd_tvalid : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    m_axi_sg_rlast : in STD_LOGIC;
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_arready : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 25 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_mm2s_basic_wrap : entity is "axi_sg_mm2s_basic_wrap";
end axi_dma_ctrl_axi_sg_mm2s_basic_wrap;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_mm2s_basic_wrap is
  signal I_ADDR_CNTL_n_4 : STD_LOGIC;
  signal I_MSTR_SCC_n_3 : STD_LOGIC;
  signal I_MSTR_SCC_n_4 : STD_LOGIC;
  signal \^m_axi_sg_wstrb[0]\ : STD_LOGIC;
  signal p_1_in : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal sig_addr2rsc_cmd_fifo_empty : STD_LOGIC;
  signal sig_btt_is_zero : STD_LOGIC;
  signal sig_cmd_addr_reg : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal sig_cmd_burst_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_cmd_reg_empty : STD_LOGIC;
  signal sig_data2rsc_slverr : STD_LOGIC;
  signal sig_data2rsc_valid : STD_LOGIC;
  signal sig_load_input_cmd : STD_LOGIC;
  signal sig_mstr2addr_cmd_valid : STD_LOGIC;
  signal sig_next_burst : STD_LOGIC;
  signal sig_rd_sts_decerr_reg0 : STD_LOGIC;
  signal sig_rd_sts_okay_reg : STD_LOGIC;
  signal sig_rd_sts_okay_reg0 : STD_LOGIC;
  signal sig_rsc2data_ready : STD_LOGIC;
  signal sig_rsc2stat_status : STD_LOGIC_VECTOR ( 6 downto 5 );
  signal sig_rsc2stat_status_valid : STD_LOGIC;
  signal sig_stat2rsc_status_ready : STD_LOGIC;
  signal \^sig_stream_rst\ : STD_LOGIC;
  signal sm_set_error : STD_LOGIC;
begin
  \m_axi_sg_wstrb[0]\ <= \^m_axi_sg_wstrb[0]\;
  sig_stream_rst <= \^sig_stream_rst\;
I_ADDR_CNTL: entity work.axi_dma_ctrl_axi_sg_addr_cntl
     port map (
      Q(25 downto 0) => sig_cmd_addr_reg(31 downto 6),
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_araddr(25 downto 0) => m_axi_sg_araddr(25 downto 0),
      m_axi_sg_arburst(0) => m_axi_sg_arburst(0),
      m_axi_sg_arlen(0) => m_axi_sg_arlen(0),
      m_axi_sg_arready => m_axi_sg_arready,
      m_axi_sg_arvalid => m_axi_sg_arvalid,
      sig_addr2rsc_cmd_fifo_empty => sig_addr2rsc_cmd_fifo_empty,
      sig_cmd2addr_valid1_reg => I_MSTR_SCC_n_3,
      \sig_cmd_addr_reg_reg[6]\ => I_ADDR_CNTL_n_4,
      sig_cmd_burst_reg(0) => sig_cmd_burst_reg(0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \^m_axi_sg_wstrb[0]\,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sm_set_error => sm_set_error,
      sm_set_error_reg => I_MSTR_SCC_n_4
    );
I_CMD_STATUS: entity work.axi_dma_ctrl_axi_sg_cmd_status_31
     port map (
      D(25 downto 0) => D(25 downto 0),
      Q(26 downto 1) => p_1_in(31 downto 6),
      Q(0) => sig_next_burst,
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ => \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\,
      ftch_decerr_i => ftch_decerr_i,
      ftch_done_reg => ftch_done_reg,
      ftch_slverr_i => ftch_slverr_i,
      m_axi_sg_aclk => m_axi_sg_aclk,
      p_18_out => p_18_out,
      s_axis_ftch_cmd_tvalid => s_axis_ftch_cmd_tvalid,
      sig_addr2rsc_cmd_fifo_empty => sig_addr2rsc_cmd_fifo_empty,
      sig_btt_is_zero => sig_btt_is_zero,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \^sig_stream_rst\,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 => \^m_axi_sg_wstrb[0]\,
      sig_init_done => sig_init_done,
      sig_init_done_0 => sig_init_done_0,
      sig_init_reg_reg => sig_init_reg_reg,
      sig_init_reg_reg_0 => sig_init_reg_reg_0,
      sig_load_input_cmd => sig_load_input_cmd,
      sig_rd_sts_okay_reg => sig_rd_sts_okay_reg,
      sig_rsc2stat_status(1 downto 0) => sig_rsc2stat_status(6 downto 5),
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
I_MSTR_SCC: entity work.axi_dma_ctrl_axi_sg_scc
     port map (
      Q(26 downto 1) => p_1_in(31 downto 6),
      Q(0) => sig_next_burst,
      m_axi_sg_aclk => m_axi_sg_aclk,
      sig_addr2rsc_cmd_fifo_empty => sig_addr2rsc_cmd_fifo_empty,
      sig_addr_reg_empty_reg => I_ADDR_CNTL_n_4,
      sig_addr_valid_reg_reg => I_MSTR_SCC_n_4,
      sig_btt_is_zero => sig_btt_is_zero,
      sig_cmd_burst_reg(0) => sig_cmd_burst_reg(0),
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \^m_axi_sg_wstrb[0]\,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 => \^sig_stream_rst\,
      sig_load_input_cmd => sig_load_input_cmd,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      \sig_next_addr_reg_reg[31]\(25 downto 0) => sig_cmd_addr_reg(31 downto 6),
      sig_posted_to_axi_2_reg => I_MSTR_SCC_n_3,
      sm_set_error => sm_set_error
    );
I_RD_DATA_CNTL: entity work.axi_dma_ctrl_axi_sg_rddata_cntl
     port map (
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rready => m_axi_sg_rready,
      m_axi_sg_rresp(1 downto 0) => m_axi_sg_rresp(1 downto 0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \^sig_stream_rst\,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0 => \^m_axi_sg_wstrb[0]\,
      sig_data2rsc_slverr => sig_data2rsc_slverr,
      sig_data2rsc_valid => sig_data2rsc_valid,
      sig_rd_sts_decerr_reg0 => sig_rd_sts_decerr_reg0,
      sig_rd_sts_okay_reg0 => sig_rd_sts_okay_reg0,
      sig_rsc2data_ready => sig_rsc2data_ready,
      sig_rsc2stat_status(1 downto 0) => sig_rsc2stat_status(6 downto 5)
    );
I_RD_STATUS_CNTLR: entity work.axi_dma_ctrl_axi_sg_rd_status_cntl
     port map (
      m_axi_sg_aclk => m_axi_sg_aclk,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \^m_axi_sg_wstrb[0]\,
      sig_data2rsc_slverr => sig_data2rsc_slverr,
      sig_data2rsc_valid => sig_data2rsc_valid,
      sig_rd_sts_decerr_reg0 => sig_rd_sts_decerr_reg0,
      sig_rd_sts_okay_reg => sig_rd_sts_okay_reg,
      sig_rd_sts_okay_reg0 => sig_rd_sts_okay_reg0,
      sig_rsc2data_ready => sig_rsc2data_ready,
      sig_rsc2stat_status(1 downto 0) => sig_rsc2stat_status(6 downto 5),
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
I_RESET: entity work.axi_dma_ctrl_axi_sg_reset
     port map (
      dm_m_axi_sg_aresetn => dm_m_axi_sg_aresetn,
      m_axi_sg_aclk => m_axi_sg_aclk,
      \m_axi_sg_wstrb[0]\ => \^m_axi_sg_wstrb[0]\,
      mm2s_rlast_del_reg => \^sig_stream_rst\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_srl_fifo_f is
  port (
    m_axi_sg_bready : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_srl_fifo_f : entity is "srl_fifo_f";
end axi_dma_ctrl_srl_fifo_f;

architecture STRUCTURE of axi_dma_ctrl_srl_fifo_f is
begin
I_SRL_FIFO_RBU_F: entity work.axi_dma_ctrl_srl_fifo_rbu_f
     port map (
      D(1 downto 0) => D(1 downto 0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0) => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\,
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(0) => Q(0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      \out\(0) => \out\(0),
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_stream_rst => sig_stream_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized0\ is
  port (
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_push_coelsc_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_push_to_wsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \INFERRED_GEN.cnt_i_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized0\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized0\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized0\
     port map (
      D(2 downto 0) => D(2 downto 0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      \INFERRED_GEN.cnt_i_reg[0]\ => \INFERRED_GEN.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[0]_0\ => \INFERRED_GEN.cnt_i_reg[0]_0\,
      \INFERRED_GEN.cnt_i_reg[0]_1\(0) => \INFERRED_GEN.cnt_i_reg[0]_1\(0),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(0) => Q(0),
      \in\(2 downto 0) => \in\(2 downto 0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      \out\(1 downto 0) => \out\(1 downto 0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => sig_inhibit_rdy_n_reg,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_push_to_wsc_reg => sig_push_to_wsc_reg,
      sig_stream_rst => sig_stream_rst,
      sig_tlast_err_stop => sig_tlast_err_stop
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized1\ is
  port (
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    sig_posted_to_axi_2_reg : out STD_LOGIC;
    sig_calc_error_reg_reg : out STD_LOGIC;
    sig_addr_reg_empty_reg : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    sig_halt_reg : in STD_LOGIC;
    sig_addr_reg_empty_reg_0 : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized1\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized1\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized1\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized1\
     port map (
      SR(0) => SR(0),
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(39 downto 0) => \out\(39 downto 0),
      sel => sig_calc_error_reg_reg,
      sig_addr_reg_empty_reg => sig_addr_reg_empty_reg,
      sig_addr_reg_empty_reg_0 => sig_addr_reg_empty_reg_0,
      sig_addr_valid_reg_reg => sig_addr_valid_reg_reg,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_reg => sig_halt_reg_reg,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_2_reg => sig_posted_to_axi_2_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized1_19\ is
  port (
    FIFO_Full_reg : out STD_LOGIC;
    sig_push_addr_reg1_out : out STD_LOGIC;
    sig_posted_to_axi_reg : out STD_LOGIC;
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_data2addr_stop_req : in STD_LOGIC;
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized1_19\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized1_19\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized1_19\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized1_20\
     port map (
      FIFO_Full_reg_0 => FIFO_Full_reg,
      SR(0) => SR(0),
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      \out\(39 downto 0) => \out\(39 downto 0),
      sig_addr_reg_empty_reg => sig_addr_reg_empty_reg,
      sig_addr_valid_reg_reg => sig_addr_valid_reg_reg,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_reg => sig_posted_to_axi_reg,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized2\ is
  port (
    sig_first_dbeat_reg : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    sig_next_eof_reg_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 7 downto 0 );
    sig_ld_new_cmd_reg_reg : out STD_LOGIC;
    sig_last_dbeat_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC;
    \sig_good_mmap_dbeat10_out__0\ : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_dqual_reg_full : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    sig_next_calc_error_reg : in STD_LOGIC;
    \sig_dbeat_cntr_eq_1__3\ : in STD_LOGIC;
    \sig_dbeat_cntr_reg[3]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_ld_new_cmd_reg : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized2\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized2\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized2\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized2\
     port map (
      D(7 downto 0) => D(7 downto 0),
      E(0) => E(0),
      FIFO_Full_reg_0 => FIFO_Full_reg,
      Q(7 downto 0) => Q(7 downto 0),
      SR(0) => SR(0),
      \in\(10 downto 0) => \in\(10 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      \out\(11 downto 0) => \out\(11 downto 0),
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_eq_1__3\ => \sig_dbeat_cntr_eq_1__3\,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr_reg[2]\,
      \sig_dbeat_cntr_reg[3]\ => \sig_dbeat_cntr_reg[3]\,
      \sig_dbeat_cntr_reg[4]\ => \sig_dbeat_cntr_reg[4]\,
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => sig_dqual_reg_empty_reg,
      sig_dqual_reg_full => sig_dqual_reg_full,
      sig_first_dbeat_reg => sig_first_dbeat_reg,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_0,
      \sig_good_mmap_dbeat10_out__0\ => \sig_good_mmap_dbeat10_out__0\,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_last_dbeat_reg => sig_last_dbeat_reg,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_0,
      sig_ld_new_cmd_reg => sig_ld_new_cmd_reg,
      sig_ld_new_cmd_reg_reg => sig_ld_new_cmd_reg_reg,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_next_eof_reg_reg(0) => sig_next_eof_reg_reg(0),
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized3\ is
  port (
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC;
    m_axi_s2mm_bready : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \out\ : in STD_LOGIC;
    sig_data2wsc_calc_err_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_halt_reg_reg : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    m_axi_s2mm_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_0\ : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized3\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized3\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized3\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized3\
     port map (
      D(2 downto 0) => D(2 downto 0),
      E(0) => E(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0) => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      \INFERRED_GEN.cnt_i_reg[3]\ => \INFERRED_GEN.cnt_i_reg[3]\,
      \INFERRED_GEN.cnt_i_reg[3]_0\ => \INFERRED_GEN.cnt_i_reg[3]_0\,
      Q(3 downto 0) => Q(3 downto 0),
      SR(0) => SR(0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      \out\ => \out\,
      sig_data2wsc_calc_err_reg(0) => sig_data2wsc_calc_err_reg(0),
      sig_halt_reg_reg => sig_halt_reg_reg,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized4\ is
  port (
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \sig_wdc_statcnt_reg[2]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_push_coelsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[1]\ : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_inhibit_rdy_n_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized4\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized4\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized4\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized4\
     port map (
      D(2 downto 0) => D(2 downto 0),
      E(0) => E(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0) => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \INFERRED_GEN.cnt_i_reg[0]\ => \INFERRED_GEN.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[1]\ => \INFERRED_GEN.cnt_i_reg[1]\,
      \INFERRED_GEN.cnt_i_reg[3]\(0) => \INFERRED_GEN.cnt_i_reg[3]\(0),
      Q(3 downto 0) => Q(3 downto 0),
      SR(0) => SR(0),
      \in\(3 downto 0) => \in\(3 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(2 downto 0) => \out\(2 downto 0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => sig_inhibit_rdy_n_reg,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_tlast_err_stop => sig_tlast_err_stop,
      \sig_wdc_statcnt_reg[2]\ => \sig_wdc_statcnt_reg[2]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_srl_fifo_f__parameterized5\ is
  port (
    sig_last_dbeat_reg : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    sig_first_dbeat_reg : out STD_LOGIC;
    sig_next_calc_error_reg_reg : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_s_ready_out_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \sig_dbeat_cntr_reg[2]_0\ : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    sm_set_error_reg : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_srl_fifo_f__parameterized5\ : entity is "srl_fifo_f";
end \axi_dma_ctrl_srl_fifo_f__parameterized5\;

architecture STRUCTURE of \axi_dma_ctrl_srl_fifo_f__parameterized5\ is
begin
I_SRL_FIFO_RBU_F: entity work.\axi_dma_ctrl_srl_fifo_rbu_f__parameterized5\
     port map (
      D(4 downto 0) => D(4 downto 0),
      Q(0) => Q(0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(11 downto 0) => \out\(11 downto 0),
      sel => sig_next_calc_error_reg_reg,
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr_reg[2]\,
      \sig_dbeat_cntr_reg[2]_0\ => \sig_dbeat_cntr_reg[2]_0\,
      \sig_dbeat_cntr_reg[4]\(4 downto 0) => \sig_dbeat_cntr_reg[4]\(4 downto 0),
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => sig_dqual_reg_empty_reg,
      sig_first_dbeat_reg => sig_first_dbeat_reg,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_0,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_last_dbeat_reg => sig_last_dbeat_reg,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_0,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_s_ready_out_reg => sig_s_ready_out_reg,
      sm_set_error_reg(10 downto 0) => sm_set_error_reg(10 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized1\ is
  port (
    sig_init_done : out STD_LOGIC;
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    sig_posted_to_axi_2_reg : out STD_LOGIC;
    sel : out STD_LOGIC;
    sig_push_addr_reg1_out : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    sig_halt_reg : in STD_LOGIC;
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized1\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized1\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized1\ is
  signal sig_inhibit_rdy_n : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
begin
  sig_init_done <= \^sig_init_done\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized1\
     port map (
      SR(0) => SR(0),
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(39 downto 0) => \out\(39 downto 0),
      sig_addr_reg_empty_reg => sig_push_addr_reg1_out,
      sig_addr_reg_empty_reg_0 => sig_addr_reg_empty_reg,
      sig_addr_valid_reg_reg => sig_addr_valid_reg_reg,
      sig_calc_error_reg_reg => sel,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_reg => sig_halt_reg_reg,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_2_reg => sig_posted_to_axi_2_reg
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done\,
      I1 => sig_inhibit_rdy_n,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => sig_inhibit_rdy_n,
      R => SR(0)
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_init_reg2_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized1_18\ is
  port (
    sig_init_done : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    sig_push_addr_reg1_out : out STD_LOGIC;
    sig_posted_to_axi_reg : out STD_LOGIC;
    sig_addr_valid_reg_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 39 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ : in STD_LOGIC;
    sig_data2addr_stop_req : in STD_LOGIC;
    sig_addr_reg_empty_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized1_18\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized1_18\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized1_18\ is
  signal sig_inhibit_rdy_n : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
begin
  sig_init_done <= \^sig_init_done\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized1_19\
     port map (
      FIFO_Full_reg => FIFO_Full_reg,
      SR(0) => SR(0),
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      \out\(39 downto 0) => \out\(39 downto 0),
      sig_addr_reg_empty_reg => sig_addr_reg_empty_reg,
      sig_addr_valid_reg_reg => sig_addr_valid_reg_reg,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_reg => sig_posted_to_axi_reg,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done\,
      I1 => sig_inhibit_rdy_n,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => sig_inhibit_rdy_n,
      R => SR(0)
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized2\ is
  port (
    sig_init_done : out STD_LOGIC;
    sig_first_dbeat_reg : out STD_LOGIC;
    sig_push_dqual_reg : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    sig_next_eof_reg_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    sig_ld_new_cmd_reg_reg : out STD_LOGIC;
    sig_last_dbeat_reg : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC;
    \sig_good_mmap_dbeat10_out__0\ : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_dqual_reg_full : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    sig_next_calc_error_reg : in STD_LOGIC;
    \sig_dbeat_cntr_eq_1__3\ : in STD_LOGIC;
    \sig_dbeat_cntr_reg[3]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_ld_new_cmd_reg : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized2\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized2\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized2\ is
  signal sig_inhibit_rdy_n : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
begin
  sig_init_done <= \^sig_init_done\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized2\
     port map (
      D(7 downto 0) => D(7 downto 0),
      E(0) => E(0),
      FIFO_Full_reg => FIFO_Full_reg,
      Q(7 downto 0) => Q(7 downto 0),
      SR(0) => SR(0),
      \in\(10 downto 0) => \in\(10 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      \out\(11 downto 0) => \out\(11 downto 0),
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_eq_1__3\ => \sig_dbeat_cntr_eq_1__3\,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr_reg[2]\,
      \sig_dbeat_cntr_reg[3]\ => \sig_dbeat_cntr_reg[3]\,
      \sig_dbeat_cntr_reg[4]\ => \sig_dbeat_cntr_reg[4]\,
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => sig_push_dqual_reg,
      sig_dqual_reg_full => sig_dqual_reg_full,
      sig_first_dbeat_reg => sig_first_dbeat_reg,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_0,
      \sig_good_mmap_dbeat10_out__0\ => \sig_good_mmap_dbeat10_out__0\,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_last_dbeat_reg => sig_last_dbeat_reg,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_0,
      sig_ld_new_cmd_reg => sig_ld_new_cmd_reg,
      sig_ld_new_cmd_reg_reg => sig_ld_new_cmd_reg_reg,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_next_eof_reg_reg(0) => sig_next_eof_reg_reg(0),
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done\,
      I1 => sig_inhibit_rdy_n,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => sig_inhibit_rdy_n,
      R => SR(0)
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized3\ is
  port (
    sig_init_done : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC;
    m_axi_s2mm_bready : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \out\ : in STD_LOGIC;
    sig_data2wsc_calc_err_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_halt_reg_reg : in STD_LOGIC;
    m_axi_s2mm_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]_0\ : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized3\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized3\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized3\ is
  signal sig_inhibit_rdy_n : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
begin
  sig_init_done <= \^sig_init_done\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized3\
     port map (
      D(2 downto 0) => D(2 downto 0),
      E(0) => E(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0) => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      \INFERRED_GEN.cnt_i_reg[3]\ => \INFERRED_GEN.cnt_i_reg[3]\,
      \INFERRED_GEN.cnt_i_reg[3]_0\ => \INFERRED_GEN.cnt_i_reg[3]_0\,
      Q(3 downto 0) => Q(3 downto 0),
      SR(0) => SR(0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      \out\ => \out\,
      sig_data2wsc_calc_err_reg(0) => sig_data2wsc_calc_err_reg(0),
      sig_halt_reg_reg => sig_halt_reg_reg,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done\,
      I1 => sig_inhibit_rdy_n,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => sig_inhibit_rdy_n,
      R => SR(0)
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_init_reg2_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized4\ is
  port (
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    sig_init_done_0 : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \sig_wdc_statcnt_reg[2]\ : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[0]_0\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sig_push_coelsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[1]\ : out STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized4\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized4\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized4\ is
  signal \^inferred_gen.cnt_i_reg[0]_0\ : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done_0\ : STD_LOGIC;
begin
  \INFERRED_GEN.cnt_i_reg[0]_0\ <= \^inferred_gen.cnt_i_reg[0]_0\;
  sig_init_done_0 <= \^sig_init_done_0\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized4\
     port map (
      D(2 downto 0) => D(2 downto 0),
      E(0) => E(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0) => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \INFERRED_GEN.cnt_i_reg[0]\ => \INFERRED_GEN.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[1]\ => \INFERRED_GEN.cnt_i_reg[1]\,
      \INFERRED_GEN.cnt_i_reg[3]\(0) => \INFERRED_GEN.cnt_i_reg[3]\(0),
      Q(3 downto 0) => Q(3 downto 0),
      SR(0) => SR(0),
      \in\(3 downto 0) => \in\(3 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(2 downto 0) => \out\(2 downto 0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => \^inferred_gen.cnt_i_reg[0]_0\,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_tlast_err_stop => sig_tlast_err_stop,
      \sig_wdc_statcnt_reg[2]\ => \sig_wdc_statcnt_reg[2]\
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done_0\,
      I1 => \^inferred_gen.cnt_i_reg[0]_0\,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => \^inferred_gen.cnt_i_reg[0]_0\,
      R => SR(0)
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_init_reg2_reg,
      Q => \^sig_init_done_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_fifo__parameterized5\ is
  port (
    sig_init_done : out STD_LOGIC;
    sig_last_dbeat_reg : out STD_LOGIC;
    sig_push_dqual_reg : out STD_LOGIC;
    sig_first_dbeat_reg : out STD_LOGIC;
    sel : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \out\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    \sig_dbeat_cntr_reg[2]\ : in STD_LOGIC;
    sig_s_ready_out_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_last_dbeat_reg_0 : in STD_LOGIC;
    sig_first_dbeat_reg_0 : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    \sig_dbeat_cntr_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \sig_dbeat_cntr_reg[2]_0\ : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    sig_addr_posted_cntr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    sm_set_error_reg : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_fifo__parameterized5\ : entity is "axi_datamover_fifo";
end \axi_dma_ctrl_axi_datamover_fifo__parameterized5\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_fifo__parameterized5\ is
  signal sig_inhibit_rdy_n : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
begin
  sig_init_done <= \^sig_init_done\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized5\
     port map (
      D(4 downto 0) => D(4 downto 0),
      Q(0) => Q(0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(11 downto 0) => \out\(11 downto 0),
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr_reg[2]\,
      \sig_dbeat_cntr_reg[2]_0\ => \sig_dbeat_cntr_reg[2]_0\,
      \sig_dbeat_cntr_reg[4]\(4 downto 0) => \sig_dbeat_cntr_reg[4]\(4 downto 0),
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => sig_push_dqual_reg,
      sig_first_dbeat_reg => sig_first_dbeat_reg,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_0,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_last_dbeat_reg => sig_last_dbeat_reg,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_0,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg_reg => sel,
      sig_s_ready_out_reg => sig_s_ready_out_reg,
      sm_set_error_reg(10 downto 0) => sm_set_error_reg(10 downto 0)
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done\,
      I1 => sig_inhibit_rdy_n,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => sig_inhibit_rdy_n,
      R => SR(0)
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_init_reg2_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_sg_fifo__parameterized1\ is
  port (
    sig_init_done : out STD_LOGIC;
    m_axi_sg_bready : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_sg_fifo__parameterized1\ : entity is "axi_sg_fifo";
end \axi_dma_ctrl_axi_sg_fifo__parameterized1\;

architecture STRUCTURE of \axi_dma_ctrl_axi_sg_fifo__parameterized1\ is
  signal sig_inhibit_rdy_n : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done\ : STD_LOGIC;
begin
  sig_init_done <= \^sig_init_done\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.axi_dma_ctrl_srl_fifo_f
     port map (
      D(1 downto 0) => D(1 downto 0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0) => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ => \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\,
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(0) => Q(0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      \out\(0) => \out\(0),
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n => sig_inhibit_rdy_n,
      sig_stream_rst => sig_stream_rst
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done\,
      I1 => sig_inhibit_rdy_n,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => sig_inhibit_rdy_n,
      R => sig_stream_rst
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => \^sig_init_done\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_sg_fifo__parameterized2\ is
  port (
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    sig_init_done_0 : out STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \INFERRED_GEN.cnt_i_reg[0]_1\ : out STD_LOGIC;
    sig_push_coelsc_reg : out STD_LOGIC;
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sig_push_to_wsc_reg : out STD_LOGIC;
    p_4_out : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    \INFERRED_GEN.cnt_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_coelsc_reg_empty : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \INFERRED_GEN.cnt_i_reg[0]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_sg_fifo__parameterized2\ : entity is "axi_sg_fifo";
end \axi_dma_ctrl_axi_sg_fifo__parameterized2\;

architecture STRUCTURE of \axi_dma_ctrl_axi_sg_fifo__parameterized2\ is
  signal \^inferred_gen.cnt_i_reg[0]_1\ : STD_LOGIC;
  signal sig_inhibit_rdy_n_i_1_n_0 : STD_LOGIC;
  signal \^sig_init_done_0\ : STD_LOGIC;
begin
  \INFERRED_GEN.cnt_i_reg[0]_1\ <= \^inferred_gen.cnt_i_reg[0]_1\;
  sig_init_done_0 <= \^sig_init_done_0\;
\USE_SRL_FIFO.I_SYNC_FIFO\: entity work.\axi_dma_ctrl_srl_fifo_f__parameterized0\
     port map (
      D(2 downto 0) => D(2 downto 0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\,
      \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      \INFERRED_GEN.cnt_i_reg[0]\ => \INFERRED_GEN.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[0]_0\ => \INFERRED_GEN.cnt_i_reg[0]_0\,
      \INFERRED_GEN.cnt_i_reg[0]_1\(0) => \INFERRED_GEN.cnt_i_reg[0]_2\(0),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => \INFERRED_GEN.cnt_i_reg[2]\(0),
      Q(0) => Q(0),
      \in\(2 downto 0) => \in\(2 downto 0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      \out\(1 downto 0) => \out\(1 downto 0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_inhibit_rdy_n_reg => \^inferred_gen.cnt_i_reg[0]_1\,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_push_to_wsc_reg => sig_push_to_wsc_reg,
      sig_stream_rst => sig_stream_rst,
      sig_tlast_err_stop => sig_tlast_err_stop
    );
sig_inhibit_rdy_n_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_init_done_0\,
      I1 => \^inferred_gen.cnt_i_reg[0]_1\,
      O => sig_inhibit_rdy_n_i_1_n_0
    );
sig_inhibit_rdy_n_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_inhibit_rdy_n_i_1_n_0,
      Q => \^inferred_gen.cnt_i_reg[0]_1\,
      R => sig_stream_rst
    );
sig_init_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_init_reg_reg,
      Q => \^sig_init_done_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_addr_cntl is
  port (
    \out\ : out STD_LOGIC;
    sig_addr_reg_empty : out STD_LOGIC;
    sig_addr2rsc_calc_error : out STD_LOGIC;
    m_axi_mm2s_arsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_arvalid : out STD_LOGIC;
    sig_init_done : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    m_axi_mm2s_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_arlen : out STD_LOGIC_VECTOR ( 4 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_aclk : in STD_LOGIC;
    \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ : in STD_LOGIC;
    sig_data2addr_stop_req : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    m_axi_mm2s_arready : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_addr_cntl : entity is "axi_datamover_addr_cntl";
end axi_dma_ctrl_axi_datamover_addr_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_addr_cntl is
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_3\ : STD_LOGIC;
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_4\ : STD_LOGIC;
  signal p_1_out : STD_LOGIC_VECTOR ( 50 downto 4 );
  signal \^sig_addr2rsc_calc_error\ : STD_LOGIC;
  signal \^sig_addr_reg_empty\ : STD_LOGIC;
  signal sig_addr_reg_full : STD_LOGIC;
  signal sig_next_addr_reg0 : STD_LOGIC;
  signal sig_posted_to_axi : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_posted_to_axi : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_posted_to_axi : signal is "no";
  signal sig_posted_to_axi_2 : STD_LOGIC;
  attribute RTL_KEEP of sig_posted_to_axi_2 : signal is "true";
  attribute equivalent_register_removal of sig_posted_to_axi_2 : signal is "no";
  signal sig_push_addr_reg1_out : STD_LOGIC;
  attribute KEEP : string;
  attribute KEEP of sig_posted_to_axi_2_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_2_reg : label is "no";
  attribute KEEP of sig_posted_to_axi_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_reg : label is "no";
begin
  \out\ <= sig_posted_to_axi;
  sig_addr2rsc_calc_error <= \^sig_addr2rsc_calc_error\;
  sig_addr_reg_empty <= \^sig_addr_reg_empty\;
\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized1_18\
     port map (
      FIFO_Full_reg => FIFO_Full_reg,
      SR(0) => SR(0),
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      \out\(39) => p_1_out(50),
      \out\(38) => p_1_out(47),
      \out\(37) => p_1_out(45),
      \out\(36 downto 0) => p_1_out(40 downto 4),
      sig_addr_reg_empty_reg => \^sig_addr_reg_empty\,
      sig_addr_valid_reg_reg => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_4\,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ => \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\,
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_init_done => sig_init_done,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_reg => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_3\,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out
    );
sig_addr_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => '0',
      Q => \^sig_addr_reg_empty\,
      S => sig_next_addr_reg0
    );
sig_addr_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => sig_push_addr_reg1_out,
      Q => sig_addr_reg_full,
      R => sig_next_addr_reg0
    );
sig_addr_valid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_4\,
      Q => m_axi_mm2s_arvalid,
      R => sig_next_addr_reg0
    );
sig_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(50),
      Q => \^sig_addr2rsc_calc_error\,
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"40FF"
    )
        port map (
      I0 => \^sig_addr2rsc_calc_error\,
      I1 => m_axi_mm2s_arready,
      I2 => sig_addr_reg_full,
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(4),
      Q => m_axi_mm2s_araddr(0),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(14),
      Q => m_axi_mm2s_araddr(10),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(15),
      Q => m_axi_mm2s_araddr(11),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(16),
      Q => m_axi_mm2s_araddr(12),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(17),
      Q => m_axi_mm2s_araddr(13),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(18),
      Q => m_axi_mm2s_araddr(14),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(19),
      Q => m_axi_mm2s_araddr(15),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(20),
      Q => m_axi_mm2s_araddr(16),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(21),
      Q => m_axi_mm2s_araddr(17),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(22),
      Q => m_axi_mm2s_araddr(18),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(23),
      Q => m_axi_mm2s_araddr(19),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(5),
      Q => m_axi_mm2s_araddr(1),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(24),
      Q => m_axi_mm2s_araddr(20),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(25),
      Q => m_axi_mm2s_araddr(21),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(26),
      Q => m_axi_mm2s_araddr(22),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(27),
      Q => m_axi_mm2s_araddr(23),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(28),
      Q => m_axi_mm2s_araddr(24),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(29),
      Q => m_axi_mm2s_araddr(25),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(30),
      Q => m_axi_mm2s_araddr(26),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(31),
      Q => m_axi_mm2s_araddr(27),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(32),
      Q => m_axi_mm2s_araddr(28),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(33),
      Q => m_axi_mm2s_araddr(29),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(6),
      Q => m_axi_mm2s_araddr(2),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(34),
      Q => m_axi_mm2s_araddr(30),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(35),
      Q => m_axi_mm2s_araddr(31),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(7),
      Q => m_axi_mm2s_araddr(3),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(8),
      Q => m_axi_mm2s_araddr(4),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(9),
      Q => m_axi_mm2s_araddr(5),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(10),
      Q => m_axi_mm2s_araddr(6),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(11),
      Q => m_axi_mm2s_araddr(7),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(12),
      Q => m_axi_mm2s_araddr(8),
      R => sig_next_addr_reg0
    );
\sig_next_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(13),
      Q => m_axi_mm2s_araddr(9),
      R => sig_next_addr_reg0
    );
\sig_next_burst_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(47),
      Q => m_axi_mm2s_arburst(0),
      R => sig_next_addr_reg0
    );
\sig_next_len_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(36),
      Q => m_axi_mm2s_arlen(0),
      R => sig_next_addr_reg0
    );
\sig_next_len_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(37),
      Q => m_axi_mm2s_arlen(1),
      R => sig_next_addr_reg0
    );
\sig_next_len_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(38),
      Q => m_axi_mm2s_arlen(2),
      R => sig_next_addr_reg0
    );
\sig_next_len_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(39),
      Q => m_axi_mm2s_arlen(3),
      R => sig_next_addr_reg0
    );
\sig_next_len_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(40),
      Q => m_axi_mm2s_arlen(4),
      R => sig_next_addr_reg0
    );
\sig_next_size_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(45),
      Q => m_axi_mm2s_arsize(0),
      R => sig_next_addr_reg0
    );
sig_posted_to_axi_2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_3\,
      Q => sig_posted_to_axi_2,
      R => '0'
    );
sig_posted_to_axi_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_3\,
      Q => sig_posted_to_axi,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \axi_dma_ctrl_axi_datamover_addr_cntl__parameterized0\ is
  port (
    \out\ : out STD_LOGIC;
    sig_addr_reg_empty : out STD_LOGIC;
    sig_addr2wsc_calc_error : out STD_LOGIC;
    m_axi_s2mm_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_awburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_awvalid : out STD_LOGIC;
    sig_init_done : out STD_LOGIC;
    sig_wr_fifo : out STD_LOGIC;
    m_axi_s2mm_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_awlen : out STD_LOGIC_VECTOR ( 4 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    sig_halt_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    m_axi_s2mm_awready : in STD_LOGIC;
    sig_halt_reg_reg : in STD_LOGIC;
    sig_mstr2addr_cmd_valid : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 38 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \axi_dma_ctrl_axi_datamover_addr_cntl__parameterized0\ : entity is "axi_datamover_addr_cntl";
end \axi_dma_ctrl_axi_datamover_addr_cntl__parameterized0\;

architecture STRUCTURE of \axi_dma_ctrl_axi_datamover_addr_cntl__parameterized0\ is
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_1\ : STD_LOGIC;
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_42\ : STD_LOGIC;
  signal p_1_out : STD_LOGIC_VECTOR ( 50 downto 4 );
  signal \^sig_addr2wsc_calc_error\ : STD_LOGIC;
  signal \^sig_addr_reg_empty\ : STD_LOGIC;
  signal sig_addr_reg_full : STD_LOGIC;
  signal \sig_next_addr_reg[31]_i_1__0_n_0\ : STD_LOGIC;
  signal sig_posted_to_axi : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sig_posted_to_axi : signal is "true";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of sig_posted_to_axi : signal is "no";
  signal sig_posted_to_axi_2 : STD_LOGIC;
  attribute RTL_KEEP of sig_posted_to_axi_2 : signal is "true";
  attribute equivalent_register_removal of sig_posted_to_axi_2 : signal is "no";
  signal sig_push_addr_reg1_out : STD_LOGIC;
  attribute KEEP : string;
  attribute KEEP of sig_posted_to_axi_2_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_2_reg : label is "no";
  attribute KEEP of sig_posted_to_axi_reg : label is "yes";
  attribute equivalent_register_removal of sig_posted_to_axi_reg : label is "no";
begin
  \out\ <= sig_posted_to_axi;
  sig_addr2wsc_calc_error <= \^sig_addr2wsc_calc_error\;
  sig_addr_reg_empty <= \^sig_addr_reg_empty\;
\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized1\
     port map (
      SR(0) => SR(0),
      \in\(38 downto 0) => \in\(38 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(39) => p_1_out(50),
      \out\(38) => p_1_out(47),
      \out\(37) => p_1_out(45),
      \out\(36 downto 0) => p_1_out(40 downto 4),
      sel => sig_wr_fifo,
      sig_addr_reg_empty_reg => \^sig_addr_reg_empty\,
      sig_addr_valid_reg_reg => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_1\,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_reg => sig_halt_reg_reg,
      sig_init_done => sig_init_done,
      sig_init_reg2_reg => sig_init_reg2_reg,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_posted_to_axi_2_reg => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_42\,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out
    );
sig_addr_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => '0',
      Q => \^sig_addr_reg_empty\,
      S => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
sig_addr_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => sig_push_addr_reg1_out,
      Q => sig_addr_reg_full,
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
sig_addr_valid_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_1\,
      Q => m_axi_s2mm_awvalid,
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
sig_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(50),
      Q => \^sig_addr2wsc_calc_error\,
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg[31]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"40FF"
    )
        port map (
      I0 => \^sig_addr2wsc_calc_error\,
      I1 => sig_addr_reg_full,
      I2 => m_axi_s2mm_awready,
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(4),
      Q => m_axi_s2mm_awaddr(0),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(14),
      Q => m_axi_s2mm_awaddr(10),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(15),
      Q => m_axi_s2mm_awaddr(11),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(16),
      Q => m_axi_s2mm_awaddr(12),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(17),
      Q => m_axi_s2mm_awaddr(13),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(18),
      Q => m_axi_s2mm_awaddr(14),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(19),
      Q => m_axi_s2mm_awaddr(15),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(20),
      Q => m_axi_s2mm_awaddr(16),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(21),
      Q => m_axi_s2mm_awaddr(17),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(22),
      Q => m_axi_s2mm_awaddr(18),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(23),
      Q => m_axi_s2mm_awaddr(19),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(5),
      Q => m_axi_s2mm_awaddr(1),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(24),
      Q => m_axi_s2mm_awaddr(20),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(25),
      Q => m_axi_s2mm_awaddr(21),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(26),
      Q => m_axi_s2mm_awaddr(22),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(27),
      Q => m_axi_s2mm_awaddr(23),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(28),
      Q => m_axi_s2mm_awaddr(24),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(29),
      Q => m_axi_s2mm_awaddr(25),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(30),
      Q => m_axi_s2mm_awaddr(26),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(31),
      Q => m_axi_s2mm_awaddr(27),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(32),
      Q => m_axi_s2mm_awaddr(28),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(33),
      Q => m_axi_s2mm_awaddr(29),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(6),
      Q => m_axi_s2mm_awaddr(2),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(34),
      Q => m_axi_s2mm_awaddr(30),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(35),
      Q => m_axi_s2mm_awaddr(31),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(7),
      Q => m_axi_s2mm_awaddr(3),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(8),
      Q => m_axi_s2mm_awaddr(4),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(9),
      Q => m_axi_s2mm_awaddr(5),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(10),
      Q => m_axi_s2mm_awaddr(6),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(11),
      Q => m_axi_s2mm_awaddr(7),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(12),
      Q => m_axi_s2mm_awaddr(8),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_addr_reg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(13),
      Q => m_axi_s2mm_awaddr(9),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_burst_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(47),
      Q => m_axi_s2mm_awburst(0),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_len_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(36),
      Q => m_axi_s2mm_awlen(0),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_len_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(37),
      Q => m_axi_s2mm_awlen(1),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_len_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(38),
      Q => m_axi_s2mm_awlen(2),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_len_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(39),
      Q => m_axi_s2mm_awlen(3),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_len_reg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(40),
      Q => m_axi_s2mm_awlen(4),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
\sig_next_size_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_addr_reg1_out,
      D => p_1_out(45),
      Q => m_axi_s2mm_awsize(0),
      R => \sig_next_addr_reg[31]_i_1__0_n_0\
    );
sig_posted_to_axi_2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_42\,
      Q => sig_posted_to_axi_2,
      R => '0'
    );
sig_posted_to_axi_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_42\,
      Q => sig_posted_to_axi,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_rddata_cntl is
  port (
    sig_coelsc_tag_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    sig_data2rsc_valid : out STD_LOGIC;
    sig_data2addr_stop_req : out STD_LOGIC;
    sig_halt_reg_dly2 : out STD_LOGIC;
    sig_halt_reg_dly3 : out STD_LOGIC;
    sig_data2rsc_calc_err : out STD_LOGIC;
    sig_data2rsc_slverr : out STD_LOGIC;
    sig_init_done : out STD_LOGIC;
    sig_rd_sts_decerr_reg0 : out STD_LOGIC;
    FIFO_Full_reg : out STD_LOGIC;
    sig_s_ready_dup_reg : out STD_LOGIC;
    sig_s_ready_dup_reg_0 : out STD_LOGIC;
    sig_m_valid_dup_reg : out STD_LOGIC;
    sig_slast_with_stop : out STD_LOGIC;
    m_axi_mm2s_rready : out STD_LOGIC;
    \sig_strb_reg_out_reg[3]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_strb_skid_reg_reg[3]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_sstrb_stop_mask_reg[3]\ : out STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_sstrb_stop_mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_reset_reg : in STD_LOGIC;
    sig_mvalid_stop : in STD_LOGIC;
    sig_m_valid_dup_reg_0 : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    sig_s_ready_out_reg : in STD_LOGIC;
    m_axi_mm2s_rvalid : in STD_LOGIC;
    sig_stat2rsc_status_ready : in STD_LOGIC;
    sig_rsc2stat_status_valid : in STD_LOGIC;
    m_axi_mm2s_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_rsc2data_ready : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 10 downto 0 );
    sig_rst2all_stop_request : in STD_LOGIC;
    sig_posted_to_axi_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_rddata_cntl : entity is "axi_datamover_rddata_cntl";
end axi_dma_ctrl_axi_datamover_rddata_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_rddata_cntl is
  signal \ENABLE_AXIS_SKID.I_MM2S_SKID_BUF/sig_mvalid_stop_set\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_1\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_26\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_27\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\ : STD_LOGIC;
  signal p_1_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal sig_addr_posted_cntr : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \sig_addr_posted_cntr[0]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr[1]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr[2]_i_1_n_0\ : STD_LOGIC;
  signal sig_clr_dqual_reg : STD_LOGIC;
  signal sig_cmd_cmplt_last_dbeat : STD_LOGIC;
  signal sig_cmd_fifo_data_out : STD_LOGIC_VECTOR ( 26 downto 0 );
  signal sig_coelsc_decerr_reg0 : STD_LOGIC;
  signal sig_coelsc_interr_reg0 : STD_LOGIC;
  signal sig_coelsc_slverr_reg0 : STD_LOGIC;
  signal sig_coelsc_tag_reg0 : STD_LOGIC;
  signal \^sig_data2addr_stop_req\ : STD_LOGIC;
  signal \^sig_data2rsc_calc_err\ : STD_LOGIC;
  signal sig_data2rsc_decerr : STD_LOGIC;
  signal \^sig_data2rsc_slverr\ : STD_LOGIC;
  signal \^sig_data2rsc_valid\ : STD_LOGIC;
  signal sig_dbeat_cntr : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \sig_dbeat_cntr[4]_i_2_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_3_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr_eq_1__3\ : STD_LOGIC;
  signal sig_dqual_reg_empty : STD_LOGIC;
  signal sig_dqual_reg_full : STD_LOGIC;
  signal sig_first_dbeat_reg_n_0 : STD_LOGIC;
  signal \sig_good_mmap_dbeat10_out__0\ : STD_LOGIC;
  signal sig_halt_reg_dly1 : STD_LOGIC;
  signal \^sig_halt_reg_dly2\ : STD_LOGIC;
  signal \^sig_halt_reg_dly3\ : STD_LOGIC;
  signal sig_halt_reg_i_1_n_0 : STD_LOGIC;
  signal sig_last_dbeat_i_3_n_0 : STD_LOGIC;
  signal sig_last_dbeat_i_6_n_0 : STD_LOGIC;
  signal sig_last_dbeat_reg_n_0 : STD_LOGIC;
  signal sig_last_mmap_dbeat : STD_LOGIC;
  signal sig_last_mmap_dbeat_reg_reg_n_0 : STD_LOGIC;
  signal sig_ld_new_cmd_reg : STD_LOGIC;
  signal sig_m_valid_dup_i_3_n_0 : STD_LOGIC;
  signal sig_m_valid_dup_i_4_n_0 : STD_LOGIC;
  signal sig_next_calc_error_reg : STD_LOGIC;
  signal sig_next_cmd_cmplt_reg : STD_LOGIC;
  signal sig_next_eof_reg : STD_LOGIC;
  signal sig_next_last_strb_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_next_strt_strb_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_next_tag_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_push_coelsc_reg : STD_LOGIC;
  signal sig_push_dqual_reg : STD_LOGIC;
  signal sig_s_ready_dup_i_2_n_0 : STD_LOGIC;
  signal sig_s_ready_dup_i_3_n_0 : STD_LOGIC;
  signal \^sig_s_ready_dup_reg_0\ : STD_LOGIC;
  signal \sig_strb_reg_out[3]_i_2_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of m_axi_mm2s_rready_INST_0_i_1 : label is "soft_lutpair154";
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[1]_i_1\ : label is "soft_lutpair151";
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[2]_i_1\ : label is "soft_lutpair151";
  attribute SOFT_HLUTNM of sig_coelsc_decerr_reg_i_1 : label is "soft_lutpair153";
  attribute SOFT_HLUTNM of sig_coelsc_interr_reg_i_1 : label is "soft_lutpair154";
  attribute SOFT_HLUTNM of sig_coelsc_slverr_reg_i_1 : label is "soft_lutpair153";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[7]_i_3\ : label is "soft_lutpair150";
  attribute SOFT_HLUTNM of sig_halt_reg_i_1 : label is "soft_lutpair152";
  attribute SOFT_HLUTNM of sig_last_dbeat_i_6 : label is "soft_lutpair150";
  attribute SOFT_HLUTNM of sig_m_valid_dup_i_2 : label is "soft_lutpair149";
  attribute SOFT_HLUTNM of \sig_sstrb_stop_mask[3]_i_1\ : label is "soft_lutpair149";
  attribute SOFT_HLUTNM of \sig_strb_reg_out[3]_i_2\ : label is "soft_lutpair152";
begin
  sig_data2addr_stop_req <= \^sig_data2addr_stop_req\;
  sig_data2rsc_calc_err <= \^sig_data2rsc_calc_err\;
  sig_data2rsc_slverr <= \^sig_data2rsc_slverr\;
  sig_data2rsc_valid <= \^sig_data2rsc_valid\;
  sig_halt_reg_dly2 <= \^sig_halt_reg_dly2\;
  sig_halt_reg_dly3 <= \^sig_halt_reg_dly3\;
  sig_s_ready_dup_reg_0 <= \^sig_s_ready_dup_reg_0\;
\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized2\
     port map (
      D(7 downto 0) => p_1_in(7 downto 0),
      E(0) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      FIFO_Full_reg => FIFO_Full_reg,
      Q(7 downto 0) => sig_dbeat_cntr(7 downto 0),
      SR(0) => SR(0),
      \in\(10 downto 0) => \in\(10 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      \out\(11 downto 10) => sig_cmd_fifo_data_out(26 downto 25),
      \out\(9) => sig_cmd_fifo_data_out(23),
      \out\(8 downto 1) => sig_cmd_fifo_data_out(21 downto 14),
      \out\(0) => sig_cmd_fifo_data_out(0),
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ => \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\,
      \sig_dbeat_cntr_eq_1__3\ => \sig_dbeat_cntr_eq_1__3\,
      \sig_dbeat_cntr_reg[2]\ => \sig_dbeat_cntr[4]_i_2_n_0\,
      \sig_dbeat_cntr_reg[3]\ => \sig_dbeat_cntr[7]_i_3_n_0\,
      \sig_dbeat_cntr_reg[4]\ => sig_last_dbeat_i_3_n_0,
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_full => sig_dqual_reg_full,
      sig_first_dbeat_reg => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_1\,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_n_0,
      \sig_good_mmap_dbeat10_out__0\ => \sig_good_mmap_dbeat10_out__0\,
      sig_init_done => sig_init_done,
      sig_last_dbeat_reg => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_27\,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_n_0,
      sig_ld_new_cmd_reg => sig_ld_new_cmd_reg,
      sig_ld_new_cmd_reg_reg => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_26\,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_next_eof_reg_reg(0) => sig_clr_dqual_reg,
      sig_push_dqual_reg => sig_push_dqual_reg,
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
m_axi_mm2s_rready_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E0"
    )
        port map (
      I0 => sig_s_ready_out_reg,
      I1 => \^sig_data2addr_stop_req\,
      I2 => sig_dqual_reg_full,
      I3 => \^sig_data2rsc_valid\,
      I4 => \^sig_s_ready_dup_reg_0\,
      O => m_axi_mm2s_rready
    );
m_axi_mm2s_rready_INST_0_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF01"
    )
        port map (
      I0 => sig_addr_posted_cntr(2),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(0),
      I3 => sig_next_calc_error_reg,
      O => \^sig_s_ready_dup_reg_0\
    );
\sig_addr_posted_cntr[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D9996664"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg_reg_n_0,
      I1 => sig_posted_to_axi_reg,
      I2 => sig_addr_posted_cntr(2),
      I3 => sig_addr_posted_cntr(1),
      I4 => sig_addr_posted_cntr(0),
      O => \sig_addr_posted_cntr[0]_i_1_n_0\
    );
\sig_addr_posted_cntr[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CC98E6CC"
    )
        port map (
      I0 => sig_addr_posted_cntr(0),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(2),
      I3 => sig_posted_to_axi_reg,
      I4 => sig_last_mmap_dbeat_reg_reg_n_0,
      O => \sig_addr_posted_cntr[1]_i_1_n_0\
    );
\sig_addr_posted_cntr[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0E0F8F0"
    )
        port map (
      I0 => sig_addr_posted_cntr(0),
      I1 => sig_addr_posted_cntr(1),
      I2 => sig_addr_posted_cntr(2),
      I3 => sig_posted_to_axi_reg,
      I4 => sig_last_mmap_dbeat_reg_reg_n_0,
      O => \sig_addr_posted_cntr[2]_i_1_n_0\
    );
\sig_addr_posted_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[0]_i_1_n_0\,
      Q => sig_addr_posted_cntr(0),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[1]_i_1_n_0\,
      Q => sig_addr_posted_cntr(1),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[2]_i_1_n_0\,
      Q => sig_addr_posted_cntr(2),
      R => SR(0)
    );
sig_coelsc_decerr_reg_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF80"
    )
        port map (
      I0 => m_axi_mm2s_rresp(0),
      I1 => m_axi_mm2s_rresp(1),
      I2 => m_axi_mm2s_rvalid,
      I3 => sig_data2rsc_decerr,
      O => sig_coelsc_decerr_reg0
    );
sig_coelsc_decerr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_coelsc_decerr_reg0,
      Q => sig_data2rsc_decerr,
      R => sig_coelsc_tag_reg0
    );
sig_coelsc_interr_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_next_calc_error_reg,
      I1 => \^sig_data2rsc_calc_err\,
      O => sig_coelsc_interr_reg0
    );
sig_coelsc_interr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_coelsc_interr_reg0,
      Q => \^sig_data2rsc_calc_err\,
      R => sig_coelsc_tag_reg0
    );
sig_coelsc_reg_full_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => sig_next_cmd_cmplt_reg,
      I1 => m_axi_mm2s_rlast,
      I2 => sig_next_calc_error_reg,
      O => sig_cmd_cmplt_last_dbeat
    );
sig_coelsc_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_cmd_cmplt_last_dbeat,
      Q => \^sig_data2rsc_valid\,
      R => sig_coelsc_tag_reg0
    );
sig_coelsc_slverr_reg_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF40"
    )
        port map (
      I0 => m_axi_mm2s_rresp(0),
      I1 => m_axi_mm2s_rresp(1),
      I2 => m_axi_mm2s_rvalid,
      I3 => \^sig_data2rsc_slverr\,
      O => sig_coelsc_slverr_reg0
    );
sig_coelsc_slverr_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_coelsc_slverr_reg0,
      Q => \^sig_data2rsc_slverr\,
      R => sig_coelsc_tag_reg0
    );
\sig_coelsc_tag_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7000FFFF"
    )
        port map (
      I0 => sig_ld_new_cmd_reg,
      I1 => sig_next_calc_error_reg,
      I2 => sig_rsc2data_ready,
      I3 => \^sig_data2rsc_valid\,
      I4 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_coelsc_tag_reg0
    );
\sig_coelsc_tag_reg[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F444"
    )
        port map (
      I0 => \^sig_data2rsc_valid\,
      I1 => \sig_good_mmap_dbeat10_out__0\,
      I2 => sig_next_calc_error_reg,
      I3 => sig_ld_new_cmd_reg,
      O => sig_push_coelsc_reg
    );
\sig_coelsc_tag_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_next_tag_reg(0),
      Q => sig_coelsc_tag_reg(0),
      R => sig_coelsc_tag_reg0
    );
\sig_dbeat_cntr[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => sig_dbeat_cntr(2),
      I1 => sig_dbeat_cntr(1),
      I2 => sig_dbeat_cntr(0),
      I3 => sig_dbeat_cntr(3),
      O => \sig_dbeat_cntr[4]_i_2_n_0\
    );
\sig_dbeat_cntr[7]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => sig_dbeat_cntr(3),
      I1 => sig_dbeat_cntr(0),
      I2 => sig_dbeat_cntr(1),
      I3 => sig_dbeat_cntr(2),
      I4 => sig_dbeat_cntr(4),
      O => \sig_dbeat_cntr[7]_i_3_n_0\
    );
\sig_dbeat_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(0),
      Q => sig_dbeat_cntr(0),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(1),
      Q => sig_dbeat_cntr(1),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(2),
      Q => sig_dbeat_cntr(2),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(3),
      Q => sig_dbeat_cntr(3),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(4),
      Q => sig_dbeat_cntr(4),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(5),
      Q => sig_dbeat_cntr(5),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(6),
      Q => sig_dbeat_cntr(6),
      R => SR(0)
    );
\sig_dbeat_cntr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5\,
      D => p_1_in(7),
      Q => sig_dbeat_cntr(7),
      R => SR(0)
    );
sig_dqual_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => '0',
      Q => sig_dqual_reg_empty,
      S => sig_clr_dqual_reg
    );
sig_dqual_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_push_dqual_reg,
      Q => sig_dqual_reg_full,
      R => sig_clr_dqual_reg
    );
sig_first_dbeat_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_1\,
      Q => sig_first_dbeat_reg_n_0,
      R => '0'
    );
sig_halt_reg_dly1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \^sig_data2addr_stop_req\,
      Q => sig_halt_reg_dly1,
      R => SR(0)
    );
sig_halt_reg_dly2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_halt_reg_dly1,
      Q => \^sig_halt_reg_dly2\,
      R => SR(0)
    );
sig_halt_reg_dly3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \^sig_halt_reg_dly2\,
      Q => \^sig_halt_reg_dly3\,
      R => SR(0)
    );
sig_halt_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_rst2all_stop_request,
      I1 => \^sig_data2addr_stop_req\,
      O => sig_halt_reg_i_1_n_0
    );
sig_halt_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_halt_reg_i_1_n_0,
      Q => \^sig_data2addr_stop_req\,
      R => SR(0)
    );
sig_last_dbeat_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF2"
    )
        port map (
      I0 => sig_last_dbeat_i_6_n_0,
      I1 => sig_dbeat_cntr(4),
      I2 => sig_dbeat_cntr(6),
      I3 => sig_dbeat_cntr(7),
      I4 => sig_dbeat_cntr(5),
      I5 => \sig_dbeat_cntr[7]_i_3_n_0\,
      O => sig_last_dbeat_i_3_n_0
    );
sig_last_dbeat_i_5: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00010000"
    )
        port map (
      I0 => sig_dbeat_cntr(6),
      I1 => sig_dbeat_cntr(7),
      I2 => sig_dbeat_cntr(4),
      I3 => sig_dbeat_cntr(5),
      I4 => sig_last_dbeat_i_6_n_0,
      O => \sig_dbeat_cntr_eq_1__3\
    );
sig_last_dbeat_i_6: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => sig_dbeat_cntr(1),
      I1 => sig_dbeat_cntr(0),
      I2 => sig_dbeat_cntr(3),
      I3 => sig_dbeat_cntr(2),
      O => sig_last_dbeat_i_6_n_0
    );
sig_last_dbeat_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_27\,
      Q => sig_last_dbeat_reg_n_0,
      R => '0'
    );
sig_last_mmap_dbeat_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axi_mm2s_rlast,
      I1 => \sig_good_mmap_dbeat10_out__0\,
      O => sig_last_mmap_dbeat
    );
sig_last_mmap_dbeat_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => sig_last_mmap_dbeat,
      Q => sig_last_mmap_dbeat_reg_reg_n_0,
      R => SR(0)
    );
sig_last_skid_reg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF8888F888"
    )
        port map (
      I0 => sig_next_eof_reg,
      I1 => m_axi_mm2s_rlast,
      I2 => sig_dqual_reg_full,
      I3 => \^sig_data2addr_stop_req\,
      I4 => \^sig_s_ready_dup_reg_0\,
      I5 => sig_sstrb_stop_mask(0),
      O => sig_slast_with_stop
    );
sig_ld_new_cmd_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => '1',
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_26\,
      Q => sig_ld_new_cmd_reg,
      R => '0'
    );
sig_m_valid_dup_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01000000"
    )
        port map (
      I0 => \ENABLE_AXIS_SKID.I_MM2S_SKID_BUF/sig_mvalid_stop_set\,
      I1 => sig_reset_reg,
      I2 => sig_mvalid_stop,
      I3 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I4 => sig_m_valid_dup_i_3_n_0,
      O => sig_m_valid_dup_reg
    );
sig_m_valid_dup_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F200F0F0"
    )
        port map (
      I0 => \^sig_halt_reg_dly2\,
      I1 => \^sig_halt_reg_dly3\,
      I2 => sig_sstrb_stop_mask(0),
      I3 => m_axis_mm2s_tready,
      I4 => sig_m_valid_dup_reg_0,
      O => \ENABLE_AXIS_SKID.I_MM2S_SKID_BUF/sig_mvalid_stop_set\
    );
sig_m_valid_dup_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4040FF40FF40FF40"
    )
        port map (
      I0 => \^sig_s_ready_dup_reg_0\,
      I1 => sig_m_valid_dup_i_4_n_0,
      I2 => sig_dqual_reg_full,
      I3 => sig_m_valid_dup_reg_0,
      I4 => \out\,
      I5 => m_axis_mm2s_tready,
      O => sig_m_valid_dup_i_3_n_0
    );
sig_m_valid_dup_i_4: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => \^sig_data2rsc_valid\,
      I1 => m_axi_mm2s_rvalid,
      I2 => \^sig_data2addr_stop_req\,
      O => sig_m_valid_dup_i_4_n_0
    );
sig_next_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(26),
      Q => sig_next_calc_error_reg,
      R => sig_clr_dqual_reg
    );
sig_next_cmd_cmplt_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(25),
      Q => sig_next_cmd_cmplt_reg,
      R => sig_clr_dqual_reg
    );
sig_next_eof_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(23),
      Q => sig_next_eof_reg,
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(18),
      Q => sig_next_last_strb_reg(0),
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(19),
      Q => sig_next_last_strb_reg(1),
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(20),
      Q => sig_next_last_strb_reg(2),
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(21),
      Q => sig_next_last_strb_reg(3),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(14),
      Q => sig_next_strt_strb_reg(0),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(15),
      Q => sig_next_strt_strb_reg(1),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(16),
      Q => sig_next_strt_strb_reg(2),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(17),
      Q => sig_next_strt_strb_reg(3),
      R => sig_clr_dqual_reg
    );
\sig_next_tag_reg[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000E000000"
    )
        port map (
      I0 => sig_s_ready_out_reg,
      I1 => \^sig_data2addr_stop_req\,
      I2 => \^sig_data2rsc_valid\,
      I3 => sig_dqual_reg_full,
      I4 => m_axi_mm2s_rvalid,
      I5 => \^sig_s_ready_dup_reg_0\,
      O => \sig_good_mmap_dbeat10_out__0\
    );
\sig_next_tag_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_mm2s_aclk,
      CE => sig_push_dqual_reg,
      D => sig_cmd_fifo_data_out(0),
      Q => sig_next_tag_reg(0),
      R => sig_clr_dqual_reg
    );
sig_rd_sts_decerr_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_data2rsc_decerr,
      I1 => D(0),
      O => sig_rd_sts_decerr_reg0
    );
sig_s_ready_dup_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00004404"
    )
        port map (
      I0 => sig_sstrb_stop_mask(0),
      I1 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I2 => sig_s_ready_dup_i_2_n_0,
      I3 => \^sig_s_ready_dup_reg_0\,
      I4 => sig_s_ready_dup_i_3_n_0,
      O => sig_s_ready_dup_reg
    );
sig_s_ready_dup_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0400040004040400"
    )
        port map (
      I0 => E(0),
      I1 => sig_dqual_reg_full,
      I2 => sig_reset_reg,
      I3 => \^sig_data2addr_stop_req\,
      I4 => m_axi_mm2s_rvalid,
      I5 => \^sig_data2rsc_valid\,
      O => sig_s_ready_dup_i_2_n_0
    );
sig_s_ready_dup_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01FF0101"
    )
        port map (
      I0 => sig_reset_reg,
      I1 => \out\,
      I2 => m_axis_mm2s_tready,
      I3 => \^sig_halt_reg_dly3\,
      I4 => \^sig_halt_reg_dly2\,
      O => sig_s_ready_dup_i_3_n_0
    );
\sig_sstrb_stop_mask[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => \^sig_halt_reg_dly3\,
      I1 => \^sig_halt_reg_dly2\,
      I2 => sig_sstrb_stop_mask(0),
      O => \sig_sstrb_stop_mask_reg[3]\
    );
\sig_strb_reg_out[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCACFCFCFCACACAC"
    )
        port map (
      I0 => \sig_strb_reg_out[3]_i_2_n_0\,
      I1 => Q(0),
      I2 => \out\,
      I3 => sig_next_strt_strb_reg(0),
      I4 => sig_first_dbeat_reg_n_0,
      I5 => sig_next_last_strb_reg(0),
      O => \sig_strb_reg_out_reg[3]\(0)
    );
\sig_strb_reg_out[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCACFCFCFCACACAC"
    )
        port map (
      I0 => \sig_strb_reg_out[3]_i_2_n_0\,
      I1 => Q(1),
      I2 => \out\,
      I3 => sig_next_strt_strb_reg(1),
      I4 => sig_first_dbeat_reg_n_0,
      I5 => sig_next_last_strb_reg(1),
      O => \sig_strb_reg_out_reg[3]\(1)
    );
\sig_strb_reg_out[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCACFCFCFCACACAC"
    )
        port map (
      I0 => \sig_strb_reg_out[3]_i_2_n_0\,
      I1 => Q(2),
      I2 => \out\,
      I3 => sig_next_strt_strb_reg(2),
      I4 => sig_first_dbeat_reg_n_0,
      I5 => sig_next_last_strb_reg(2),
      O => \sig_strb_reg_out_reg[3]\(2)
    );
\sig_strb_reg_out[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCACFCFCFCACACAC"
    )
        port map (
      I0 => \sig_strb_reg_out[3]_i_2_n_0\,
      I1 => Q(3),
      I2 => \out\,
      I3 => sig_next_strt_strb_reg(3),
      I4 => sig_first_dbeat_reg_n_0,
      I5 => sig_next_last_strb_reg(3),
      O => \sig_strb_reg_out_reg[3]\(3)
    );
\sig_strb_reg_out[3]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFAB"
    )
        port map (
      I0 => \^sig_data2addr_stop_req\,
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_last_dbeat_reg_n_0,
      I3 => sig_sstrb_stop_mask(0),
      O => \sig_strb_reg_out[3]_i_2_n_0\
    );
\sig_strb_skid_reg[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFCFCFAFF"
    )
        port map (
      I0 => sig_next_last_strb_reg(0),
      I1 => sig_next_strt_strb_reg(0),
      I2 => sig_sstrb_stop_mask(0),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_first_dbeat_reg_n_0,
      I5 => \^sig_data2addr_stop_req\,
      O => \sig_strb_skid_reg_reg[3]\(0)
    );
\sig_strb_skid_reg[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFCFCFAFF"
    )
        port map (
      I0 => sig_next_last_strb_reg(1),
      I1 => sig_next_strt_strb_reg(1),
      I2 => sig_sstrb_stop_mask(0),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_first_dbeat_reg_n_0,
      I5 => \^sig_data2addr_stop_req\,
      O => \sig_strb_skid_reg_reg[3]\(1)
    );
\sig_strb_skid_reg[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFCFCFAFF"
    )
        port map (
      I0 => sig_next_last_strb_reg(2),
      I1 => sig_next_strt_strb_reg(2),
      I2 => sig_sstrb_stop_mask(0),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_first_dbeat_reg_n_0,
      I5 => \^sig_data2addr_stop_req\,
      O => \sig_strb_skid_reg_reg[3]\(2)
    );
\sig_strb_skid_reg[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFCFCFAFF"
    )
        port map (
      I0 => sig_next_last_strb_reg(3),
      I1 => sig_next_strt_strb_reg(3),
      I2 => sig_sstrb_stop_mask(0),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_first_dbeat_reg_n_0,
      I5 => \^sig_data2addr_stop_req\,
      O => \sig_strb_skid_reg_reg[3]\(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_wr_status_cntl is
  port (
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    sig_halt_reg_dly2_reg : out STD_LOGIC;
    sig_halt_reg : out STD_LOGIC;
    sig_wsc2stat_status_valid : out STD_LOGIC;
    sig_init_done : out STD_LOGIC;
    sig_init_done_0 : out STD_LOGIC;
    m_axi_s2mm_bready : out STD_LOGIC;
    sig_inhibit_rdy_n : out STD_LOGIC;
    sig_halt_cmplt_reg : out STD_LOGIC;
    sig_halt_cmplt_reg_0 : out STD_LOGIC;
    sig_halt_cmplt_reg_1 : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_init_reg2_reg : in STD_LOGIC;
    sig_init_reg2_reg_0 : in STD_LOGIC;
    sig_stat2wsc_status_ready : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    m_axi_s2mm_bvalid : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_addr2wsc_calc_error : in STD_LOGIC;
    sig_addr_reg_empty : in STD_LOGIC;
    sig_data2all_tlast_error : in STD_LOGIC;
    sig_next_calc_error_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_s_h_halt_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_wr_status_cntl : entity is "axi_datamover_wr_status_cntl";
end axi_dma_ctrl_axi_datamover_wr_status_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_wr_status_cntl is
  signal \^d\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_10\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_11\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_14\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_6\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_8\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_9\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_1 : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_2 : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_3 : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_4 : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_5 : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_8 : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal \sig_addr_posted_cntr[0]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr_reg__0\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_coelsc_reg_empty : STD_LOGIC;
  signal sig_dcntl_sfifo_out : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^sig_halt_reg\ : STD_LOGIC;
  signal sig_halt_reg_i_1_n_0 : STD_LOGIC;
  signal sig_push_coelsc_reg : STD_LOGIC;
  signal sig_rd_empty : STD_LOGIC;
  signal sig_statcnt_gt_eq_thres : STD_LOGIC;
  signal \sig_wdc_statcnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \sig_wdc_statcnt_reg__0\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_wdc_status_going_full : STD_LOGIC;
  signal \^sig_wsc2stat_status_valid\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[0]_i_1\ : label is "soft_lutpair180";
  attribute SOFT_HLUTNM of sig_halt_cmplt_i_2 : label is "soft_lutpair180";
  attribute SOFT_HLUTNM of sig_halt_cmplt_i_3 : label is "soft_lutpair181";
  attribute SOFT_HLUTNM of sig_halt_reg_i_1 : label is "soft_lutpair181";
begin
  D(3 downto 0) <= \^d\(3 downto 0);
  sig_halt_reg <= \^sig_halt_reg\;
  sig_wsc2stat_status_valid <= \^sig_wsc2stat_status_valid\;
\GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized4\
     port map (
      D(2) => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_9\,
      D(1) => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_10\,
      D(0) => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_11\,
      E(0) => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_8\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\(0) => \^d\(1),
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      \INFERRED_GEN.cnt_i_reg[0]\ => \INFERRED_GEN.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[0]_0\ => sig_inhibit_rdy_n,
      \INFERRED_GEN.cnt_i_reg[1]\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_14\,
      \INFERRED_GEN.cnt_i_reg[3]\(0) => sig_rd_empty,
      Q(3 downto 0) => \sig_wdc_statcnt_reg__0\(3 downto 0),
      SR(0) => SR(0),
      \in\(3 downto 0) => \in\(3 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(2) => sig_dcntl_sfifo_out(4),
      \out\(1) => sig_dcntl_sfifo_out(2),
      \out\(0) => sig_dcntl_sfifo_out(0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_init_done_0 => sig_init_done_0,
      sig_init_reg2_reg => sig_init_reg2_reg_0,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_tlast_err_stop => sig_tlast_err_stop,
      \sig_wdc_statcnt_reg[2]\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_6\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_coelsc_reg,
      D => I_WRESP_STATUS_FIFO_n_4,
      Q => \^d\(2),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_coelsc_reg,
      D => p_4_out,
      Q => \^d\(1),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_coelsc_reg,
      D => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      Q => sig_coelsc_reg_empty,
      S => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_reg_full_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_dcntl_sfifo_out(0),
      Q => \^sig_wsc2stat_status_valid\,
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_coelsc_reg,
      D => I_WRESP_STATUS_FIFO_n_5,
      Q => \^d\(3),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8F"
    )
        port map (
      I0 => \^sig_wsc2stat_status_valid\,
      I1 => sig_stat2wsc_status_ready,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_dcntl_sfifo_out(4),
      Q => \^d\(0),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_tag_reg[1]_i_1_n_0\
    );
I_WRESP_STATUS_FIFO: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized3\
     port map (
      D(2) => I_WRESP_STATUS_FIFO_n_1,
      D(1) => I_WRESP_STATUS_FIFO_n_2,
      D(0) => I_WRESP_STATUS_FIFO_n_3,
      E(0) => I_WRESP_STATUS_FIFO_n_8,
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => I_WRESP_STATUS_FIFO_n_4,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\ => I_WRESP_STATUS_FIFO_n_5,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\(1 downto 0) => \^d\(3 downto 2),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => sig_rd_empty,
      \INFERRED_GEN.cnt_i_reg[3]\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_6\,
      \INFERRED_GEN.cnt_i_reg[3]_0\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_14\,
      Q(3 downto 0) => \sig_addr_posted_cntr_reg__0\(3 downto 0),
      SR(0) => SR(0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      \out\ => \out\,
      sig_data2wsc_calc_err_reg(0) => sig_dcntl_sfifo_out(2),
      sig_halt_reg_reg => \^sig_halt_reg\,
      sig_init_done => sig_init_done,
      sig_init_reg2_reg => sig_init_reg2_reg
    );
\sig_addr_posted_cntr[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \sig_addr_posted_cntr_reg__0\(0),
      O => \sig_addr_posted_cntr[0]_i_1_n_0\
    );
\sig_addr_posted_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => I_WRESP_STATUS_FIFO_n_8,
      D => \sig_addr_posted_cntr[0]_i_1_n_0\,
      Q => \sig_addr_posted_cntr_reg__0\(0),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => I_WRESP_STATUS_FIFO_n_8,
      D => I_WRESP_STATUS_FIFO_n_3,
      Q => \sig_addr_posted_cntr_reg__0\(1),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => I_WRESP_STATUS_FIFO_n_8,
      D => I_WRESP_STATUS_FIFO_n_2,
      Q => \sig_addr_posted_cntr_reg__0\(2),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => I_WRESP_STATUS_FIFO_n_8,
      D => I_WRESP_STATUS_FIFO_n_1,
      Q => \sig_addr_posted_cntr_reg__0\(3),
      R => SR(0)
    );
sig_halt_cmplt_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA2"
    )
        port map (
      I0 => sig_addr2wsc_calc_error,
      I1 => \sig_addr_posted_cntr_reg__0\(0),
      I2 => \sig_addr_posted_cntr_reg__0\(1),
      I3 => \sig_addr_posted_cntr_reg__0\(2),
      I4 => \sig_addr_posted_cntr_reg__0\(3),
      O => sig_halt_cmplt_reg
    );
sig_halt_cmplt_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_halt_reg\,
      I1 => sig_data2all_tlast_error,
      O => sig_halt_cmplt_reg_1
    );
sig_halt_cmplt_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAABAAAAAAAA"
    )
        port map (
      I0 => sig_addr2wsc_calc_error,
      I1 => \sig_addr_posted_cntr_reg__0\(0),
      I2 => \sig_addr_posted_cntr_reg__0\(1),
      I3 => \sig_addr_posted_cntr_reg__0\(3),
      I4 => \sig_addr_posted_cntr_reg__0\(2),
      I5 => sig_addr_reg_empty,
      O => sig_halt_cmplt_reg_0
    );
sig_halt_reg_dly1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \^sig_halt_reg\,
      Q => sig_halt_reg_dly2_reg,
      R => SR(0)
    );
sig_halt_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_s_h_halt_reg,
      I1 => \^sig_halt_reg\,
      O => sig_halt_reg_i_1_n_0
    );
sig_halt_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_halt_reg_i_1_n_0,
      Q => \^sig_halt_reg\,
      R => SR(0)
    );
sig_next_calc_error_reg_i_4: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFF4"
    )
        port map (
      I0 => sig_stat2wsc_status_ready,
      I1 => \^sig_wsc2stat_status_valid\,
      I2 => sig_next_calc_error_reg,
      I3 => sig_wdc_status_going_full,
      I4 => Q(0),
      O => sig_dqual_reg_empty_reg
    );
\sig_wdc_statcnt[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \sig_wdc_statcnt_reg__0\(0),
      O => \sig_wdc_statcnt[0]_i_1_n_0\
    );
\sig_wdc_statcnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_8\,
      D => \sig_wdc_statcnt[0]_i_1_n_0\,
      Q => \sig_wdc_statcnt_reg__0\(0),
      R => SR(0)
    );
\sig_wdc_statcnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_8\,
      D => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_11\,
      Q => \sig_wdc_statcnt_reg__0\(1),
      R => SR(0)
    );
\sig_wdc_statcnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_8\,
      D => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_10\,
      Q => \sig_wdc_statcnt_reg__0\(2),
      R => SR(0)
    );
\sig_wdc_statcnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_8\,
      D => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_9\,
      Q => \sig_wdc_statcnt_reg__0\(3),
      R => SR(0)
    );
sig_wdc_status_going_full_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \sig_wdc_statcnt_reg__0\(2),
      I1 => \sig_wdc_statcnt_reg__0\(3),
      O => sig_statcnt_gt_eq_thres
    );
sig_wdc_status_going_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_statcnt_gt_eq_thres,
      Q => sig_wdc_status_going_full,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_wrdata_cntl is
  port (
    sig_halt_reg_dly2 : out STD_LOGIC;
    sig_halt_reg_dly3 : out STD_LOGIC;
    sig_next_calc_error_reg : out STD_LOGIC;
    sig_push_to_wsc : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    sig_init_done : out STD_LOGIC;
    sig_sready_stop_reg_reg : out STD_LOGIC;
    sig_data2all_tlast_error : out STD_LOGIC;
    sig_tlast_err_stop : out STD_LOGIC;
    sig_halt_cmplt_reg : out STD_LOGIC;
    sig_s_ready_out_reg : out STD_LOGIC;
    sig_wr_fifo : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \sig_strb_reg_out_reg[3]\ : out STD_LOGIC;
    sig_s_ready_out_reg_0 : out STD_LOGIC;
    sig_last_skid_mux_out : out STD_LOGIC;
    sig_data2skid_wlast : out STD_LOGIC;
    sig_s_ready_out_reg_1 : out STD_LOGIC;
    \sig_strb_reg_out_reg[3]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_strb_skid_reg_reg[3]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_halt_reg_dly1_reg : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    sig_init_reg2_reg : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    sig_stop_request : in STD_LOGIC;
    sig_inhibit_rdy_n : in STD_LOGIC;
    FIFO_Full_reg : in STD_LOGIC;
    p_0_out : in STD_LOGIC;
    sig_halt_reg : in STD_LOGIC;
    sig_s_ready_out_reg_2 : in STD_LOGIC;
    sig_m_valid_out_reg : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    sig_posted_to_axi_reg : in STD_LOGIC;
    sig_s_ready_dup_reg : in STD_LOGIC;
    sig_last_skid_reg : in STD_LOGIC;
    \sig_strb_reg_out_reg[3]_1\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \sig_strb_skid_reg_reg[3]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sm_set_error_reg : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_wrdata_cntl : entity is "axi_datamover_wrdata_cntl";
end axi_dma_ctrl_axi_datamover_wrdata_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_wrdata_cntl is
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_1\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_10\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_3\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_6\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_7\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_8\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_9\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1_n_0\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1_n_0\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_3_n_0\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_4_n_0\ : STD_LOGIC;
  signal p_0_out_0 : STD_LOGIC_VECTOR ( 26 downto 1 );
  signal sig_addr_posted_cntr : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \sig_addr_posted_cntr[0]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr[1]_i_1_n_0\ : STD_LOGIC;
  signal \sig_addr_posted_cntr[2]_i_1_n_0\ : STD_LOGIC;
  signal sig_clr_dqual_reg : STD_LOGIC;
  signal \^sig_data2all_tlast_error\ : STD_LOGIC;
  signal sig_data2wsc_cmd_cmplt0 : STD_LOGIC;
  signal sig_data2wsc_last_err0 : STD_LOGIC;
  signal \sig_dbeat_cntr[5]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[6]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[6]_i_2_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_1__0_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_2__0_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_3__0_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr[7]_i_4_n_0\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[0]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[1]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[2]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[3]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[4]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[5]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[6]\ : STD_LOGIC;
  signal \sig_dbeat_cntr_reg_n_0_[7]\ : STD_LOGIC;
  signal sig_dqual_reg_empty : STD_LOGIC;
  signal sig_dqual_reg_full : STD_LOGIC;
  signal sig_first_dbeat_reg_n_0 : STD_LOGIC;
  signal \^sig_halt_cmplt_reg\ : STD_LOGIC;
  signal \^sig_halt_reg_dly2\ : STD_LOGIC;
  signal \^sig_halt_reg_dly3\ : STD_LOGIC;
  signal \sig_last_dbeat_i_2__0_n_0\ : STD_LOGIC;
  signal \sig_last_dbeat_i_4__0_n_0\ : STD_LOGIC;
  signal sig_last_dbeat_reg_n_0 : STD_LOGIC;
  signal sig_last_mmap_dbeat : STD_LOGIC;
  signal sig_last_mmap_dbeat_reg : STD_LOGIC;
  signal sig_last_mmap_dbeat_reg_i_2_n_0 : STD_LOGIC;
  signal sig_last_mmap_dbeat_reg_i_3_n_0 : STD_LOGIC;
  signal sig_last_mmap_dbeat_reg_i_4_n_0 : STD_LOGIC;
  signal sig_last_reg_out_i_2_n_0 : STD_LOGIC;
  signal sig_ld_new_cmd_reg : STD_LOGIC;
  signal \sig_ld_new_cmd_reg_i_1__0_n_0\ : STD_LOGIC;
  signal \^sig_next_calc_error_reg\ : STD_LOGIC;
  signal \sig_next_calc_error_reg_i_3__0_n_0\ : STD_LOGIC;
  signal sig_next_cmd_cmplt_reg : STD_LOGIC;
  signal sig_next_eof_reg : STD_LOGIC;
  signal sig_next_last_strb_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_next_strt_strb_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \sig_next_tag_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal sig_push_dqual_reg : STD_LOGIC;
  signal sig_push_err2wsc : STD_LOGIC;
  signal sig_push_err2wsc_i_1_n_0 : STD_LOGIC;
  signal \^sig_push_to_wsc\ : STD_LOGIC;
  signal sig_push_to_wsc_i_1_n_0 : STD_LOGIC;
  signal sig_push_to_wsc_i_2_n_0 : STD_LOGIC;
  signal \sig_strb_reg_out[3]_i_5_n_0\ : STD_LOGIC;
  signal \sig_strb_reg_out[3]_i_6_n_0\ : STD_LOGIC;
  signal \^sig_strb_reg_out_reg[3]\ : STD_LOGIC;
  signal \^sig_tlast_err_stop\ : STD_LOGIC;
  signal sig_tlast_error : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[0]_i_1\ : label is "soft_lutpair171";
  attribute SOFT_HLUTNM of \sig_addr_posted_cntr[2]_i_1\ : label is "soft_lutpair171";
  attribute SOFT_HLUTNM of sig_data2wsc_last_err_i_1 : label is "soft_lutpair174";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[6]_i_2\ : label is "soft_lutpair170";
  attribute SOFT_HLUTNM of \sig_dbeat_cntr[7]_i_3__0\ : label is "soft_lutpair176";
  attribute SOFT_HLUTNM of \sig_last_dbeat_i_2__0\ : label is "soft_lutpair170";
  attribute SOFT_HLUTNM of \sig_last_mmap_dbeat_reg_i_1__0\ : label is "soft_lutpair173";
  attribute SOFT_HLUTNM of sig_last_mmap_dbeat_reg_i_3 : label is "soft_lutpair168";
  attribute SOFT_HLUTNM of sig_last_mmap_dbeat_reg_i_4 : label is "soft_lutpair174";
  attribute SOFT_HLUTNM of \sig_last_reg_out_i_1__0\ : label is "soft_lutpair173";
  attribute SOFT_HLUTNM of \sig_ld_new_cmd_reg_i_1__0\ : label is "soft_lutpair175";
  attribute SOFT_HLUTNM of \sig_next_calc_error_reg_i_3__0\ : label is "soft_lutpair176";
  attribute SOFT_HLUTNM of sig_push_err2wsc_i_1 : label is "soft_lutpair175";
  attribute SOFT_HLUTNM of \sig_s_ready_dup_i_2__1\ : label is "soft_lutpair169";
  attribute SOFT_HLUTNM of \sig_s_ready_dup_i_3__0\ : label is "soft_lutpair172";
  attribute SOFT_HLUTNM of sig_sready_stop_reg_i_1 : label is "soft_lutpair172";
  attribute SOFT_HLUTNM of \sig_strb_reg_out[3]_i_4\ : label is "soft_lutpair169";
  attribute SOFT_HLUTNM of \sig_strb_reg_out[3]_i_6\ : label is "soft_lutpair168";
begin
  sig_data2all_tlast_error <= \^sig_data2all_tlast_error\;
  sig_halt_cmplt_reg <= \^sig_halt_cmplt_reg\;
  sig_halt_reg_dly2 <= \^sig_halt_reg_dly2\;
  sig_halt_reg_dly3 <= \^sig_halt_reg_dly3\;
  sig_next_calc_error_reg <= \^sig_next_calc_error_reg\;
  sig_push_to_wsc <= \^sig_push_to_wsc\;
  \sig_strb_reg_out_reg[3]\ <= \^sig_strb_reg_out_reg[3]\;
  sig_tlast_err_stop <= \^sig_tlast_err_stop\;
\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO\: entity work.\axi_dma_ctrl_axi_datamover_fifo__parameterized5\
     port map (
      D(4) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_6\,
      D(3) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_7\,
      D(2) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_8\,
      D(1) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_9\,
      D(0) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_10\,
      Q(0) => Q(0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\(11 downto 10) => p_0_out_0(26 downto 25),
      \out\(9) => p_0_out_0(23),
      \out\(8 downto 1) => p_0_out_0(21 downto 14),
      \out\(0) => p_0_out_0(1),
      sel => sig_wr_fifo,
      sig_addr_posted_cntr(2 downto 0) => sig_addr_posted_cntr(2 downto 0),
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_dbeat_cntr_reg[2]\ => \sig_last_dbeat_i_2__0_n_0\,
      \sig_dbeat_cntr_reg[2]_0\ => \sig_dbeat_cntr[6]_i_2_n_0\,
      \sig_dbeat_cntr_reg[4]\(4) => \sig_dbeat_cntr_reg_n_0_[4]\,
      \sig_dbeat_cntr_reg[4]\(3) => \sig_dbeat_cntr_reg_n_0_[3]\,
      \sig_dbeat_cntr_reg[4]\(2) => \sig_dbeat_cntr_reg_n_0_[2]\,
      \sig_dbeat_cntr_reg[4]\(1) => \sig_dbeat_cntr_reg_n_0_[1]\,
      \sig_dbeat_cntr_reg[4]\(0) => \sig_dbeat_cntr_reg_n_0_[0]\,
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_first_dbeat_reg => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_3\,
      sig_first_dbeat_reg_0 => sig_first_dbeat_reg_n_0,
      sig_init_done => sig_init_done,
      sig_init_reg2_reg => sig_init_reg2_reg,
      sig_last_dbeat_reg => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_1\,
      sig_last_dbeat_reg_0 => sig_last_dbeat_reg_n_0,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_push_dqual_reg => sig_push_dqual_reg,
      sig_s_ready_out_reg => \sig_dbeat_cntr[7]_i_3__0_n_0\,
      sm_set_error_reg(10 downto 0) => sm_set_error_reg(10 downto 0)
    );
\GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0800"
    )
        port map (
      I0 => \^sig_push_to_wsc\,
      I1 => sig_inhibit_rdy_n,
      I2 => FIFO_Full_reg,
      I3 => \^sig_data2all_tlast_error\,
      I4 => \^sig_tlast_err_stop\,
      O => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_i_1_n_0\,
      Q => \^sig_tlast_err_stop\,
      R => SR(0)
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_tlast_error,
      I1 => \^sig_data2all_tlast_error\,
      O => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EA6A0000"
    )
        port map (
      I0 => p_0_out,
      I1 => sig_next_eof_reg,
      I2 => sig_last_reg_out_i_2_n_0,
      I3 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_3_n_0\,
      I4 => sig_last_mmap_dbeat_reg_i_2_n_0,
      I5 => sig_halt_reg,
      O => sig_tlast_error
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F6"
    )
        port map (
      I0 => sig_next_last_strb_reg(3),
      I1 => \sig_strb_reg_out_reg[3]_1\(3),
      I2 => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_4_n_0\,
      O => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_3_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => sig_next_last_strb_reg(0),
      I1 => \sig_strb_reg_out_reg[3]_1\(0),
      I2 => \sig_strb_reg_out_reg[3]_1\(2),
      I3 => sig_next_last_strb_reg(2),
      I4 => \sig_strb_reg_out_reg[3]_1\(1),
      I5 => sig_next_last_strb_reg(1),
      O => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_4_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_i_1_n_0\,
      Q => \^sig_data2all_tlast_error\,
      R => SR(0)
    );
\sig_addr_posted_cntr[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F08F0EF0"
    )
        port map (
      I0 => sig_addr_posted_cntr(1),
      I1 => sig_addr_posted_cntr(2),
      I2 => sig_posted_to_axi_reg,
      I3 => sig_last_mmap_dbeat_reg,
      I4 => sig_addr_posted_cntr(0),
      O => \sig_addr_posted_cntr[0]_i_1_n_0\
    );
\sig_addr_posted_cntr[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FB44DD20"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg,
      I1 => sig_posted_to_axi_reg,
      I2 => sig_addr_posted_cntr(2),
      I3 => sig_addr_posted_cntr(1),
      I4 => sig_addr_posted_cntr(0),
      O => \sig_addr_posted_cntr[1]_i_1_n_0\
    );
\sig_addr_posted_cntr[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F4F0F0D0"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg,
      I1 => sig_posted_to_axi_reg,
      I2 => sig_addr_posted_cntr(2),
      I3 => sig_addr_posted_cntr(1),
      I4 => sig_addr_posted_cntr(0),
      O => \sig_addr_posted_cntr[2]_i_1_n_0\
    );
\sig_addr_posted_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[0]_i_1_n_0\,
      Q => sig_addr_posted_cntr(0),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[1]_i_1_n_0\,
      Q => sig_addr_posted_cntr(1),
      R => SR(0)
    );
\sig_addr_posted_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_addr_posted_cntr[2]_i_1_n_0\,
      Q => sig_addr_posted_cntr(2),
      R => SR(0)
    );
sig_data2wsc_calc_err_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_to_wsc_i_2_n_0,
      D => \^sig_next_calc_error_reg\,
      Q => \in\(2),
      R => sig_push_to_wsc_i_1_n_0
    );
sig_data2wsc_cmd_cmplt_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => sig_next_cmd_cmplt_reg,
      I1 => sig_tlast_error,
      I2 => \^sig_data2all_tlast_error\,
      O => sig_data2wsc_cmd_cmplt0
    );
sig_data2wsc_cmd_cmplt_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_to_wsc_i_2_n_0,
      D => sig_data2wsc_cmd_cmplt0,
      Q => \in\(0),
      R => sig_push_to_wsc_i_1_n_0
    );
sig_data2wsc_last_err_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sig_data2all_tlast_error\,
      I1 => sig_tlast_error,
      O => sig_data2wsc_last_err0
    );
sig_data2wsc_last_err_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_to_wsc_i_2_n_0,
      D => sig_data2wsc_last_err0,
      Q => \in\(1),
      R => sig_push_to_wsc_i_1_n_0
    );
\sig_data2wsc_tag_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_to_wsc_i_2_n_0,
      D => \sig_next_tag_reg_reg_n_0_[1]\,
      Q => \in\(3),
      R => sig_push_to_wsc_i_1_n_0
    );
\sig_dbeat_cntr[5]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FB04"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg_n_0_[4]\,
      I1 => \sig_dbeat_cntr[6]_i_2_n_0\,
      I2 => \sig_dbeat_cntr_reg_n_0_[3]\,
      I3 => \sig_dbeat_cntr_reg_n_0_[5]\,
      I4 => sig_push_dqual_reg,
      O => \sig_dbeat_cntr[5]_i_1__0_n_0\
    );
\sig_dbeat_cntr[6]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFD0002"
    )
        port map (
      I0 => \sig_dbeat_cntr[6]_i_2_n_0\,
      I1 => \sig_dbeat_cntr_reg_n_0_[4]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[5]\,
      I3 => \sig_dbeat_cntr_reg_n_0_[3]\,
      I4 => \sig_dbeat_cntr_reg_n_0_[6]\,
      I5 => sig_push_dqual_reg,
      O => \sig_dbeat_cntr[6]_i_1__0_n_0\
    );
\sig_dbeat_cntr[6]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg_n_0_[2]\,
      I1 => \sig_dbeat_cntr_reg_n_0_[1]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[0]\,
      O => \sig_dbeat_cntr[6]_i_2_n_0\
    );
\sig_dbeat_cntr[7]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_push_dqual_reg,
      I1 => \sig_dbeat_cntr[7]_i_3__0_n_0\,
      O => \sig_dbeat_cntr[7]_i_1__0_n_0\
    );
\sig_dbeat_cntr[7]_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00D2"
    )
        port map (
      I0 => \sig_dbeat_cntr[7]_i_4_n_0\,
      I1 => \sig_dbeat_cntr_reg_n_0_[6]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[7]\,
      I3 => sig_push_dqual_reg,
      O => \sig_dbeat_cntr[7]_i_2__0_n_0\
    );
\sig_dbeat_cntr[7]_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg_i_2_n_0,
      I1 => sig_last_reg_out_i_2_n_0,
      O => \sig_dbeat_cntr[7]_i_3__0_n_0\
    );
\sig_dbeat_cntr[7]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg_n_0_[0]\,
      I1 => \sig_dbeat_cntr_reg_n_0_[1]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[2]\,
      I3 => \sig_dbeat_cntr_reg_n_0_[4]\,
      I4 => \sig_dbeat_cntr_reg_n_0_[5]\,
      I5 => \sig_dbeat_cntr_reg_n_0_[3]\,
      O => \sig_dbeat_cntr[7]_i_4_n_0\
    );
\sig_dbeat_cntr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_10\,
      Q => \sig_dbeat_cntr_reg_n_0_[0]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_9\,
      Q => \sig_dbeat_cntr_reg_n_0_[1]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_8\,
      Q => \sig_dbeat_cntr_reg_n_0_[2]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_7\,
      Q => \sig_dbeat_cntr_reg_n_0_[3]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_6\,
      Q => \sig_dbeat_cntr_reg_n_0_[4]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \sig_dbeat_cntr[5]_i_1__0_n_0\,
      Q => \sig_dbeat_cntr_reg_n_0_[5]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \sig_dbeat_cntr[6]_i_1__0_n_0\,
      Q => \sig_dbeat_cntr_reg_n_0_[6]\,
      R => SR(0)
    );
\sig_dbeat_cntr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => \sig_dbeat_cntr[7]_i_1__0_n_0\,
      D => \sig_dbeat_cntr[7]_i_2__0_n_0\,
      Q => \sig_dbeat_cntr_reg_n_0_[7]\,
      R => SR(0)
    );
sig_dqual_reg_empty_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => '0',
      Q => sig_dqual_reg_empty,
      S => sig_clr_dqual_reg
    );
sig_dqual_reg_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => sig_push_dqual_reg,
      Q => sig_dqual_reg_full,
      R => sig_clr_dqual_reg
    );
sig_first_dbeat_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_3\,
      Q => sig_first_dbeat_reg_n_0,
      R => '0'
    );
sig_halt_cmplt_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5554"
    )
        port map (
      I0 => \^sig_next_calc_error_reg\,
      I1 => sig_addr_posted_cntr(2),
      I2 => sig_addr_posted_cntr(1),
      I3 => sig_addr_posted_cntr(0),
      O => \^sig_halt_cmplt_reg\
    );
sig_halt_reg_dly2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_halt_reg_dly1_reg,
      Q => \^sig_halt_reg_dly2\,
      R => SR(0)
    );
sig_halt_reg_dly3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \^sig_halt_reg_dly2\,
      Q => \^sig_halt_reg_dly3\,
      R => SR(0)
    );
\sig_last_dbeat_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFBFFFF"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg_n_0_[2]\,
      I1 => \sig_dbeat_cntr_reg_n_0_[0]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[1]\,
      I3 => \sig_last_dbeat_i_4__0_n_0\,
      I4 => sig_last_mmap_dbeat_reg_i_2_n_0,
      O => \sig_last_dbeat_i_2__0_n_0\
    );
\sig_last_dbeat_i_4__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \sig_dbeat_cntr_reg_n_0_[6]\,
      I1 => \sig_dbeat_cntr_reg_n_0_[7]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[4]\,
      I3 => \sig_dbeat_cntr_reg_n_0_[5]\,
      I4 => \sig_dbeat_cntr_reg_n_0_[3]\,
      O => \sig_last_dbeat_i_4__0_n_0\
    );
sig_last_dbeat_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_1\,
      Q => sig_last_dbeat_reg_n_0,
      R => '0'
    );
\sig_last_mmap_dbeat_reg_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg_i_2_n_0,
      I1 => sig_last_reg_out_i_2_n_0,
      I2 => sig_dqual_reg_full,
      O => sig_last_mmap_dbeat
    );
sig_last_mmap_dbeat_reg_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => sig_s_ready_out_reg_2,
      I1 => \^sig_halt_cmplt_reg\,
      I2 => sig_last_mmap_dbeat_reg_i_3_n_0,
      I3 => sig_last_mmap_dbeat_reg_i_4_n_0,
      O => sig_last_mmap_dbeat_reg_i_2_n_0
    );
sig_last_mmap_dbeat_reg_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55555575"
    )
        port map (
      I0 => sig_dqual_reg_full,
      I1 => sig_posted_to_axi_reg,
      I2 => sig_last_mmap_dbeat_reg,
      I3 => sig_addr_posted_cntr(2),
      I4 => sig_addr_posted_cntr(1),
      O => sig_last_mmap_dbeat_reg_i_3_n_0
    );
sig_last_mmap_dbeat_reg_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F011"
    )
        port map (
      I0 => \^sig_data2all_tlast_error\,
      I1 => sig_m_valid_out_reg,
      I2 => sig_last_mmap_dbeat_reg,
      I3 => sig_halt_reg,
      O => sig_last_mmap_dbeat_reg_i_4_n_0
    );
sig_last_mmap_dbeat_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_last_mmap_dbeat,
      Q => sig_last_mmap_dbeat_reg,
      R => SR(0)
    );
\sig_last_reg_out_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => sig_dqual_reg_full,
      I1 => sig_last_reg_out_i_2_n_0,
      I2 => sig_s_ready_dup_reg,
      I3 => sig_last_skid_reg,
      O => sig_last_skid_mux_out
    );
sig_last_reg_out_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => \sig_dbeat_cntr[6]_i_2_n_0\,
      I1 => \sig_dbeat_cntr_reg_n_0_[3]\,
      I2 => \sig_dbeat_cntr_reg_n_0_[5]\,
      I3 => \sig_dbeat_cntr_reg_n_0_[4]\,
      I4 => \sig_dbeat_cntr_reg_n_0_[7]\,
      I5 => \sig_dbeat_cntr_reg_n_0_[6]\,
      O => sig_last_reg_out_i_2_n_0
    );
\sig_last_skid_reg_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => sig_dqual_reg_full,
      I1 => sig_last_reg_out_i_2_n_0,
      O => sig_data2skid_wlast
    );
\sig_ld_new_cmd_reg_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => sig_ld_new_cmd_reg,
      I1 => sig_push_dqual_reg,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \sig_ld_new_cmd_reg_i_1__0_n_0\
    );
sig_ld_new_cmd_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => \sig_ld_new_cmd_reg_i_1__0_n_0\,
      Q => sig_ld_new_cmd_reg,
      R => '0'
    );
sig_next_calc_error_reg_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => sig_push_dqual_reg,
      I1 => \sig_next_calc_error_reg_i_3__0_n_0\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_clr_dqual_reg
    );
\sig_next_calc_error_reg_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => sig_last_mmap_dbeat_reg_i_2_n_0,
      I1 => sig_last_reg_out_i_2_n_0,
      O => \sig_next_calc_error_reg_i_3__0_n_0\
    );
sig_next_calc_error_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(26),
      Q => \^sig_next_calc_error_reg\,
      R => sig_clr_dqual_reg
    );
sig_next_cmd_cmplt_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(25),
      Q => sig_next_cmd_cmplt_reg,
      R => sig_clr_dqual_reg
    );
sig_next_eof_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(23),
      Q => sig_next_eof_reg,
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(18),
      Q => sig_next_last_strb_reg(0),
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(19),
      Q => sig_next_last_strb_reg(1),
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(20),
      Q => sig_next_last_strb_reg(2),
      R => sig_clr_dqual_reg
    );
\sig_next_last_strb_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(21),
      Q => sig_next_last_strb_reg(3),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(14),
      Q => sig_next_strt_strb_reg(0),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(15),
      Q => sig_next_strt_strb_reg(1),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(16),
      Q => sig_next_strt_strb_reg(2),
      R => sig_clr_dqual_reg
    );
\sig_next_strt_strb_reg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(17),
      Q => sig_next_strt_strb_reg(3),
      R => sig_clr_dqual_reg
    );
\sig_next_tag_reg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_dqual_reg,
      D => p_0_out_0(1),
      Q => \sig_next_tag_reg_reg_n_0_[1]\,
      R => sig_clr_dqual_reg
    );
sig_push_err2wsc_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => sig_ld_new_cmd_reg,
      I1 => \^sig_next_calc_error_reg\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_push_err2wsc,
      O => sig_push_err2wsc_i_1_n_0
    );
sig_push_err2wsc_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => '1',
      D => sig_push_err2wsc_i_1_n_0,
      Q => sig_push_err2wsc,
      R => '0'
    );
sig_push_to_wsc_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00001000FFFFFFFF"
    )
        port map (
      I0 => sig_push_err2wsc,
      I1 => \sig_next_calc_error_reg_i_3__0_n_0\,
      I2 => \^sig_push_to_wsc\,
      I3 => sig_inhibit_rdy_n,
      I4 => FIFO_Full_reg,
      I5 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => sig_push_to_wsc_i_1_n_0
    );
sig_push_to_wsc_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => \^sig_tlast_err_stop\,
      I1 => \sig_next_calc_error_reg_i_3__0_n_0\,
      I2 => sig_push_err2wsc,
      O => sig_push_to_wsc_i_2_n_0
    );
sig_push_to_wsc_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_s2mm_aclk,
      CE => sig_push_to_wsc_i_2_n_0,
      D => sig_push_to_wsc_i_2_n_0,
      Q => \^sig_push_to_wsc\,
      R => sig_push_to_wsc_i_1_n_0
    );
\sig_s_ready_dup_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF888DFFFFFFFF"
    )
        port map (
      I0 => sig_halt_reg,
      I1 => sig_last_mmap_dbeat_reg,
      I2 => sig_m_valid_out_reg,
      I3 => \^sig_data2all_tlast_error\,
      I4 => sig_last_mmap_dbeat_reg_i_3_n_0,
      I5 => \^sig_halt_cmplt_reg\,
      O => sig_s_ready_out_reg
    );
\sig_s_ready_dup_i_2__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BAAA"
    )
        port map (
      I0 => sig_halt_reg,
      I1 => \^sig_data2all_tlast_error\,
      I2 => sig_s_ready_out_reg_2,
      I3 => \sig_strb_reg_out[3]_i_5_n_0\,
      O => sig_s_ready_out_reg_0
    );
\sig_s_ready_dup_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF4F"
    )
        port map (
      I0 => \^sig_halt_reg_dly3\,
      I1 => \^sig_halt_reg_dly2\,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      I3 => sig_stop_request,
      O => sig_s_ready_out_reg_1
    );
sig_sready_stop_reg_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => \^sig_halt_reg_dly3\,
      I1 => \^sig_halt_reg_dly2\,
      I2 => sig_stop_request,
      O => sig_sready_stop_reg_reg
    );
\sig_strb_reg_out[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBFFFFB8BB0000"
    )
        port map (
      I0 => sig_next_strt_strb_reg(0),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(0),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_s_ready_dup_reg,
      I5 => \sig_strb_skid_reg_reg[3]_0\(0),
      O => \sig_strb_reg_out_reg[3]_0\(0)
    );
\sig_strb_reg_out[1]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBFFFFB8BB0000"
    )
        port map (
      I0 => sig_next_strt_strb_reg(1),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(1),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_s_ready_dup_reg,
      I5 => \sig_strb_skid_reg_reg[3]_0\(1),
      O => \sig_strb_reg_out_reg[3]_0\(1)
    );
\sig_strb_reg_out[2]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBFFFFB8BB0000"
    )
        port map (
      I0 => sig_next_strt_strb_reg(2),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(2),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_s_ready_dup_reg,
      I5 => \sig_strb_skid_reg_reg[3]_0\(2),
      O => \sig_strb_reg_out_reg[3]_0\(2)
    );
\sig_strb_reg_out[3]_i_2__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^sig_strb_reg_out_reg[3]\,
      O => E(0)
    );
\sig_strb_reg_out[3]_i_2__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBFFFFB8BB0000"
    )
        port map (
      I0 => sig_next_strt_strb_reg(3),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(3),
      I3 => sig_last_dbeat_reg_n_0,
      I4 => sig_s_ready_dup_reg,
      I5 => \sig_strb_skid_reg_reg[3]_0\(3),
      O => \sig_strb_reg_out_reg[3]_0\(3)
    );
\sig_strb_reg_out[3]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000AA2A"
    )
        port map (
      I0 => \out\,
      I1 => \sig_strb_reg_out[3]_i_5_n_0\,
      I2 => sig_s_ready_out_reg_2,
      I3 => \^sig_data2all_tlast_error\,
      I4 => sig_halt_reg,
      O => \^sig_strb_reg_out_reg[3]\
    );
\sig_strb_reg_out[3]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3232303200000000"
    )
        port map (
      I0 => sig_addr_posted_cntr(0),
      I1 => \^sig_next_calc_error_reg\,
      I2 => \sig_strb_reg_out[3]_i_6_n_0\,
      I3 => sig_last_mmap_dbeat_reg,
      I4 => sig_posted_to_axi_reg,
      I5 => sig_dqual_reg_full,
      O => \sig_strb_reg_out[3]_i_5_n_0\
    );
\sig_strb_reg_out[3]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sig_addr_posted_cntr(2),
      I1 => sig_addr_posted_cntr(1),
      O => \sig_strb_reg_out[3]_i_6_n_0\
    );
\sig_strb_skid_reg[0]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B8BB"
    )
        port map (
      I0 => sig_next_strt_strb_reg(0),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(0),
      I3 => sig_last_dbeat_reg_n_0,
      O => \sig_strb_skid_reg_reg[3]\(0)
    );
\sig_strb_skid_reg[1]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B8BB"
    )
        port map (
      I0 => sig_next_strt_strb_reg(1),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(1),
      I3 => sig_last_dbeat_reg_n_0,
      O => \sig_strb_skid_reg_reg[3]\(1)
    );
\sig_strb_skid_reg[2]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B8BB"
    )
        port map (
      I0 => sig_next_strt_strb_reg(2),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(2),
      I3 => sig_last_dbeat_reg_n_0,
      O => \sig_strb_skid_reg_reg[3]\(2)
    );
\sig_strb_skid_reg[3]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B8BB"
    )
        port map (
      I0 => sig_next_strt_strb_reg(3),
      I1 => sig_first_dbeat_reg_n_0,
      I2 => sig_next_last_strb_reg(3),
      I3 => sig_last_dbeat_reg_n_0,
      O => \sig_strb_skid_reg_reg[3]\(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_wr_status_cntl is
  port (
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \INFERRED_GEN.cnt_i_reg[0]\ : out STD_LOGIC;
    sig_wsc2stat_status_valid : out STD_LOGIC;
    sig_init_done : out STD_LOGIC;
    sig_init_done_0 : out STD_LOGIC;
    m_axi_sg_bready : out STD_LOGIC;
    sig_inhibit_rdy_n : out STD_LOGIC;
    sig_push_to_wsc_reg : out STD_LOGIC;
    sig_dqual_reg_empty_reg : out STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    sig_init_reg_reg : in STD_LOGIC;
    sig_init_reg_reg_0 : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ : in STD_LOGIC;
    sig_tlast_err_stop : in STD_LOGIC;
    sig_push_to_wsc : in STD_LOGIC;
    sig_stat2wsc_status_ready : in STD_LOGIC;
    sig_mstr2data_cmd_valid : in STD_LOGIC;
    sig_next_calc_error_reg : in STD_LOGIC;
    sig_dqual_reg_empty : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_wr_status_cntl : entity is "axi_sg_wr_status_cntl";
end axi_dma_ctrl_axi_sg_wr_status_cntl;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_wr_status_cntl is
  signal \^d\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_10\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_11\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\ : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_3 : STD_LOGIC;
  signal I_WRESP_STATUS_FIFO_n_5 : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal sig_coelsc_reg_empty : STD_LOGIC;
  signal sig_dcntl_sfifo_out : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal sig_push_coelsc_reg : STD_LOGIC;
  signal sig_rd_empty : STD_LOGIC;
  signal sig_rd_empty_0 : STD_LOGIC;
  signal sig_statcnt_gt_eq_thres : STD_LOGIC;
  signal sig_wdc_statcnt : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \sig_wdc_statcnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \sig_wdc_statcnt[1]_i_1_n_0\ : STD_LOGIC;
  signal \sig_wdc_statcnt[2]_i_1_n_0\ : STD_LOGIC;
  signal sig_wdc_status_going_full : STD_LOGIC;
  signal sig_wresp_sfifo_out : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^sig_wsc2stat_status_valid\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \sig_wdc_statcnt[0]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \sig_wdc_statcnt[1]_i_1\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \sig_wdc_statcnt[2]_i_1\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \sig_wdc_status_going_full_i_1__0\ : label is "soft_lutpair72";
begin
  D(3 downto 0) <= \^d\(3 downto 0);
  sig_wsc2stat_status_valid <= \^sig_wsc2stat_status_valid\;
\GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO\: entity work.\axi_dma_ctrl_axi_sg_fifo__parameterized2\
     port map (
      D(2 downto 0) => \^d\(2 downto 0),
      \GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_11\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_10\,
      \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      \INFERRED_GEN.cnt_i_reg[0]\ => \INFERRED_GEN.cnt_i_reg[0]\,
      \INFERRED_GEN.cnt_i_reg[0]_0\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      \INFERRED_GEN.cnt_i_reg[0]_1\ => sig_inhibit_rdy_n,
      \INFERRED_GEN.cnt_i_reg[0]_2\(0) => sig_wresp_sfifo_out(1),
      \INFERRED_GEN.cnt_i_reg[2]\(0) => sig_rd_empty_0,
      Q(0) => sig_rd_empty,
      \in\(2 downto 0) => \in\(2 downto 0),
      m_axi_sg_aclk => m_axi_sg_aclk,
      \out\(1) => sig_dcntl_sfifo_out(2),
      \out\(0) => sig_dcntl_sfifo_out(0),
      p_4_out => p_4_out,
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_init_done_0 => sig_init_done_0,
      sig_init_reg_reg => sig_init_reg_reg_0,
      sig_push_coelsc_reg => sig_push_coelsc_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_push_to_wsc_reg => sig_push_to_wsc_reg,
      sig_stream_rst => sig_stream_rst,
      sig_tlast_err_stop => sig_tlast_err_stop
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_coelsc_reg,
      D => I_WRESP_STATUS_FIFO_n_3,
      Q => \^d\(1),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8F"
    )
        port map (
      I0 => \^sig_wsc2stat_status_valid\,
      I1 => sig_stat2wsc_status_ready,
      I2 => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      O => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_coelsc_reg,
      D => p_4_out,
      Q => \^d\(0),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_okay_reg_reg\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_coelsc_reg,
      D => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_11\,
      Q => \^d\(3),
      S => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_coelsc_reg,
      D => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_10\,
      Q => sig_coelsc_reg_empty,
      S => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_reg_full_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_coelsc_reg,
      D => sig_dcntl_sfifo_out(0),
      Q => \^sig_wsc2stat_status_valid\,
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
\GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => sig_push_coelsc_reg,
      D => I_WRESP_STATUS_FIFO_n_5,
      Q => \^d\(2),
      R => \GEN_OMIT_INDET_BTT.sig_coelsc_interr_reg_i_1__0_n_0\
    );
I_WRESP_STATUS_FIFO: entity work.\axi_dma_ctrl_axi_sg_fifo__parameterized1\
     port map (
      D(1 downto 0) => \^d\(2 downto 1),
      \GEN_OMIT_INDET_BTT.sig_coelsc_decerr_reg_reg\ => I_WRESP_STATUS_FIFO_n_3,
      \GEN_OMIT_INDET_BTT.sig_coelsc_reg_empty_reg\ => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg\(0) => sig_wresp_sfifo_out(1),
      \GEN_OMIT_INDET_BTT.sig_coelsc_slverr_reg_reg_0\ => I_WRESP_STATUS_FIFO_n_5,
      \INFERRED_GEN.cnt_i_reg[2]\(0) => sig_rd_empty,
      Q(0) => sig_rd_empty_0,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      \out\(0) => sig_dcntl_sfifo_out(2),
      sig_coelsc_reg_empty => sig_coelsc_reg_empty,
      sig_init_done => sig_init_done,
      sig_init_reg_reg => sig_init_reg_reg,
      sig_stream_rst => sig_stream_rst
    );
\sig_next_calc_error_reg_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF4FFFFFFFFFF"
    )
        port map (
      I0 => sig_stat2wsc_status_ready,
      I1 => \^sig_wsc2stat_status_valid\,
      I2 => sig_wdc_status_going_full,
      I3 => sig_mstr2data_cmd_valid,
      I4 => sig_next_calc_error_reg,
      I5 => sig_dqual_reg_empty,
      O => sig_dqual_reg_empty_reg
    );
\sig_wdc_statcnt[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AA5D54AA"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      I1 => sig_wdc_statcnt(1),
      I2 => sig_wdc_statcnt(2),
      I3 => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      I4 => sig_wdc_statcnt(0),
      O => \sig_wdc_statcnt[0]_i_1_n_0\
    );
\sig_wdc_statcnt[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B5F0F058"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      I1 => sig_wdc_statcnt(2),
      I2 => sig_wdc_statcnt(1),
      I3 => sig_wdc_statcnt(0),
      I4 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      O => \sig_wdc_statcnt[1]_i_1_n_0\
    );
\sig_wdc_statcnt[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8CCCCCC4"
    )
        port map (
      I0 => \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\,
      I1 => sig_wdc_statcnt(2),
      I2 => sig_wdc_statcnt(1),
      I3 => sig_wdc_statcnt(0),
      I4 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO_n_2\,
      O => \sig_wdc_statcnt[2]_i_1_n_0\
    );
\sig_wdc_statcnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_wdc_statcnt[0]_i_1_n_0\,
      Q => sig_wdc_statcnt(0),
      R => sig_stream_rst
    );
\sig_wdc_statcnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_wdc_statcnt[1]_i_1_n_0\,
      Q => sig_wdc_statcnt(1),
      R => sig_stream_rst
    );
\sig_wdc_statcnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => \sig_wdc_statcnt[2]_i_1_n_0\,
      Q => sig_wdc_statcnt(2),
      R => sig_stream_rst
    );
\sig_wdc_status_going_full_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => sig_wdc_statcnt(2),
      I1 => sig_wdc_statcnt(1),
      I2 => sig_wdc_statcnt(0),
      O => sig_statcnt_gt_eq_thres
    );
sig_wdc_status_going_full_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => m_axi_sg_aclk,
      CE => '1',
      D => sig_statcnt_gt_eq_thres,
      Q => sig_wdc_status_going_full,
      R => sig_stream_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_mm2s_basic_wrap is
  port (
    m_axis_mm2s_tvalid : out STD_LOGIC;
    sig_rst2all_stop_request : out STD_LOGIC;
    m_axi_mm2s_arsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_arvalid : out STD_LOGIC;
    m_axis_mm2s_tlast : out STD_LOGIC;
    s_axis_mm2s_cmd_tready : out STD_LOGIC;
    \mm2s_tag_reg[0]\ : out STD_LOGIC;
    m_axi_mm2s_rready : out STD_LOGIC;
    mm2s_decerr_i : out STD_LOGIC;
    mm2s_interr_i : out STD_LOGIC;
    mm2s_slverr_i : out STD_LOGIC;
    \mm2s_tag_reg[0]_0\ : out STD_LOGIC;
    mm2s_halt_cmplt : out STD_LOGIC;
    m_axi_mm2s_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_arlen : out STD_LOGIC_VECTOR ( 4 downto 0 );
    m_axis_mm2s_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axis_mm2s_tkeep : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dm_mm2s_prmry_resetn : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    \GEN_ASYNC_RESET.halt_i_reg\ : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    p_2_out : in STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    m_axi_mm2s_rvalid : in STD_LOGIC;
    m_axi_mm2s_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_arready : in STD_LOGIC;
    m_axi_mm2s_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    p_7_out : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 40 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_mm2s_basic_wrap : entity is "axi_datamover_mm2s_basic_wrap";
end axi_dma_ctrl_axi_datamover_mm2s_basic_wrap;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_mm2s_basic_wrap is
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done\ : STD_LOGIC;
  signal \GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/sig_push_regfifo\ : STD_LOGIC;
  signal I_ADDR_CNTL_n_7 : STD_LOGIC;
  signal I_CMD_STATUS_n_12 : STD_LOGIC;
  signal I_CMD_STATUS_n_13 : STD_LOGIC;
  signal I_CMD_STATUS_n_14 : STD_LOGIC;
  signal I_CMD_STATUS_n_15 : STD_LOGIC;
  signal I_CMD_STATUS_n_16 : STD_LOGIC;
  signal I_CMD_STATUS_n_17 : STD_LOGIC;
  signal I_CMD_STATUS_n_18 : STD_LOGIC;
  signal I_CMD_STATUS_n_19 : STD_LOGIC;
  signal I_CMD_STATUS_n_20 : STD_LOGIC;
  signal I_CMD_STATUS_n_21 : STD_LOGIC;
  signal I_CMD_STATUS_n_22 : STD_LOGIC;
  signal I_CMD_STATUS_n_23 : STD_LOGIC;
  signal I_CMD_STATUS_n_24 : STD_LOGIC;
  signal I_CMD_STATUS_n_25 : STD_LOGIC;
  signal I_CMD_STATUS_n_26 : STD_LOGIC;
  signal I_CMD_STATUS_n_27 : STD_LOGIC;
  signal I_CMD_STATUS_n_28 : STD_LOGIC;
  signal I_CMD_STATUS_n_29 : STD_LOGIC;
  signal I_CMD_STATUS_n_30 : STD_LOGIC;
  signal I_CMD_STATUS_n_31 : STD_LOGIC;
  signal I_CMD_STATUS_n_32 : STD_LOGIC;
  signal I_CMD_STATUS_n_33 : STD_LOGIC;
  signal I_CMD_STATUS_n_34 : STD_LOGIC;
  signal I_CMD_STATUS_n_35 : STD_LOGIC;
  signal I_CMD_STATUS_n_36 : STD_LOGIC;
  signal I_CMD_STATUS_n_37 : STD_LOGIC;
  signal I_CMD_STATUS_n_38 : STD_LOGIC;
  signal I_CMD_STATUS_n_39 : STD_LOGIC;
  signal I_CMD_STATUS_n_40 : STD_LOGIC;
  signal I_CMD_STATUS_n_41 : STD_LOGIC;
  signal I_CMD_STATUS_n_42 : STD_LOGIC;
  signal I_CMD_STATUS_n_43 : STD_LOGIC;
  signal I_CMD_STATUS_n_44 : STD_LOGIC;
  signal I_CMD_STATUS_n_46 : STD_LOGIC;
  signal I_CMD_STATUS_n_47 : STD_LOGIC;
  signal I_CMD_STATUS_n_48 : STD_LOGIC;
  signal I_CMD_STATUS_n_49 : STD_LOGIC;
  signal I_CMD_STATUS_n_5 : STD_LOGIC;
  signal I_CMD_STATUS_n_50 : STD_LOGIC;
  signal I_CMD_STATUS_n_51 : STD_LOGIC;
  signal I_CMD_STATUS_n_52 : STD_LOGIC;
  signal I_CMD_STATUS_n_6 : STD_LOGIC;
  signal I_MSTR_SCC_n_2 : STD_LOGIC;
  signal I_MSTR_SCC_n_5 : STD_LOGIC;
  signal I_MSTR_SCC_n_7 : STD_LOGIC;
  signal I_RD_DATA_CNTL_n_10 : STD_LOGIC;
  signal I_RD_DATA_CNTL_n_11 : STD_LOGIC;
  signal I_RD_DATA_CNTL_n_12 : STD_LOGIC;
  signal I_RD_DATA_CNTL_n_23 : STD_LOGIC;
  signal I_RD_DATA_CNTL_n_9 : STD_LOGIC;
  signal p_0_in2_in : STD_LOGIC;
  signal p_0_in5_in : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal sig_addr2data_addr_posted : STD_LOGIC;
  signal sig_addr2rsc_calc_error : STD_LOGIC;
  signal sig_addr_reg_empty : STD_LOGIC;
  signal sig_cmd2mstr_cmd_valid : STD_LOGIC;
  signal sig_cmd_reg_empty : STD_LOGIC;
  signal sig_cmd_stat_rst_user_reg_n_cdc_from_reg : STD_LOGIC;
  signal sig_coelsc_tag_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_data2addr_stop_req : STD_LOGIC;
  signal sig_data2rsc_calc_err : STD_LOGIC;
  signal sig_data2rsc_slverr : STD_LOGIC;
  signal sig_data2rsc_valid : STD_LOGIC;
  signal sig_data_reg_out_en : STD_LOGIC;
  signal sig_halt_reg_dly2 : STD_LOGIC;
  signal sig_halt_reg_dly3 : STD_LOGIC;
  signal sig_mstr2addr_addr : STD_LOGIC_VECTOR ( 31 downto 2 );
  signal sig_mstr2addr_burst : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_mstr2addr_cmd_valid : STD_LOGIC;
  signal sig_mstr2data_cmd_valid : STD_LOGIC;
  signal sig_mstr2data_eof : STD_LOGIC;
  signal sig_mstr2data_last_strb : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal sig_mstr2data_len : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_mstr2data_saddr_lsb : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal sig_mstr2data_tag : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_mvalid_stop : STD_LOGIC;
  signal sig_next_burst : STD_LOGIC;
  signal sig_rd_sts_decerr_reg0 : STD_LOGIC;
  signal sig_rd_sts_tag_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_rd_sts_tag_reg0 : STD_LOGIC;
  signal sig_reset_reg : STD_LOGIC;
  signal sig_rsc2data_ready : STD_LOGIC;
  signal sig_rsc2stat_status : STD_LOGIC_VECTOR ( 6 downto 4 );
  signal sig_rsc2stat_status_valid : STD_LOGIC;
  signal \^sig_rst2all_stop_request\ : STD_LOGIC;
  signal sig_slast_with_stop : STD_LOGIC;
  signal sig_sstrb_stop_mask : STD_LOGIC_VECTOR ( 3 to 3 );
  signal sig_sstrb_with_stop : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_stat2rsc_status_ready : STD_LOGIC;
  signal sig_strb_skid_mux_out : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_strb_skid_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_stream_rst : STD_LOGIC;
  signal sm_scc_sm_ready : STD_LOGIC;
begin
  sig_rst2all_stop_request <= \^sig_rst2all_stop_request\;
\ENABLE_AXIS_SKID.I_MM2S_SKID_BUF\: entity work.axi_dma_ctrl_axi_datamover_skid_buf_11
     port map (
      D(3 downto 0) => sig_sstrb_with_stop(3 downto 0),
      E(0) => sig_data_reg_out_en,
      Q(3 downto 0) => sig_strb_skid_reg(3 downto 0),
      SR(0) => sig_stream_rst,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_rdata(31 downto 0) => m_axi_mm2s_rdata(31 downto 0),
      m_axis_mm2s_tdata(31 downto 0) => m_axis_mm2s_tdata(31 downto 0),
      m_axis_mm2s_tkeep(3 downto 0) => m_axis_mm2s_tkeep(3 downto 0),
      m_axis_mm2s_tlast => m_axis_mm2s_tlast,
      m_axis_mm2s_tready => m_axis_mm2s_tready,
      m_axis_mm2s_tvalid => m_axis_mm2s_tvalid,
      \out\ => p_0_in5_in,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_first_dbeat_reg => p_4_out,
      sig_halt_reg_dly2 => sig_halt_reg_dly2,
      sig_halt_reg_dly3 => sig_halt_reg_dly3,
      sig_halt_reg_dly3_reg => I_RD_DATA_CNTL_n_23,
      sig_init_reg_reg => I_RD_DATA_CNTL_n_12,
      sig_mvalid_stop => sig_mvalid_stop,
      sig_mvalid_stop_reg_reg_0 => p_0_in2_in,
      sig_slast_with_stop => sig_slast_with_stop,
      sig_sstrb_stop_mask(0) => sig_sstrb_stop_mask(3),
      \sig_sstrb_stop_mask_reg[3]_0\ => I_RD_DATA_CNTL_n_10,
      \sig_strb_skid_reg_reg[3]_0\(3 downto 0) => sig_strb_skid_mux_out(3 downto 0)
    );
I_ADDR_CNTL: entity work.axi_dma_ctrl_axi_datamover_addr_cntl
     port map (
      FIFO_Full_reg => I_ADDR_CNTL_n_7,
      SR(0) => sig_stream_rst,
      \in\(38) => I_MSTR_SCC_n_2,
      \in\(37) => sig_mstr2addr_burst(0),
      \in\(36) => I_MSTR_SCC_n_7,
      \in\(35 downto 32) => sig_mstr2data_len(3 downto 0),
      \in\(31 downto 2) => sig_mstr2addr_addr(31 downto 2),
      \in\(1 downto 0) => sig_mstr2data_saddr_lsb(1 downto 0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_araddr(31 downto 0) => m_axi_mm2s_araddr(31 downto 0),
      m_axi_mm2s_arburst(0) => m_axi_mm2s_arburst(0),
      m_axi_mm2s_arlen(4 downto 0) => m_axi_mm2s_arlen(4 downto 0),
      m_axi_mm2s_arready => m_axi_mm2s_arready,
      m_axi_mm2s_arsize(0) => m_axi_mm2s_arsize(0),
      m_axi_mm2s_arvalid => m_axi_mm2s_arvalid,
      \out\ => sig_addr2data_addr_posted,
      sig_addr2rsc_calc_error => sig_addr2rsc_calc_error,
      sig_addr_reg_empty => sig_addr_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ => I_CMD_STATUS_n_5,
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_init_done => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done\,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid
    );
I_CMD_STATUS: entity work.axi_dma_ctrl_axi_datamover_cmd_status_12
     port map (
      D(3 downto 1) => sig_rsc2stat_status(6 downto 4),
      D(0) => sig_rd_sts_tag_reg(0),
      E(0) => \GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/sig_push_regfifo\,
      \GEN_MM2S.queue_dout_new_reg[31]\(40 downto 0) => D(40 downto 0),
      \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\(0) => E(0),
      Q(40) => I_CMD_STATUS_n_12,
      Q(39) => I_CMD_STATUS_n_13,
      Q(38) => I_CMD_STATUS_n_14,
      Q(37) => I_CMD_STATUS_n_15,
      Q(36) => I_CMD_STATUS_n_16,
      Q(35) => I_CMD_STATUS_n_17,
      Q(34) => I_CMD_STATUS_n_18,
      Q(33) => I_CMD_STATUS_n_19,
      Q(32) => I_CMD_STATUS_n_20,
      Q(31) => I_CMD_STATUS_n_21,
      Q(30) => I_CMD_STATUS_n_22,
      Q(29) => I_CMD_STATUS_n_23,
      Q(28) => I_CMD_STATUS_n_24,
      Q(27) => I_CMD_STATUS_n_25,
      Q(26) => I_CMD_STATUS_n_26,
      Q(25) => I_CMD_STATUS_n_27,
      Q(24) => I_CMD_STATUS_n_28,
      Q(23) => I_CMD_STATUS_n_29,
      Q(22) => I_CMD_STATUS_n_30,
      Q(21) => I_CMD_STATUS_n_31,
      Q(20) => I_CMD_STATUS_n_32,
      Q(19) => I_CMD_STATUS_n_33,
      Q(18) => I_CMD_STATUS_n_34,
      Q(17) => I_CMD_STATUS_n_35,
      Q(16) => I_CMD_STATUS_n_36,
      Q(15) => I_CMD_STATUS_n_37,
      Q(14) => I_CMD_STATUS_n_38,
      Q(13) => I_CMD_STATUS_n_39,
      Q(12) => I_CMD_STATUS_n_40,
      Q(11) => I_CMD_STATUS_n_41,
      Q(10) => I_CMD_STATUS_n_42,
      Q(9) => I_CMD_STATUS_n_43,
      Q(8) => I_CMD_STATUS_n_44,
      Q(7) => sig_next_burst,
      Q(6) => I_CMD_STATUS_n_46,
      Q(5) => I_CMD_STATUS_n_47,
      Q(4) => I_CMD_STATUS_n_48,
      Q(3) => I_CMD_STATUS_n_49,
      Q(2) => I_CMD_STATUS_n_50,
      Q(1) => I_CMD_STATUS_n_51,
      Q(0) => I_CMD_STATUS_n_52,
      SR(0) => sig_stream_rst,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      mm2s_decerr_i => mm2s_decerr_i,
      mm2s_interr_i => mm2s_interr_i,
      mm2s_slverr_i => mm2s_slverr_i,
      \mm2s_tag_reg[0]\ => \mm2s_tag_reg[0]\,
      \mm2s_tag_reg[0]_0\ => \mm2s_tag_reg[0]_0\,
      p_2_out => p_2_out,
      p_7_out => p_7_out,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      sig_cmd2mstr_cmd_valid => sig_cmd2mstr_cmd_valid,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done\,
      sig_init_done_0 => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done\,
      sig_init_done_reg => I_CMD_STATUS_n_5,
      sig_init_done_reg_0 => I_CMD_STATUS_n_6,
      sig_rd_sts_tag_reg0 => sig_rd_sts_tag_reg0,
      sig_reset_reg => sig_reset_reg,
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready,
      sm_scc_sm_ready => sm_scc_sm_ready
    );
I_MSTR_SCC: entity work.axi_dma_ctrl_axi_datamover_scc_13
     port map (
      Q(40) => I_CMD_STATUS_n_12,
      Q(39) => I_CMD_STATUS_n_13,
      Q(38) => I_CMD_STATUS_n_14,
      Q(37) => I_CMD_STATUS_n_15,
      Q(36) => I_CMD_STATUS_n_16,
      Q(35) => I_CMD_STATUS_n_17,
      Q(34) => I_CMD_STATUS_n_18,
      Q(33) => I_CMD_STATUS_n_19,
      Q(32) => I_CMD_STATUS_n_20,
      Q(31) => I_CMD_STATUS_n_21,
      Q(30) => I_CMD_STATUS_n_22,
      Q(29) => I_CMD_STATUS_n_23,
      Q(28) => I_CMD_STATUS_n_24,
      Q(27) => I_CMD_STATUS_n_25,
      Q(26) => I_CMD_STATUS_n_26,
      Q(25) => I_CMD_STATUS_n_27,
      Q(24) => I_CMD_STATUS_n_28,
      Q(23) => I_CMD_STATUS_n_29,
      Q(22) => I_CMD_STATUS_n_30,
      Q(21) => I_CMD_STATUS_n_31,
      Q(20) => I_CMD_STATUS_n_32,
      Q(19) => I_CMD_STATUS_n_33,
      Q(18) => I_CMD_STATUS_n_34,
      Q(17) => I_CMD_STATUS_n_35,
      Q(16) => I_CMD_STATUS_n_36,
      Q(15) => I_CMD_STATUS_n_37,
      Q(14) => I_CMD_STATUS_n_38,
      Q(13) => I_CMD_STATUS_n_39,
      Q(12) => I_CMD_STATUS_n_40,
      Q(11) => I_CMD_STATUS_n_41,
      Q(10) => I_CMD_STATUS_n_42,
      Q(9) => I_CMD_STATUS_n_43,
      Q(8) => I_CMD_STATUS_n_44,
      Q(7) => sig_next_burst,
      Q(6) => I_CMD_STATUS_n_46,
      Q(5) => I_CMD_STATUS_n_47,
      Q(4) => I_CMD_STATUS_n_48,
      Q(3) => I_CMD_STATUS_n_49,
      Q(2) => I_CMD_STATUS_n_50,
      Q(1) => I_CMD_STATUS_n_51,
      Q(0) => I_CMD_STATUS_n_52,
      SR(0) => sig_stream_rst,
      \in\(10) => I_MSTR_SCC_n_2,
      \in\(9) => sig_mstr2data_eof,
      \in\(8) => sig_mstr2data_last_strb(3),
      \in\(7) => I_MSTR_SCC_n_5,
      \in\(6) => sig_mstr2data_last_strb(1),
      \in\(5) => I_MSTR_SCC_n_7,
      \in\(4 downto 1) => sig_mstr2data_len(3 downto 0),
      \in\(0) => sig_mstr2data_tag(0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      sig_cmd2addr_valid_reg_0 => I_ADDR_CNTL_n_7,
      sig_cmd2data_valid_reg_0 => I_RD_DATA_CNTL_n_9,
      sig_cmd2mstr_cmd_valid => sig_cmd2mstr_cmd_valid,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      \sig_next_burst_reg_reg[0]\(32) => sig_mstr2addr_burst(0),
      \sig_next_burst_reg_reg[0]\(31 downto 2) => sig_mstr2addr_addr(31 downto 2),
      \sig_next_burst_reg_reg[0]\(1 downto 0) => sig_mstr2data_saddr_lsb(1 downto 0),
      sm_scc_sm_ready => sm_scc_sm_ready
    );
I_RD_DATA_CNTL: entity work.axi_dma_ctrl_axi_datamover_rddata_cntl
     port map (
      D(0) => sig_rsc2stat_status(5),
      E(0) => sig_data_reg_out_en,
      FIFO_Full_reg => I_RD_DATA_CNTL_n_9,
      Q(3 downto 0) => sig_strb_skid_reg(3 downto 0),
      SR(0) => sig_stream_rst,
      \in\(10) => I_MSTR_SCC_n_2,
      \in\(9) => sig_mstr2data_eof,
      \in\(8) => sig_mstr2data_last_strb(3),
      \in\(7) => I_MSTR_SCC_n_5,
      \in\(6) => sig_mstr2data_last_strb(1),
      \in\(5) => I_MSTR_SCC_n_7,
      \in\(4 downto 1) => sig_mstr2data_len(3 downto 0),
      \in\(0) => sig_mstr2data_tag(0),
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      m_axi_mm2s_rready => m_axi_mm2s_rready,
      m_axi_mm2s_rresp(1 downto 0) => m_axi_mm2s_rresp(1 downto 0),
      m_axi_mm2s_rvalid => m_axi_mm2s_rvalid,
      m_axis_mm2s_tready => m_axis_mm2s_tready,
      \out\ => p_0_in5_in,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      \sig_cmd_stat_rst_user_reg_n_cdc_from_reg__0\ => I_CMD_STATUS_n_6,
      sig_coelsc_tag_reg(0) => sig_coelsc_tag_reg(0),
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_data2rsc_calc_err => sig_data2rsc_calc_err,
      sig_data2rsc_slverr => sig_data2rsc_slverr,
      sig_data2rsc_valid => sig_data2rsc_valid,
      sig_halt_reg_dly2 => sig_halt_reg_dly2,
      sig_halt_reg_dly3 => sig_halt_reg_dly3,
      sig_init_done => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done\,
      sig_m_valid_dup_reg => I_RD_DATA_CNTL_n_12,
      sig_m_valid_dup_reg_0 => p_0_in2_in,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_mvalid_stop => sig_mvalid_stop,
      sig_posted_to_axi_reg => sig_addr2data_addr_posted,
      sig_rd_sts_decerr_reg0 => sig_rd_sts_decerr_reg0,
      sig_reset_reg => sig_reset_reg,
      sig_rsc2data_ready => sig_rsc2data_ready,
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_rst2all_stop_request => \^sig_rst2all_stop_request\,
      sig_s_ready_dup_reg => I_RD_DATA_CNTL_n_10,
      sig_s_ready_dup_reg_0 => I_RD_DATA_CNTL_n_11,
      sig_s_ready_out_reg => p_4_out,
      sig_slast_with_stop => sig_slast_with_stop,
      sig_sstrb_stop_mask(0) => sig_sstrb_stop_mask(3),
      \sig_sstrb_stop_mask_reg[3]\ => I_RD_DATA_CNTL_n_23,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready,
      \sig_strb_reg_out_reg[3]\(3 downto 0) => sig_strb_skid_mux_out(3 downto 0),
      \sig_strb_skid_reg_reg[3]\(3 downto 0) => sig_sstrb_with_stop(3 downto 0)
    );
I_RD_STATUS_CNTLR: entity work.axi_dma_ctrl_axi_datamover_rd_status_cntl
     port map (
      D(3 downto 1) => sig_rsc2stat_status(6 downto 4),
      D(0) => sig_rd_sts_tag_reg(0),
      E(0) => \GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/sig_push_regfifo\,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      sig_coelsc_tag_reg(0) => sig_coelsc_tag_reg(0),
      sig_data2rsc_calc_err => sig_data2rsc_calc_err,
      sig_data2rsc_slverr => sig_data2rsc_slverr,
      sig_data2rsc_valid => sig_data2rsc_valid,
      sig_rd_sts_decerr_reg0 => sig_rd_sts_decerr_reg0,
      sig_rd_sts_tag_reg0 => sig_rd_sts_tag_reg0,
      sig_rsc2data_ready => sig_rsc2data_ready,
      sig_rsc2stat_status_valid => sig_rsc2stat_status_valid,
      sig_stat2rsc_status_ready => sig_stat2rsc_status_ready
    );
I_RESET: entity work.axi_dma_ctrl_axi_datamover_reset_14
     port map (
      \GEN_ASYNC_RESET.halt_i_reg\ => \GEN_ASYNC_RESET.halt_i_reg\,
      SR(0) => sig_stream_rst,
      dm_mm2s_prmry_resetn => dm_mm2s_prmry_resetn,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      sig_addr2rsc_calc_error => sig_addr2rsc_calc_error,
      \sig_addr_posted_cntr_reg[2]\ => I_RD_DATA_CNTL_n_11,
      sig_addr_reg_empty => sig_addr_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_data2addr_stop_req => sig_data2addr_stop_req,
      sig_halt_reg_dly3 => sig_halt_reg_dly3,
      sig_rst2all_stop_request => \^sig_rst2all_stop_request\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover_s2mm_basic_wrap is
  port (
    m_axi_s2mm_wvalid : out STD_LOGIC;
    s_axis_s2mm_tready : out STD_LOGIC;
    sig_s_h_halt_reg : out STD_LOGIC;
    m_axi_s2mm_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_awburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_awvalid : out STD_LOGIC;
    m_axi_s2mm_wlast : out STD_LOGIC;
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\ : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ : out STD_LOGIC;
    s2mm_decerr_i : out STD_LOGIC;
    s2mm_interr_i : out STD_LOGIC;
    s2mm_slverr_i : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ : out STD_LOGIC;
    s2mm_halt_cmplt : out STD_LOGIC;
    m_axi_s2mm_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_awlen : out STD_LOGIC_VECTOR ( 4 downto 0 );
    m_axi_s2mm_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_bready : out STD_LOGIC;
    dm_s2mm_prmry_resetn : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    \GEN_ASYNC_RESET.halt_i_reg\ : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    m_axis_s2mm_sts_tready : in STD_LOGIC;
    p_8_out : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    m_axi_s2mm_awready : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_S2MM.queue_dout2_new_reg[31]\ : in STD_LOGIC_VECTOR ( 40 downto 0 );
    s_axis_s2mm_tdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_bvalid : in STD_LOGIC;
    m_axi_s2mm_wready : in STD_LOGIC;
    s_axis_s2mm_tvalid : in STD_LOGIC;
    s_axis_s2mm_tlast : in STD_LOGIC;
    s_axis_s2mm_tkeep : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover_s2mm_basic_wrap : entity is "axi_datamover_s2mm_basic_wrap";
end axi_dma_ctrl_axi_datamover_s2mm_basic_wrap;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover_s2mm_basic_wrap is
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done\ : STD_LOGIC;
  signal \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_wr_fifo\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_rd_empty\ : STD_LOGIC;
  signal \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_wr_fifo\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_inhibit_rdy_n\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_done\ : STD_LOGIC;
  signal I_CMD_STATUS_n_10 : STD_LOGIC;
  signal I_CMD_STATUS_n_11 : STD_LOGIC;
  signal I_CMD_STATUS_n_12 : STD_LOGIC;
  signal I_CMD_STATUS_n_13 : STD_LOGIC;
  signal I_CMD_STATUS_n_14 : STD_LOGIC;
  signal I_CMD_STATUS_n_15 : STD_LOGIC;
  signal I_CMD_STATUS_n_16 : STD_LOGIC;
  signal I_CMD_STATUS_n_17 : STD_LOGIC;
  signal I_CMD_STATUS_n_18 : STD_LOGIC;
  signal I_CMD_STATUS_n_19 : STD_LOGIC;
  signal I_CMD_STATUS_n_20 : STD_LOGIC;
  signal I_CMD_STATUS_n_21 : STD_LOGIC;
  signal I_CMD_STATUS_n_22 : STD_LOGIC;
  signal I_CMD_STATUS_n_23 : STD_LOGIC;
  signal I_CMD_STATUS_n_24 : STD_LOGIC;
  signal I_CMD_STATUS_n_25 : STD_LOGIC;
  signal I_CMD_STATUS_n_26 : STD_LOGIC;
  signal I_CMD_STATUS_n_27 : STD_LOGIC;
  signal I_CMD_STATUS_n_28 : STD_LOGIC;
  signal I_CMD_STATUS_n_29 : STD_LOGIC;
  signal I_CMD_STATUS_n_30 : STD_LOGIC;
  signal I_CMD_STATUS_n_31 : STD_LOGIC;
  signal I_CMD_STATUS_n_32 : STD_LOGIC;
  signal I_CMD_STATUS_n_33 : STD_LOGIC;
  signal I_CMD_STATUS_n_34 : STD_LOGIC;
  signal I_CMD_STATUS_n_35 : STD_LOGIC;
  signal I_CMD_STATUS_n_36 : STD_LOGIC;
  signal I_CMD_STATUS_n_37 : STD_LOGIC;
  signal I_CMD_STATUS_n_38 : STD_LOGIC;
  signal I_CMD_STATUS_n_39 : STD_LOGIC;
  signal I_CMD_STATUS_n_40 : STD_LOGIC;
  signal I_CMD_STATUS_n_41 : STD_LOGIC;
  signal I_CMD_STATUS_n_42 : STD_LOGIC;
  signal I_CMD_STATUS_n_43 : STD_LOGIC;
  signal I_CMD_STATUS_n_44 : STD_LOGIC;
  signal I_CMD_STATUS_n_45 : STD_LOGIC;
  signal I_CMD_STATUS_n_46 : STD_LOGIC;
  signal I_CMD_STATUS_n_47 : STD_LOGIC;
  signal I_CMD_STATUS_n_48 : STD_LOGIC;
  signal I_CMD_STATUS_n_49 : STD_LOGIC;
  signal I_CMD_STATUS_n_50 : STD_LOGIC;
  signal I_CMD_STATUS_n_51 : STD_LOGIC;
  signal I_CMD_STATUS_n_52 : STD_LOGIC;
  signal I_CMD_STATUS_n_53 : STD_LOGIC;
  signal I_CMD_STATUS_n_9 : STD_LOGIC;
  signal I_MSTR_SCC_n_48 : STD_LOGIC;
  signal I_MSTR_SCC_n_5 : STD_LOGIC;
  signal I_MSTR_SCC_n_7 : STD_LOGIC;
  signal I_RESET_n_0 : STD_LOGIC;
  signal \I_WRESP_STATUS_FIFO/sig_init_done\ : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_12 : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_13 : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_17 : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_18 : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_21 : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_9 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_12 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_13 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_14 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_15 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_4 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_5 : STD_LOGIC;
  signal \^use_single_reg.sig_regfifo_dout_reg_reg[0]\ : STD_LOGIC;
  signal p_0_in2_in : STD_LOGIC;
  signal p_0_in3_in : STD_LOGIC;
  signal p_0_out : STD_LOGIC;
  signal p_3_out : STD_LOGIC;
  signal sig_addr2data_addr_posted : STD_LOGIC;
  signal sig_addr2wsc_calc_error : STD_LOGIC;
  signal sig_addr_reg_empty : STD_LOGIC;
  signal sig_calc2dm_calc_err : STD_LOGIC;
  signal sig_cmd2mstr_cmd_valid : STD_LOGIC;
  signal sig_cmd_reg_empty : STD_LOGIC;
  signal sig_data2all_tlast_error : STD_LOGIC;
  signal sig_data2skid_wlast : STD_LOGIC;
  signal sig_data2skid_wstrb : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_data2wsc_calc_err : STD_LOGIC;
  signal sig_data2wsc_cmd_cmplt : STD_LOGIC;
  signal sig_data2wsc_last_err : STD_LOGIC;
  signal sig_data2wsc_tag : STD_LOGIC_VECTOR ( 1 to 1 );
  signal sig_data_reg_out : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal sig_data_reg_out_en : STD_LOGIC;
  signal sig_halt_reg : STD_LOGIC;
  signal sig_halt_reg_dly2 : STD_LOGIC;
  signal sig_halt_reg_dly3 : STD_LOGIC;
  signal sig_last_skid_mux_out : STD_LOGIC;
  signal sig_last_skid_reg : STD_LOGIC;
  signal sig_mstr2addr_addr : STD_LOGIC_VECTOR ( 31 downto 2 );
  signal sig_mstr2addr_burst : STD_LOGIC_VECTOR ( 0 to 0 );
  signal sig_mstr2addr_cmd_valid : STD_LOGIC;
  signal sig_mstr2data_cmd_valid : STD_LOGIC;
  signal sig_mstr2data_eof : STD_LOGIC;
  signal sig_mstr2data_last_strb : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal sig_mstr2data_len : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_mstr2data_saddr_lsb : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal sig_mstr2data_tag : STD_LOGIC_VECTOR ( 1 to 1 );
  signal sig_next_calc_error_reg : STD_LOGIC;
  signal sig_push_to_wsc : STD_LOGIC;
  signal sig_reset_reg : STD_LOGIC;
  signal \^sig_s_h_halt_reg\ : STD_LOGIC;
  signal sig_skid2data_wready : STD_LOGIC;
  signal sig_stat2wsc_status_ready : STD_LOGIC;
  signal sig_stop_request : STD_LOGIC;
  signal sig_strb_reg_out : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_strb_skid_mux_out : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_strb_skid_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal sig_stream_rst : STD_LOGIC;
  signal sig_tlast_err_stop : STD_LOGIC;
  signal sig_wsc2stat_status : STD_LOGIC_VECTOR ( 1 to 1 );
  signal sig_wsc2stat_status_0 : STD_LOGIC_VECTOR ( 6 downto 4 );
  signal sig_wsc2stat_status_valid : STD_LOGIC;
  signal sm_scc_sm_ready : STD_LOGIC;
begin
  \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\ <= \^use_single_reg.sig_regfifo_dout_reg_reg[0]\;
  sig_s_h_halt_reg <= \^sig_s_h_halt_reg\;
\ENABLE_AXIS_SKID.I_S2MM_STRM_SKID_BUF\: entity work.axi_dma_ctrl_axi_datamover_skid_buf
     port map (
      E(0) => sig_data_reg_out_en,
      Q(3 downto 0) => sig_strb_reg_out(3 downto 0),
      SR(0) => sig_stream_rst,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\ => p_0_in2_in,
      p_0_out => p_0_out,
      s_axis_s2mm_tdata(31 downto 0) => s_axis_s2mm_tdata(31 downto 0),
      s_axis_s2mm_tkeep(3 downto 0) => s_axis_s2mm_tkeep(3 downto 0),
      s_axis_s2mm_tlast => s_axis_s2mm_tlast,
      s_axis_s2mm_tready => s_axis_s2mm_tready,
      s_axis_s2mm_tvalid => s_axis_s2mm_tvalid,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      \sig_data_skid_reg_reg[31]_0\(31 downto 0) => sig_data_reg_out(31 downto 0),
      sig_halt_reg_dly2 => sig_halt_reg_dly2,
      sig_halt_reg_dly3 => sig_halt_reg_dly3,
      sig_halt_reg_dly3_reg => I_WR_DATA_CNTL_n_9,
      sig_halt_reg_dly3_reg_0 => I_WR_DATA_CNTL_n_21,
      sig_halt_reg_reg => I_WR_DATA_CNTL_n_18,
      sig_m_valid_dup_reg_0 => I_WR_DATA_CNTL_n_17,
      sig_reset_reg => sig_reset_reg,
      sig_s_ready_out_reg_0 => p_3_out,
      sig_stop_request => sig_stop_request
    );
I_ADDR_CNTL: entity work.\axi_dma_ctrl_axi_datamover_addr_cntl__parameterized0\
     port map (
      SR(0) => sig_stream_rst,
      \in\(38) => sig_calc2dm_calc_err,
      \in\(37) => sig_mstr2addr_burst(0),
      \in\(36) => I_MSTR_SCC_n_7,
      \in\(35 downto 32) => sig_mstr2data_len(3 downto 0),
      \in\(31 downto 2) => sig_mstr2addr_addr(31 downto 2),
      \in\(1 downto 0) => sig_mstr2data_saddr_lsb(1 downto 0),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_awaddr(31 downto 0) => m_axi_s2mm_awaddr(31 downto 0),
      m_axi_s2mm_awburst(0) => m_axi_s2mm_awburst(0),
      m_axi_s2mm_awlen(4 downto 0) => m_axi_s2mm_awlen(4 downto 0),
      m_axi_s2mm_awready => m_axi_s2mm_awready,
      m_axi_s2mm_awsize(0) => m_axi_s2mm_awsize(0),
      m_axi_s2mm_awvalid => m_axi_s2mm_awvalid,
      \out\ => sig_addr2data_addr_posted,
      sig_addr2wsc_calc_error => sig_addr2wsc_calc_error,
      sig_addr_reg_empty => sig_addr_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_reg => I_WR_STATUS_CNTLR_n_14,
      sig_init_done => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done\,
      sig_init_reg2_reg => I_CMD_STATUS_n_11,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_wr_fifo => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_wr_fifo\
    );
I_CMD_STATUS: entity work.axi_dma_ctrl_axi_datamover_cmd_status
     port map (
      D(3 downto 1) => sig_wsc2stat_status_0(6 downto 4),
      D(0) => sig_wsc2stat_status(1),
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\,
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\,
      \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 0) => \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 0),
      Q(40) => I_CMD_STATUS_n_13,
      Q(39) => I_CMD_STATUS_n_14,
      Q(38) => I_CMD_STATUS_n_15,
      Q(37) => I_CMD_STATUS_n_16,
      Q(36) => I_CMD_STATUS_n_17,
      Q(35) => I_CMD_STATUS_n_18,
      Q(34) => I_CMD_STATUS_n_19,
      Q(33) => I_CMD_STATUS_n_20,
      Q(32) => I_CMD_STATUS_n_21,
      Q(31) => I_CMD_STATUS_n_22,
      Q(30) => I_CMD_STATUS_n_23,
      Q(29) => I_CMD_STATUS_n_24,
      Q(28) => I_CMD_STATUS_n_25,
      Q(27) => I_CMD_STATUS_n_26,
      Q(26) => I_CMD_STATUS_n_27,
      Q(25) => I_CMD_STATUS_n_28,
      Q(24) => I_CMD_STATUS_n_29,
      Q(23) => I_CMD_STATUS_n_30,
      Q(22) => I_CMD_STATUS_n_31,
      Q(21) => I_CMD_STATUS_n_32,
      Q(20) => I_CMD_STATUS_n_33,
      Q(19) => I_CMD_STATUS_n_34,
      Q(18) => I_CMD_STATUS_n_35,
      Q(17) => I_CMD_STATUS_n_36,
      Q(16) => I_CMD_STATUS_n_37,
      Q(15) => I_CMD_STATUS_n_38,
      Q(14) => I_CMD_STATUS_n_39,
      Q(13) => I_CMD_STATUS_n_40,
      Q(12) => I_CMD_STATUS_n_41,
      Q(11) => I_CMD_STATUS_n_42,
      Q(10) => I_CMD_STATUS_n_43,
      Q(9) => I_CMD_STATUS_n_44,
      Q(8) => I_CMD_STATUS_n_45,
      Q(7) => I_CMD_STATUS_n_46,
      Q(6) => I_CMD_STATUS_n_47,
      Q(5) => I_CMD_STATUS_n_48,
      Q(4) => I_CMD_STATUS_n_49,
      Q(3) => I_CMD_STATUS_n_50,
      Q(2) => I_CMD_STATUS_n_51,
      Q(1) => I_CMD_STATUS_n_52,
      Q(0) => I_CMD_STATUS_n_53,
      SR(0) => sig_stream_rst,
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\ => \^use_single_reg.sig_regfifo_dout_reg_reg[0]\,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axis_s2mm_sts_tready => m_axis_s2mm_sts_tready,
      p_8_out => p_8_out,
      s2mm_decerr_i => s2mm_decerr_i,
      s2mm_interr_i => s2mm_interr_i,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_slverr_i => s2mm_slverr_i,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      sig_cmd2mstr_cmd_valid => sig_cmd2mstr_cmd_valid,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      sig_init_done => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done\,
      sig_init_done_0 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_done\,
      sig_init_done_1 => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done\,
      sig_init_done_2 => \I_WRESP_STATUS_FIFO/sig_init_done\,
      sig_init_done_reg => I_CMD_STATUS_n_9,
      sig_init_done_reg_0 => I_CMD_STATUS_n_10,
      sig_init_done_reg_1 => I_CMD_STATUS_n_11,
      sig_init_done_reg_2 => I_CMD_STATUS_n_12,
      sig_reset_reg => sig_reset_reg,
      sig_stat2wsc_status_ready => sig_stat2wsc_status_ready,
      sig_wsc2stat_status_valid => sig_wsc2stat_status_valid,
      sm_scc_sm_ready => sm_scc_sm_ready,
      sm_scc_sm_ready_reg => I_MSTR_SCC_n_48
    );
I_MSTR_SCC: entity work.axi_dma_ctrl_axi_datamover_scc
     port map (
      Q(40) => I_CMD_STATUS_n_13,
      Q(39) => I_CMD_STATUS_n_14,
      Q(38) => I_CMD_STATUS_n_15,
      Q(37) => I_CMD_STATUS_n_16,
      Q(36) => I_CMD_STATUS_n_17,
      Q(35) => I_CMD_STATUS_n_18,
      Q(34) => I_CMD_STATUS_n_19,
      Q(33) => I_CMD_STATUS_n_20,
      Q(32) => I_CMD_STATUS_n_21,
      Q(31) => I_CMD_STATUS_n_22,
      Q(30) => I_CMD_STATUS_n_23,
      Q(29) => I_CMD_STATUS_n_24,
      Q(28) => I_CMD_STATUS_n_25,
      Q(27) => I_CMD_STATUS_n_26,
      Q(26) => I_CMD_STATUS_n_27,
      Q(25) => I_CMD_STATUS_n_28,
      Q(24) => I_CMD_STATUS_n_29,
      Q(23) => I_CMD_STATUS_n_30,
      Q(22) => I_CMD_STATUS_n_31,
      Q(21) => I_CMD_STATUS_n_32,
      Q(20) => I_CMD_STATUS_n_33,
      Q(19) => I_CMD_STATUS_n_34,
      Q(18) => I_CMD_STATUS_n_35,
      Q(17) => I_CMD_STATUS_n_36,
      Q(16) => I_CMD_STATUS_n_37,
      Q(15) => I_CMD_STATUS_n_38,
      Q(14) => I_CMD_STATUS_n_39,
      Q(13) => I_CMD_STATUS_n_40,
      Q(12) => I_CMD_STATUS_n_41,
      Q(11) => I_CMD_STATUS_n_42,
      Q(10) => I_CMD_STATUS_n_43,
      Q(9) => I_CMD_STATUS_n_44,
      Q(8) => I_CMD_STATUS_n_45,
      Q(7) => I_CMD_STATUS_n_46,
      Q(6) => I_CMD_STATUS_n_47,
      Q(5) => I_CMD_STATUS_n_48,
      Q(4) => I_CMD_STATUS_n_49,
      Q(3) => I_CMD_STATUS_n_50,
      Q(2) => I_CMD_STATUS_n_51,
      Q(1) => I_CMD_STATUS_n_52,
      Q(0) => I_CMD_STATUS_n_53,
      SR(0) => sig_stream_rst,
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => \^use_single_reg.sig_regfifo_dout_reg_reg[0]\,
      \USE_SINGLE_REG.sig_regfifo_full_reg_reg\ => I_MSTR_SCC_n_48,
      \in\(10) => sig_calc2dm_calc_err,
      \in\(9) => sig_mstr2data_eof,
      \in\(8) => sig_mstr2data_last_strb(3),
      \in\(7) => I_MSTR_SCC_n_5,
      \in\(6) => sig_mstr2data_last_strb(1),
      \in\(5) => I_MSTR_SCC_n_7,
      \in\(4 downto 1) => sig_mstr2data_len(3 downto 0),
      \in\(0) => sig_mstr2data_tag(1),
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      sig_cmd2mstr_cmd_valid => sig_cmd2mstr_cmd_valid,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      sig_mstr2addr_cmd_valid => sig_mstr2addr_cmd_valid,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      \sig_next_burst_reg_reg[0]\(32) => sig_mstr2addr_burst(0),
      \sig_next_burst_reg_reg[0]\(31 downto 2) => sig_mstr2addr_addr(31 downto 2),
      \sig_next_burst_reg_reg[0]\(1 downto 0) => sig_mstr2data_saddr_lsb(1 downto 0),
      sig_wr_fifo => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_wr_fifo\,
      sig_wr_fifo_0 => \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_wr_fifo\,
      sm_scc_sm_ready => sm_scc_sm_ready
    );
I_RESET: entity work.axi_dma_ctrl_axi_datamover_reset
     port map (
      \GEN_ASYNC_RESET.halt_i_reg\ => \GEN_ASYNC_RESET.halt_i_reg\,
      SR(0) => sig_stream_rst,
      dm_s2mm_prmry_resetn => dm_s2mm_prmry_resetn,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      sig_calc_error_reg_reg => I_WR_STATUS_CNTLR_n_12,
      sig_calc_error_reg_reg_0 => I_WR_STATUS_CNTLR_n_13,
      sig_halt_cmplt_reg_0 => I_RESET_n_0,
      sig_halt_reg_dly3 => sig_halt_reg_dly3,
      sig_halt_reg_reg => I_WR_STATUS_CNTLR_n_14,
      sig_next_calc_error_reg_reg => I_WR_DATA_CNTL_n_12,
      sig_s_h_halt_reg => \^sig_s_h_halt_reg\
    );
I_S2MM_MMAP_SKID_BUF: entity work.axi_dma_ctrl_axi_datamover_skid2mm_buf
     port map (
      D(31 downto 0) => sig_data_reg_out(31 downto 0),
      Q(3 downto 0) => sig_strb_skid_reg(3 downto 0),
      SR(0) => sig_stream_rst,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_wdata(31 downto 0) => m_axi_s2mm_wdata(31 downto 0),
      m_axi_s2mm_wlast => m_axi_s2mm_wlast,
      m_axi_s2mm_wready => m_axi_s2mm_wready,
      m_axi_s2mm_wstrb(3 downto 0) => m_axi_s2mm_wstrb(3 downto 0),
      m_axi_s2mm_wvalid => m_axi_s2mm_wvalid,
      \out\ => p_0_in3_in,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      sig_data2skid_wlast => sig_data2skid_wlast,
      sig_halt_reg_reg => I_WR_DATA_CNTL_n_13,
      sig_last_mmap_dbeat_reg_reg => sig_skid2data_wready,
      sig_last_skid_mux_out => sig_last_skid_mux_out,
      sig_last_skid_reg => sig_last_skid_reg,
      \sig_next_strt_strb_reg_reg[3]\(3 downto 0) => sig_data2skid_wstrb(3 downto 0),
      \sig_next_strt_strb_reg_reg[3]_0\(3 downto 0) => sig_strb_skid_mux_out(3 downto 0),
      sig_reset_reg => sig_reset_reg
    );
I_WR_DATA_CNTL: entity work.axi_dma_ctrl_axi_datamover_wrdata_cntl
     port map (
      E(0) => sig_data_reg_out_en,
      FIFO_Full_reg => I_WR_STATUS_CNTLR_n_4,
      Q(0) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_rd_empty\,
      SR(0) => sig_stream_rst,
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => I_WR_STATUS_CNTLR_n_15,
      \in\(3) => sig_data2wsc_tag(1),
      \in\(2) => sig_data2wsc_calc_err,
      \in\(1) => sig_data2wsc_last_err,
      \in\(0) => sig_data2wsc_cmd_cmplt,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      \out\ => p_0_in2_in,
      p_0_out => p_0_out,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_data2skid_wlast => sig_data2skid_wlast,
      sig_halt_cmplt_reg => I_WR_DATA_CNTL_n_12,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_dly1_reg => I_WR_STATUS_CNTLR_n_5,
      sig_halt_reg_dly2 => sig_halt_reg_dly2,
      sig_halt_reg_dly3 => sig_halt_reg_dly3,
      sig_inhibit_rdy_n => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_inhibit_rdy_n\,
      sig_init_done => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done\,
      sig_init_reg2_reg => I_CMD_STATUS_n_9,
      sig_last_skid_mux_out => sig_last_skid_mux_out,
      sig_last_skid_reg => sig_last_skid_reg,
      sig_m_valid_out_reg => p_3_out,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_posted_to_axi_reg => sig_addr2data_addr_posted,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_s_ready_dup_reg => p_0_in3_in,
      sig_s_ready_out_reg => I_WR_DATA_CNTL_n_13,
      sig_s_ready_out_reg_0 => I_WR_DATA_CNTL_n_18,
      sig_s_ready_out_reg_1 => I_WR_DATA_CNTL_n_21,
      sig_s_ready_out_reg_2 => sig_skid2data_wready,
      sig_sready_stop_reg_reg => I_WR_DATA_CNTL_n_9,
      sig_stop_request => sig_stop_request,
      \sig_strb_reg_out_reg[3]\ => I_WR_DATA_CNTL_n_17,
      \sig_strb_reg_out_reg[3]_0\(3 downto 0) => sig_strb_skid_mux_out(3 downto 0),
      \sig_strb_reg_out_reg[3]_1\(3 downto 0) => sig_strb_reg_out(3 downto 0),
      \sig_strb_skid_reg_reg[3]\(3 downto 0) => sig_data2skid_wstrb(3 downto 0),
      \sig_strb_skid_reg_reg[3]_0\(3 downto 0) => sig_strb_skid_reg(3 downto 0),
      sig_tlast_err_stop => sig_tlast_err_stop,
      sig_wr_fifo => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_wr_fifo\,
      sm_set_error_reg(10) => sig_calc2dm_calc_err,
      sm_set_error_reg(9) => sig_mstr2data_eof,
      sm_set_error_reg(8) => sig_mstr2data_last_strb(3),
      sm_set_error_reg(7) => I_MSTR_SCC_n_5,
      sm_set_error_reg(6) => sig_mstr2data_last_strb(1),
      sm_set_error_reg(5) => I_MSTR_SCC_n_7,
      sm_set_error_reg(4 downto 1) => sig_mstr2data_len(3 downto 0),
      sm_set_error_reg(0) => sig_mstr2data_tag(1)
    );
I_WR_STATUS_CNTLR: entity work.axi_dma_ctrl_axi_datamover_wr_status_cntl
     port map (
      D(3 downto 1) => sig_wsc2stat_status_0(6 downto 4),
      D(0) => sig_wsc2stat_status(1),
      \INFERRED_GEN.cnt_i_reg[0]\ => I_WR_STATUS_CNTLR_n_4,
      Q(0) => \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_rd_empty\,
      SR(0) => sig_stream_rst,
      \in\(3) => sig_data2wsc_tag(1),
      \in\(2) => sig_data2wsc_calc_err,
      \in\(1) => sig_data2wsc_last_err,
      \in\(0) => sig_data2wsc_cmd_cmplt,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      \out\ => sig_addr2data_addr_posted,
      sig_addr2wsc_calc_error => sig_addr2wsc_calc_error,
      sig_addr_reg_empty => sig_addr_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => I_RESET_n_0,
      sig_data2all_tlast_error => sig_data2all_tlast_error,
      sig_dqual_reg_empty_reg => I_WR_STATUS_CNTLR_n_15,
      sig_halt_cmplt_reg => I_WR_STATUS_CNTLR_n_12,
      sig_halt_cmplt_reg_0 => I_WR_STATUS_CNTLR_n_13,
      sig_halt_cmplt_reg_1 => I_WR_STATUS_CNTLR_n_14,
      sig_halt_reg => sig_halt_reg,
      sig_halt_reg_dly2_reg => I_WR_STATUS_CNTLR_n_5,
      sig_inhibit_rdy_n => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_inhibit_rdy_n\,
      sig_init_done => \I_WRESP_STATUS_FIFO/sig_init_done\,
      sig_init_done_0 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_done\,
      sig_init_reg2_reg => I_CMD_STATUS_n_12,
      sig_init_reg2_reg_0 => I_CMD_STATUS_n_10,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_s_h_halt_reg => \^sig_s_h_halt_reg\,
      sig_stat2wsc_status_ready => sig_stat2wsc_status_ready,
      sig_tlast_err_stop => sig_tlast_err_stop,
      sig_wsc2stat_status_valid => sig_wsc2stat_status_valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_s2mm_basic_wrap is
  port (
    m_axi_sg_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_awvalid : out STD_LOGIC;
    m_axi_sg_awaddr : out STD_LOGIC_VECTOR ( 27 downto 0 );
    s_axis_updt_cmd_tready : out STD_LOGIC;
    updt_done_reg : out STD_LOGIC;
    \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ : out STD_LOGIC;
    m_axi_sg_bready : out STD_LOGIC;
    m_axi_sg_wvalid : out STD_LOGIC;
    \pntr_cs_reg[1]\ : out STD_LOGIC;
    \pntr_cs_reg[1]_0\ : out STD_LOGIC;
    \pntr_cs_reg[1]_1\ : out STD_LOGIC;
    sig_push_to_wsc_reg : out STD_LOGIC;
    m_axi_sg_wlast : out STD_LOGIC;
    updt_decerr_i : out STD_LOGIC;
    updt_interr_i : out STD_LOGIC;
    updt_slverr_i : out STD_LOGIC;
    sig_init_done_reg : out STD_LOGIC;
    sig_init_done_reg_0 : out STD_LOGIC;
    sig_stream_rst : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_last_mmap_dbeat : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg : in STD_LOGIC;
    p_20_out_0 : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    follower_full_mm2s : in STD_LOGIC;
    p_38_out : in STD_LOGIC;
    follower_full_s2mm : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg\ : in STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sig_init_done : in STD_LOGIC;
    sig_init_done_0 : in STD_LOGIC;
    m_axi_sg_awready : in STD_LOGIC;
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \update_address_reg[31]\ : in STD_LOGIC_VECTOR ( 26 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_s2mm_basic_wrap : entity is "axi_sg_s2mm_basic_wrap";
end axi_dma_ctrl_axi_sg_s2mm_basic_wrap;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_s2mm_basic_wrap is
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_inhibit_rdy_n\ : STD_LOGIC;
  signal \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_done\ : STD_LOGIC;
  signal \^gen_omit_indet_btt.sig_tlast_error_reg_reg\ : STD_LOGIC;
  signal I_ADDR_CNTL_n_32 : STD_LOGIC;
  signal I_CMD_STATUS_n_10 : STD_LOGIC;
  signal I_CMD_STATUS_n_12 : STD_LOGIC;
  signal I_CMD_STATUS_n_13 : STD_LOGIC;
  signal I_CMD_STATUS_n_14 : STD_LOGIC;
  signal I_CMD_STATUS_n_15 : STD_LOGIC;
  signal I_CMD_STATUS_n_16 : STD_LOGIC;
  signal I_CMD_STATUS_n_17 : STD_LOGIC;
  signal I_CMD_STATUS_n_18 : STD_LOGIC;
  signal I_CMD_STATUS_n_19 : STD_LOGIC;
  signal I_CMD_STATUS_n_20 : STD_LOGIC;
  signal I_CMD_STATUS_n_21 : STD_LOGIC;
  signal I_CMD_STATUS_n_22 : STD_LOGIC;
  signal I_CMD_STATUS_n_23 : STD_LOGIC;
  signal I_CMD_STATUS_n_24 : STD_LOGIC;
  signal I_CMD_STATUS_n_25 : STD_LOGIC;
  signal I_CMD_STATUS_n_26 : STD_LOGIC;
  signal I_CMD_STATUS_n_27 : STD_LOGIC;
  signal I_CMD_STATUS_n_28 : STD_LOGIC;
  signal I_CMD_STATUS_n_29 : STD_LOGIC;
  signal I_CMD_STATUS_n_30 : STD_LOGIC;
  signal I_CMD_STATUS_n_31 : STD_LOGIC;
  signal I_CMD_STATUS_n_32 : STD_LOGIC;
  signal I_CMD_STATUS_n_33 : STD_LOGIC;
  signal I_CMD_STATUS_n_34 : STD_LOGIC;
  signal I_CMD_STATUS_n_35 : STD_LOGIC;
  signal I_CMD_STATUS_n_36 : STD_LOGIC;
  signal I_CMD_STATUS_n_37 : STD_LOGIC;
  signal I_CMD_STATUS_n_38 : STD_LOGIC;
  signal I_CMD_STATUS_n_39 : STD_LOGIC;
  signal I_CMD_STATUS_n_9 : STD_LOGIC;
  signal I_MSTR_SCC_n_10 : STD_LOGIC;
  signal I_MSTR_SCC_n_11 : STD_LOGIC;
  signal I_MSTR_SCC_n_12 : STD_LOGIC;
  signal I_MSTR_SCC_n_13 : STD_LOGIC;
  signal I_MSTR_SCC_n_14 : STD_LOGIC;
  signal I_MSTR_SCC_n_15 : STD_LOGIC;
  signal I_MSTR_SCC_n_16 : STD_LOGIC;
  signal I_MSTR_SCC_n_17 : STD_LOGIC;
  signal I_MSTR_SCC_n_18 : STD_LOGIC;
  signal I_MSTR_SCC_n_19 : STD_LOGIC;
  signal I_MSTR_SCC_n_2 : STD_LOGIC;
  signal I_MSTR_SCC_n_20 : STD_LOGIC;
  signal I_MSTR_SCC_n_21 : STD_LOGIC;
  signal I_MSTR_SCC_n_22 : STD_LOGIC;
  signal I_MSTR_SCC_n_23 : STD_LOGIC;
  signal I_MSTR_SCC_n_24 : STD_LOGIC;
  signal I_MSTR_SCC_n_25 : STD_LOGIC;
  signal I_MSTR_SCC_n_26 : STD_LOGIC;
  signal I_MSTR_SCC_n_27 : STD_LOGIC;
  signal I_MSTR_SCC_n_28 : STD_LOGIC;
  signal I_MSTR_SCC_n_29 : STD_LOGIC;
  signal I_MSTR_SCC_n_3 : STD_LOGIC;
  signal I_MSTR_SCC_n_30 : STD_LOGIC;
  signal I_MSTR_SCC_n_31 : STD_LOGIC;
  signal I_MSTR_SCC_n_32 : STD_LOGIC;
  signal I_MSTR_SCC_n_33 : STD_LOGIC;
  signal I_MSTR_SCC_n_5 : STD_LOGIC;
  signal I_MSTR_SCC_n_7 : STD_LOGIC;
  signal I_MSTR_SCC_n_8 : STD_LOGIC;
  signal I_MSTR_SCC_n_9 : STD_LOGIC;
  signal \I_WRESP_STATUS_FIFO/sig_init_done\ : STD_LOGIC;
  signal I_WR_DATA_CNTL_n_6 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_10 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_11 : STD_LOGIC;
  signal I_WR_STATUS_CNTLR_n_4 : STD_LOGIC;
  signal sig_addr2data_addr_posted : STD_LOGIC;
  signal sig_addr2wsc_cmd_fifo_empty : STD_LOGIC;
  signal sig_btt_is_zero : STD_LOGIC;
  signal sig_calc2dm_calc_err : STD_LOGIC;
  signal sig_cmd_reg_empty : STD_LOGIC;
  signal sig_coelsc_okay_reg : STD_LOGIC;
  signal sig_data2wsc_calc_err : STD_LOGIC;
  signal sig_data2wsc_cmd_cmplt : STD_LOGIC;
  signal sig_data2wsc_last_err : STD_LOGIC;
  signal sig_dqual_reg_empty : STD_LOGIC;
  signal sig_load_input_cmd : STD_LOGIC;
  signal sig_mstr2data_cmd_valid : STD_LOGIC;
  signal sig_next_calc_error_reg : STD_LOGIC;
  signal sig_push_addr_reg1_out : STD_LOGIC;
  signal sig_push_to_wsc : STD_LOGIC;
  signal sig_stat2wsc_status_ready : STD_LOGIC;
  signal sig_tlast_err_stop : STD_LOGIC;
  signal sig_wsc2stat_status : STD_LOGIC_VECTOR ( 6 downto 4 );
  signal sig_wsc2stat_status_valid : STD_LOGIC;
begin
  \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ <= \^gen_omit_indet_btt.sig_tlast_error_reg_reg\;
I_ADDR_CNTL: entity work.\axi_dma_ctrl_axi_sg_addr_cntl__parameterized0\
     port map (
      \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ => \^gen_omit_indet_btt.sig_tlast_error_reg_reg\,
      Q(26) => I_MSTR_SCC_n_7,
      Q(25) => I_MSTR_SCC_n_8,
      Q(24) => I_MSTR_SCC_n_9,
      Q(23) => I_MSTR_SCC_n_10,
      Q(22) => I_MSTR_SCC_n_11,
      Q(21) => I_MSTR_SCC_n_12,
      Q(20) => I_MSTR_SCC_n_13,
      Q(19) => I_MSTR_SCC_n_14,
      Q(18) => I_MSTR_SCC_n_15,
      Q(17) => I_MSTR_SCC_n_16,
      Q(16) => I_MSTR_SCC_n_17,
      Q(15) => I_MSTR_SCC_n_18,
      Q(14) => I_MSTR_SCC_n_19,
      Q(13) => I_MSTR_SCC_n_20,
      Q(12) => I_MSTR_SCC_n_21,
      Q(11) => I_MSTR_SCC_n_22,
      Q(10) => I_MSTR_SCC_n_23,
      Q(9) => I_MSTR_SCC_n_24,
      Q(8) => I_MSTR_SCC_n_25,
      Q(7) => I_MSTR_SCC_n_26,
      Q(6) => I_MSTR_SCC_n_27,
      Q(5) => I_MSTR_SCC_n_28,
      Q(4) => I_MSTR_SCC_n_29,
      Q(3) => I_MSTR_SCC_n_30,
      Q(2) => I_MSTR_SCC_n_31,
      Q(1) => I_MSTR_SCC_n_32,
      Q(0) => I_MSTR_SCC_n_33,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_awaddr(27 downto 0) => m_axi_sg_awaddr(27 downto 0),
      m_axi_sg_awready => m_axi_sg_awready,
      m_axi_sg_awsize(0) => m_axi_sg_awsize(0),
      m_axi_sg_awvalid => m_axi_sg_awvalid,
      \out\ => sig_addr2data_addr_posted,
      sig_addr2wsc_cmd_fifo_empty => sig_addr2wsc_cmd_fifo_empty,
      sig_calc2dm_calc_err => sig_calc2dm_calc_err,
      sig_cmd2addr_valid1_reg => I_MSTR_SCC_n_3,
      \sig_cmd_addr_reg_reg[3]\ => I_ADDR_CNTL_n_32,
      \sig_cmd_addr_reg_reg[3]_0\ => I_MSTR_SCC_n_2,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out,
      sm_set_error_reg => I_MSTR_SCC_n_5
    );
I_CMD_STATUS: entity work.axi_dma_ctrl_axi_sg_cmd_status
     port map (
      D(3) => sig_coelsc_okay_reg,
      D(2 downto 0) => sig_wsc2stat_status(6 downto 4),
      \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ => \^gen_omit_indet_btt.sig_tlast_error_reg_reg\,
      Q(27) => I_CMD_STATUS_n_12,
      Q(26) => I_CMD_STATUS_n_13,
      Q(25) => I_CMD_STATUS_n_14,
      Q(24) => I_CMD_STATUS_n_15,
      Q(23) => I_CMD_STATUS_n_16,
      Q(22) => I_CMD_STATUS_n_17,
      Q(21) => I_CMD_STATUS_n_18,
      Q(20) => I_CMD_STATUS_n_19,
      Q(19) => I_CMD_STATUS_n_20,
      Q(18) => I_CMD_STATUS_n_21,
      Q(17) => I_CMD_STATUS_n_22,
      Q(16) => I_CMD_STATUS_n_23,
      Q(15) => I_CMD_STATUS_n_24,
      Q(14) => I_CMD_STATUS_n_25,
      Q(13) => I_CMD_STATUS_n_26,
      Q(12) => I_CMD_STATUS_n_27,
      Q(11) => I_CMD_STATUS_n_28,
      Q(10) => I_CMD_STATUS_n_29,
      Q(9) => I_CMD_STATUS_n_30,
      Q(8) => I_CMD_STATUS_n_31,
      Q(7) => I_CMD_STATUS_n_32,
      Q(6) => I_CMD_STATUS_n_33,
      Q(5) => I_CMD_STATUS_n_34,
      Q(4) => I_CMD_STATUS_n_35,
      Q(3) => I_CMD_STATUS_n_36,
      Q(2) => I_CMD_STATUS_n_37,
      Q(1) => I_CMD_STATUS_n_38,
      Q(0) => I_CMD_STATUS_n_39,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      p_18_out => p_18_out,
      p_20_out_0 => p_20_out_0,
      s_axis_updt_cmd_tready => s_axis_updt_cmd_tready,
      sig_addr2wsc_cmd_fifo_empty => sig_addr2wsc_cmd_fifo_empty,
      sig_btt_is_zero => sig_btt_is_zero,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_init_done => sig_init_done,
      sig_init_done_0 => sig_init_done_0,
      sig_init_done_1 => \I_WRESP_STATUS_FIFO/sig_init_done\,
      sig_init_done_2 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_done\,
      sig_init_done_reg => sig_init_done_reg,
      sig_init_done_reg_0 => sig_init_done_reg_0,
      sig_init_done_reg_1 => I_CMD_STATUS_n_9,
      sig_init_done_reg_2 => I_CMD_STATUS_n_10,
      sig_load_input_cmd => sig_load_input_cmd,
      sig_stat2wsc_status_ready => sig_stat2wsc_status_ready,
      sig_stream_rst => sig_stream_rst,
      sig_wsc2stat_status_valid => sig_wsc2stat_status_valid,
      \update_address_reg[31]\(26 downto 0) => \update_address_reg[31]\(26 downto 0),
      updt_decerr_i => updt_decerr_i,
      updt_done_reg => updt_done_reg,
      updt_interr_i => updt_interr_i,
      updt_slverr_i => updt_slverr_i
    );
I_MSTR_SCC: entity work.axi_dma_ctrl_axi_sg_scc_wr
     port map (
      \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ => \^gen_omit_indet_btt.sig_tlast_error_reg_reg\,
      Q(27) => I_CMD_STATUS_n_12,
      Q(26) => I_CMD_STATUS_n_13,
      Q(25) => I_CMD_STATUS_n_14,
      Q(24) => I_CMD_STATUS_n_15,
      Q(23) => I_CMD_STATUS_n_16,
      Q(22) => I_CMD_STATUS_n_17,
      Q(21) => I_CMD_STATUS_n_18,
      Q(20) => I_CMD_STATUS_n_19,
      Q(19) => I_CMD_STATUS_n_20,
      Q(18) => I_CMD_STATUS_n_21,
      Q(17) => I_CMD_STATUS_n_22,
      Q(16) => I_CMD_STATUS_n_23,
      Q(15) => I_CMD_STATUS_n_24,
      Q(14) => I_CMD_STATUS_n_25,
      Q(13) => I_CMD_STATUS_n_26,
      Q(12) => I_CMD_STATUS_n_27,
      Q(11) => I_CMD_STATUS_n_28,
      Q(10) => I_CMD_STATUS_n_29,
      Q(9) => I_CMD_STATUS_n_30,
      Q(8) => I_CMD_STATUS_n_31,
      Q(7) => I_CMD_STATUS_n_32,
      Q(6) => I_CMD_STATUS_n_33,
      Q(5) => I_CMD_STATUS_n_34,
      Q(4) => I_CMD_STATUS_n_35,
      Q(3) => I_CMD_STATUS_n_36,
      Q(2) => I_CMD_STATUS_n_37,
      Q(1) => I_CMD_STATUS_n_38,
      Q(0) => I_CMD_STATUS_n_39,
      m_axi_sg_aclk => m_axi_sg_aclk,
      sig_addr2wsc_cmd_fifo_empty => sig_addr2wsc_cmd_fifo_empty,
      sig_addr_reg_empty_reg => I_ADDR_CNTL_n_32,
      sig_addr_valid_reg_reg => I_MSTR_SCC_n_5,
      sig_btt_is_zero => sig_btt_is_zero,
      sig_calc2dm_calc_err => sig_calc2dm_calc_err,
      sig_cmd_reg_empty => sig_cmd_reg_empty,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_load_input_cmd => sig_load_input_cmd,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      \sig_next_addr_reg_reg[31]\(26) => I_MSTR_SCC_n_7,
      \sig_next_addr_reg_reg[31]\(25) => I_MSTR_SCC_n_8,
      \sig_next_addr_reg_reg[31]\(24) => I_MSTR_SCC_n_9,
      \sig_next_addr_reg_reg[31]\(23) => I_MSTR_SCC_n_10,
      \sig_next_addr_reg_reg[31]\(22) => I_MSTR_SCC_n_11,
      \sig_next_addr_reg_reg[31]\(21) => I_MSTR_SCC_n_12,
      \sig_next_addr_reg_reg[31]\(20) => I_MSTR_SCC_n_13,
      \sig_next_addr_reg_reg[31]\(19) => I_MSTR_SCC_n_14,
      \sig_next_addr_reg_reg[31]\(18) => I_MSTR_SCC_n_15,
      \sig_next_addr_reg_reg[31]\(17) => I_MSTR_SCC_n_16,
      \sig_next_addr_reg_reg[31]\(16) => I_MSTR_SCC_n_17,
      \sig_next_addr_reg_reg[31]\(15) => I_MSTR_SCC_n_18,
      \sig_next_addr_reg_reg[31]\(14) => I_MSTR_SCC_n_19,
      \sig_next_addr_reg_reg[31]\(13) => I_MSTR_SCC_n_20,
      \sig_next_addr_reg_reg[31]\(12) => I_MSTR_SCC_n_21,
      \sig_next_addr_reg_reg[31]\(11) => I_MSTR_SCC_n_22,
      \sig_next_addr_reg_reg[31]\(10) => I_MSTR_SCC_n_23,
      \sig_next_addr_reg_reg[31]\(9) => I_MSTR_SCC_n_24,
      \sig_next_addr_reg_reg[31]\(8) => I_MSTR_SCC_n_25,
      \sig_next_addr_reg_reg[31]\(7) => I_MSTR_SCC_n_26,
      \sig_next_addr_reg_reg[31]\(6) => I_MSTR_SCC_n_27,
      \sig_next_addr_reg_reg[31]\(5) => I_MSTR_SCC_n_28,
      \sig_next_addr_reg_reg[31]\(4) => I_MSTR_SCC_n_29,
      \sig_next_addr_reg_reg[31]\(3) => I_MSTR_SCC_n_30,
      \sig_next_addr_reg_reg[31]\(2) => I_MSTR_SCC_n_31,
      \sig_next_addr_reg_reg[31]\(1) => I_MSTR_SCC_n_32,
      \sig_next_addr_reg_reg[31]\(0) => I_MSTR_SCC_n_33,
      \sig_next_addr_reg_reg[3]\ => I_MSTR_SCC_n_2,
      sig_posted_to_axi_2_reg => I_MSTR_SCC_n_3,
      sig_push_addr_reg1_out => sig_push_addr_reg1_out,
      sig_stream_rst => sig_stream_rst
    );
I_WR_DATA_CNTL: entity work.axi_dma_ctrl_axi_sg_wrdata_cntl
     port map (
      FIFO_Full_reg => I_WR_DATA_CNTL_n_6,
      FIFO_Full_reg_0 => I_WR_STATUS_CNTLR_n_4,
      \GEN_CH2_UPDATE.ch2_active_i_reg\ => \GEN_CH2_UPDATE.ch2_active_i_reg\,
      \GEN_CH2_UPDATE.ch2_active_i_reg_0\ => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg_0\ => \^gen_omit_indet_btt.sig_tlast_error_reg_reg\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\(0) => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\(0),
      Q(0) => Q(0),
      \USE_SINGLE_REG.sig_regfifo_empty_reg_reg\ => I_WR_STATUS_CNTLR_n_11,
      follower_full_mm2s => follower_full_mm2s,
      follower_full_s2mm => follower_full_s2mm,
      \in\(2) => sig_data2wsc_calc_err,
      \in\(1) => sig_data2wsc_last_err,
      \in\(0) => sig_data2wsc_cmd_cmplt,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_wlast => m_axi_sg_wlast,
      m_axi_sg_wready => m_axi_sg_wready,
      m_axi_sg_wvalid => m_axi_sg_wvalid,
      \out\ => sig_addr2data_addr_posted,
      p_38_out => p_38_out,
      \pntr_cs_reg[1]\ => \pntr_cs_reg[1]\,
      \pntr_cs_reg[1]_0\ => \pntr_cs_reg[1]_0\,
      \pntr_cs_reg[1]_1\ => \pntr_cs_reg[1]_1\,
      sig_calc2dm_calc_err => sig_calc2dm_calc_err,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_inhibit_rdy_n => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_inhibit_rdy_n\,
      sig_inhibit_rdy_n_reg => I_WR_STATUS_CNTLR_n_10,
      sig_last_mmap_dbeat => sig_last_mmap_dbeat,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_push_to_wsc_reg_0 => sig_push_to_wsc_reg,
      sig_stream_rst => sig_stream_rst,
      sig_tlast_err_stop => sig_tlast_err_stop
    );
I_WR_STATUS_CNTLR: entity work.axi_dma_ctrl_axi_sg_wr_status_cntl
     port map (
      D(3) => sig_coelsc_okay_reg,
      D(2 downto 0) => sig_wsc2stat_status(6 downto 4),
      \GEN_OMIT_INDET_BTT.sig_tlast_err_stop_reg\ => I_WR_DATA_CNTL_n_6,
      \INFERRED_GEN.cnt_i_reg[0]\ => I_WR_STATUS_CNTLR_n_4,
      \in\(2) => sig_data2wsc_calc_err,
      \in\(1) => sig_data2wsc_last_err,
      \in\(0) => sig_data2wsc_cmd_cmplt,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
      sig_dqual_reg_empty => sig_dqual_reg_empty,
      sig_dqual_reg_empty_reg => I_WR_STATUS_CNTLR_n_11,
      sig_inhibit_rdy_n => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_inhibit_rdy_n\,
      sig_init_done => \I_WRESP_STATUS_FIFO/sig_init_done\,
      sig_init_done_0 => \GEN_OMIT_INDET_BTT.I_DATA_CNTL_STATUS_FIFO/sig_init_done\,
      sig_init_reg_reg => I_CMD_STATUS_n_9,
      sig_init_reg_reg_0 => I_CMD_STATUS_n_10,
      sig_mstr2data_cmd_valid => sig_mstr2data_cmd_valid,
      sig_next_calc_error_reg => sig_next_calc_error_reg,
      sig_push_to_wsc => sig_push_to_wsc,
      sig_push_to_wsc_reg => I_WR_STATUS_CNTLR_n_10,
      sig_stat2wsc_status_ready => sig_stat2wsc_status_ready,
      sig_stream_rst => sig_stream_rst,
      sig_tlast_err_stop => sig_tlast_err_stop,
      sig_wsc2stat_status_valid => sig_wsc2stat_status_valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_datamover is
  port (
    m_axis_mm2s_tvalid : out STD_LOGIC;
    m_axi_s2mm_wvalid : out STD_LOGIC;
    s_axis_s2mm_tready : out STD_LOGIC;
    sig_rst2all_stop_request : out STD_LOGIC;
    m_axi_mm2s_arsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_mm2s_arvalid : out STD_LOGIC;
    m_axis_mm2s_tlast : out STD_LOGIC;
    sig_s_h_halt_reg : out STD_LOGIC;
    m_axi_s2mm_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_awburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_s2mm_awvalid : out STD_LOGIC;
    m_axi_s2mm_wlast : out STD_LOGIC;
    s_axis_mm2s_cmd_tready : out STD_LOGIC;
    m_axis_mm2s_sts_tvalid_int : out STD_LOGIC;
    s_axis_s2mm_cmd_tready : out STD_LOGIC;
    m_axis_s2mm_sts_tvalid_int : out STD_LOGIC;
    m_axi_mm2s_rready : out STD_LOGIC;
    mm2s_decerr_i : out STD_LOGIC;
    mm2s_interr_i : out STD_LOGIC;
    mm2s_slverr_i : out STD_LOGIC;
    \mm2s_tag_reg[0]\ : out STD_LOGIC;
    s2mm_decerr_i : out STD_LOGIC;
    s2mm_interr_i : out STD_LOGIC;
    s2mm_slverr_i : out STD_LOGIC;
    \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ : out STD_LOGIC;
    mm2s_halt_cmplt : out STD_LOGIC;
    m_axi_mm2s_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_arlen : out STD_LOGIC_VECTOR ( 4 downto 0 );
    m_axis_mm2s_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axis_mm2s_tkeep : out STD_LOGIC_VECTOR ( 3 downto 0 );
    s2mm_halt_cmplt : out STD_LOGIC;
    m_axi_s2mm_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_awlen : out STD_LOGIC_VECTOR ( 4 downto 0 );
    m_axi_s2mm_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_bready : out STD_LOGIC;
    dm_mm2s_prmry_resetn : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    \GEN_ASYNC_RESET.halt_i_reg\ : in STD_LOGIC;
    dm_s2mm_prmry_resetn : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    \GEN_ASYNC_RESET.halt_i_reg_0\ : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    p_2_out : in STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axi_mm2s_rlast : in STD_LOGIC;
    m_axi_mm2s_rvalid : in STD_LOGIC;
    m_axi_mm2s_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_arready : in STD_LOGIC;
    m_axi_mm2s_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    m_axis_s2mm_sts_tready : in STD_LOGIC;
    p_7_out : in STD_LOGIC;
    p_8_out : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    m_axi_s2mm_awready : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 40 downto 0 );
    \GEN_S2MM.queue_dout2_new_reg[31]\ : in STD_LOGIC_VECTOR ( 40 downto 0 );
    s_axis_s2mm_tdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_bvalid : in STD_LOGIC;
    m_axi_s2mm_wready : in STD_LOGIC;
    s_axis_s2mm_tvalid : in STD_LOGIC;
    s_axis_s2mm_tlast : in STD_LOGIC;
    s_axis_s2mm_tkeep : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_datamover : entity is "axi_datamover";
end axi_dma_ctrl_axi_datamover;

architecture STRUCTURE of axi_dma_ctrl_axi_datamover is
begin
\GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER\: entity work.axi_dma_ctrl_axi_datamover_mm2s_basic_wrap
     port map (
      D(40 downto 0) => D(40 downto 0),
      E(0) => E(0),
      \GEN_ASYNC_RESET.halt_i_reg\ => \GEN_ASYNC_RESET.halt_i_reg\,
      dm_mm2s_prmry_resetn => dm_mm2s_prmry_resetn,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_araddr(31 downto 0) => m_axi_mm2s_araddr(31 downto 0),
      m_axi_mm2s_arburst(0) => m_axi_mm2s_arburst(0),
      m_axi_mm2s_arlen(4 downto 0) => m_axi_mm2s_arlen(4 downto 0),
      m_axi_mm2s_arready => m_axi_mm2s_arready,
      m_axi_mm2s_arsize(0) => m_axi_mm2s_arsize(0),
      m_axi_mm2s_arvalid => m_axi_mm2s_arvalid,
      m_axi_mm2s_rdata(31 downto 0) => m_axi_mm2s_rdata(31 downto 0),
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      m_axi_mm2s_rready => m_axi_mm2s_rready,
      m_axi_mm2s_rresp(1 downto 0) => m_axi_mm2s_rresp(1 downto 0),
      m_axi_mm2s_rvalid => m_axi_mm2s_rvalid,
      m_axis_mm2s_tdata(31 downto 0) => m_axis_mm2s_tdata(31 downto 0),
      m_axis_mm2s_tkeep(3 downto 0) => m_axis_mm2s_tkeep(3 downto 0),
      m_axis_mm2s_tlast => m_axis_mm2s_tlast,
      m_axis_mm2s_tready => m_axis_mm2s_tready,
      m_axis_mm2s_tvalid => m_axis_mm2s_tvalid,
      mm2s_decerr_i => mm2s_decerr_i,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      mm2s_interr_i => mm2s_interr_i,
      mm2s_slverr_i => mm2s_slverr_i,
      \mm2s_tag_reg[0]\ => m_axis_mm2s_sts_tvalid_int,
      \mm2s_tag_reg[0]_0\ => \mm2s_tag_reg[0]\,
      p_2_out => p_2_out,
      p_7_out => p_7_out,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      sig_rst2all_stop_request => sig_rst2all_stop_request
    );
\GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER\: entity work.axi_dma_ctrl_axi_datamover_s2mm_basic_wrap
     port map (
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ => m_axis_s2mm_sts_tvalid_int,
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg_0\ => \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\,
      \GEN_ASYNC_RESET.halt_i_reg\ => \GEN_ASYNC_RESET.halt_i_reg_0\,
      \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 0) => \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0]\ => s_axis_s2mm_cmd_tready,
      dm_s2mm_prmry_resetn => dm_s2mm_prmry_resetn,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_awaddr(31 downto 0) => m_axi_s2mm_awaddr(31 downto 0),
      m_axi_s2mm_awburst(0) => m_axi_s2mm_awburst(0),
      m_axi_s2mm_awlen(4 downto 0) => m_axi_s2mm_awlen(4 downto 0),
      m_axi_s2mm_awready => m_axi_s2mm_awready,
      m_axi_s2mm_awsize(0) => m_axi_s2mm_awsize(0),
      m_axi_s2mm_awvalid => m_axi_s2mm_awvalid,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      m_axi_s2mm_wdata(31 downto 0) => m_axi_s2mm_wdata(31 downto 0),
      m_axi_s2mm_wlast => m_axi_s2mm_wlast,
      m_axi_s2mm_wready => m_axi_s2mm_wready,
      m_axi_s2mm_wstrb(3 downto 0) => m_axi_s2mm_wstrb(3 downto 0),
      m_axi_s2mm_wvalid => m_axi_s2mm_wvalid,
      m_axis_s2mm_sts_tready => m_axis_s2mm_sts_tready,
      p_8_out => p_8_out,
      s2mm_decerr_i => s2mm_decerr_i,
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_interr_i => s2mm_interr_i,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_slverr_i => s2mm_slverr_i,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      s_axis_s2mm_tdata(31 downto 0) => s_axis_s2mm_tdata(31 downto 0),
      s_axis_s2mm_tkeep(3 downto 0) => s_axis_s2mm_tkeep(3 downto 0),
      s_axis_s2mm_tlast => s_axis_s2mm_tlast,
      s_axis_s2mm_tready => s_axis_s2mm_tready,
      s_axis_s2mm_tvalid => s_axis_s2mm_tvalid,
      sig_s_h_halt_reg => sig_s_h_halt_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg_datamover is
  port (
    \m_axi_sg_wstrb[0]\ : out STD_LOGIC;
    m_axi_sg_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_arvalid : out STD_LOGIC;
    m_axi_sg_rready : out STD_LOGIC;
    m_axi_sg_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_awvalid : out STD_LOGIC;
    m_axi_sg_arlen : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_awaddr : out STD_LOGIC_VECTOR ( 27 downto 0 );
    s_axis_ftch_cmd_tready : out STD_LOGIC;
    s_axis_updt_cmd_tready : out STD_LOGIC;
    updt_done_reg : out STD_LOGIC;
    ftch_done_reg : out STD_LOGIC;
    ftch_decerr_i : out STD_LOGIC;
    ftch_slverr_i : out STD_LOGIC;
    sig_data2all_tlast_error : out STD_LOGIC;
    m_axi_sg_bready : out STD_LOGIC;
    m_axi_sg_wvalid : out STD_LOGIC;
    \pntr_cs_reg[1]\ : out STD_LOGIC;
    \pntr_cs_reg[1]_0\ : out STD_LOGIC;
    \pntr_cs_reg[1]_1\ : out STD_LOGIC;
    sig_push_to_wsc_reg : out STD_LOGIC;
    m_axi_sg_wlast : out STD_LOGIC;
    updt_decerr_i : out STD_LOGIC;
    updt_interr_i : out STD_LOGIC;
    updt_slverr_i : out STD_LOGIC;
    m_axi_sg_araddr : out STD_LOGIC_VECTOR ( 25 downto 0 );
    dm_m_axi_sg_aresetn : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    sig_last_mmap_dbeat : in STD_LOGIC;
    m_axi_sg_aresetn : in STD_LOGIC;
    s_axis_ftch_cmd_tvalid : in STD_LOGIC;
    p_18_out : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    m_axi_sg_rlast : in STD_LOGIC;
    p_20_out_0 : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    follower_full_mm2s : in STD_LOGIC;
    p_38_out : in STD_LOGIC;
    follower_full_s2mm : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg\ : in STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    \GEN_CH2_UPDATE.ch2_active_i_reg_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_arready : in STD_LOGIC;
    m_axi_sg_awready : in STD_LOGIC;
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \update_address_reg[31]\ : in STD_LOGIC_VECTOR ( 26 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg_datamover : entity is "axi_sg_datamover";
end axi_dma_ctrl_axi_sg_datamover;

architecture STRUCTURE of axi_dma_ctrl_axi_sg_datamover is
  signal \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER_n_43\ : STD_LOGIC;
  signal \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER_n_44\ : STD_LOGIC;
  signal \I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/sig_init_done\ : STD_LOGIC;
  signal \I_CMD_STATUS/I_CMD_FIFO/sig_init_done\ : STD_LOGIC;
  signal \^m_axi_sg_wstrb[0]\ : STD_LOGIC;
  signal sig_stream_rst : STD_LOGIC;
begin
  \m_axi_sg_wstrb[0]\ <= \^m_axi_sg_wstrb[0]\;
\GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER\: entity work.axi_dma_ctrl_axi_sg_mm2s_basic_wrap
     port map (
      D(25 downto 0) => D(25 downto 0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\ => s_axis_ftch_cmd_tready,
      dm_m_axi_sg_aresetn => dm_m_axi_sg_aresetn,
      ftch_decerr_i => ftch_decerr_i,
      ftch_done_reg => ftch_done_reg,
      ftch_slverr_i => ftch_slverr_i,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_araddr(25 downto 0) => m_axi_sg_araddr(25 downto 0),
      m_axi_sg_arburst(0) => m_axi_sg_arburst(0),
      m_axi_sg_arlen(0) => m_axi_sg_arlen(0),
      m_axi_sg_arready => m_axi_sg_arready,
      m_axi_sg_arvalid => m_axi_sg_arvalid,
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rready => m_axi_sg_rready,
      m_axi_sg_rresp(1 downto 0) => m_axi_sg_rresp(1 downto 0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      \m_axi_sg_wstrb[0]\ => \^m_axi_sg_wstrb[0]\,
      p_18_out => p_18_out,
      s_axis_ftch_cmd_tvalid => s_axis_ftch_cmd_tvalid,
      sig_init_done => \I_CMD_STATUS/I_CMD_FIFO/sig_init_done\,
      sig_init_done_0 => \I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/sig_init_done\,
      sig_init_reg_reg => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER_n_43\,
      sig_init_reg_reg_0 => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER_n_44\,
      sig_stream_rst => sig_stream_rst
    );
\GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER\: entity work.axi_dma_ctrl_axi_sg_s2mm_basic_wrap
     port map (
      \GEN_CH2_UPDATE.ch2_active_i_reg\ => \GEN_CH2_UPDATE.ch2_active_i_reg\,
      \GEN_CH2_UPDATE.ch2_active_i_reg_0\ => \GEN_CH2_UPDATE.ch2_active_i_reg_0\,
      \GEN_OMIT_INDET_BTT.sig_tlast_error_reg_reg\ => sig_data2all_tlast_error,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\(0) => \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\(0),
      Q(0) => Q(0),
      follower_full_mm2s => follower_full_mm2s,
      follower_full_s2mm => follower_full_s2mm,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_awaddr(27 downto 0) => m_axi_sg_awaddr(27 downto 0),
      m_axi_sg_awready => m_axi_sg_awready,
      m_axi_sg_awsize(0) => m_axi_sg_awsize(0),
      m_axi_sg_awvalid => m_axi_sg_awvalid,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      m_axi_sg_wlast => m_axi_sg_wlast,
      m_axi_sg_wready => m_axi_sg_wready,
      m_axi_sg_wvalid => m_axi_sg_wvalid,
      p_18_out => p_18_out,
      p_20_out_0 => p_20_out_0,
      p_38_out => p_38_out,
      \pntr_cs_reg[1]\ => \pntr_cs_reg[1]\,
      \pntr_cs_reg[1]_0\ => \pntr_cs_reg[1]_0\,
      \pntr_cs_reg[1]_1\ => \pntr_cs_reg[1]_1\,
      s_axis_updt_cmd_tready => s_axis_updt_cmd_tready,
      sig_cmd_stat_rst_user_reg_n_cdc_from_reg => \^m_axi_sg_wstrb[0]\,
      sig_init_done => \I_CMD_STATUS/I_CMD_FIFO/sig_init_done\,
      sig_init_done_0 => \I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/sig_init_done\,
      sig_init_done_reg => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER_n_43\,
      sig_init_done_reg_0 => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER_n_44\,
      sig_last_mmap_dbeat => sig_last_mmap_dbeat,
      sig_push_to_wsc_reg => sig_push_to_wsc_reg,
      sig_stream_rst => sig_stream_rst,
      \update_address_reg[31]\(26 downto 0) => \update_address_reg[31]\(26 downto 0),
      updt_decerr_i => updt_decerr_i,
      updt_done_reg => updt_done_reg,
      updt_interr_i => updt_interr_i,
      updt_slverr_i => updt_slverr_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_sg is
  port (
    \m_axi_sg_wstrb[0]\ : out STD_LOGIC;
    m_axi_sg_arburst : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_arvalid : out STD_LOGIC;
    m_axi_sg_rready : out STD_LOGIC;
    m_axi_sg_awsize : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_awvalid : out STD_LOGIC;
    \axi_dma_tstvec[4]\ : out STD_LOGIC;
    \axi_dma_tstvec[5]\ : out STD_LOGIC;
    p_45_out : out STD_LOGIC;
    p_19_out : out STD_LOGIC;
    p_8_out : out STD_LOGIC;
    m_axi_sg_arlen : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_awaddr : out STD_LOGIC_VECTOR ( 27 downto 0 );
    \GEN_CH1_FETCH.ch1_active_i_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_60_out : out STD_LOGIC;
    ch1_sg_idle : out STD_LOGIC;
    ch1_ftch_queue_empty : out STD_LOGIC;
    ch2_ftch_queue_empty : out STD_LOGIC;
    p_37_out : out STD_LOGIC;
    p_10_out : out STD_LOGIC;
    p_54_out : out STD_LOGIC;
    sts2_queue_full : out STD_LOGIC;
    sts_queue_full : out STD_LOGIC;
    ptr2_queue_full : out STD_LOGIC;
    ptr_queue_full : out STD_LOGIC;
    ch1_delay_cnt_en : out STD_LOGIC;
    p_46_out : out STD_LOGIC;
    ch2_delay_cnt_en : out STD_LOGIC;
    p_20_out : out STD_LOGIC;
    dma_interr_reg : out STD_LOGIC;
    dma_slverr_reg : out STD_LOGIC;
    dma_decerr_reg : out STD_LOGIC;
    sg_interr_reg : out STD_LOGIC;
    p_52_out : out STD_LOGIC;
    sg_slverr_reg : out STD_LOGIC;
    p_51_out : out STD_LOGIC;
    sg_decerr_reg : out STD_LOGIC;
    p_50_out : out STD_LOGIC;
    dma_interr_reg_0 : out STD_LOGIC;
    dma_slverr_reg_0 : out STD_LOGIC;
    dma_decerr_reg_0 : out STD_LOGIC;
    sg_interr_reg_0 : out STD_LOGIC;
    p_26_out : out STD_LOGIC;
    sg_slverr_reg_0 : out STD_LOGIC;
    p_25_out : out STD_LOGIC;
    sg_decerr_reg_0 : out STD_LOGIC;
    p_24_out : out STD_LOGIC;
    sg_ftch_error0 : out STD_LOGIC;
    sg_ftch_error0_0 : out STD_LOGIC;
    s2mm_error : out STD_LOGIC;
    mm2s_error : out STD_LOGIC;
    \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ : out STD_LOGIC;
    \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ : out STD_LOGIC;
    \GEN_MM2S.queue_full_new_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_bready : out STD_LOGIC;
    m_axi_sg_wvalid : out STD_LOGIC;
    m_axi_sg_wlast : out STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \ftch_error_addr_reg[29]_0\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    \ftch_error_addr_reg[29]_1\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    m_axi_sg_wdata : out STD_LOGIC_VECTOR ( 5 downto 0 );
    packet_in_progress_reg : out STD_LOGIC;
    \updt_desc_reg0_reg[31]\ : out STD_LOGIC_VECTOR ( 66 downto 0 );
    \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ : out STD_LOGIC;
    \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ : out STD_LOGIC;
    p_3_out : out STD_LOGIC;
    s2mm_halted_set0 : out STD_LOGIC;
    s2mm_halted_set_reg : out STD_LOGIC;
    s2mm_stop_i2_out : out STD_LOGIC;
    s2mm_all_idle : out STD_LOGIC;
    p_1_out : out STD_LOGIC;
    updt_data_reg : out STD_LOGIC;
    \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ : out STD_LOGIC;
    \updt_desc_reg0_reg[31]_0\ : out STD_LOGIC_VECTOR ( 66 downto 0 );
    \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ : out STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\ : out STD_LOGIC_VECTOR ( 25 downto 0 );
    m_axi_sg_araddr : out STD_LOGIC_VECTOR ( 25 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    mm2s_dmacr : in STD_LOGIC_VECTOR ( 13 downto 0 );
    m_axi_sg_aclk : in STD_LOGIC;
    s2mm_dmacr : in STD_LOGIC_VECTOR ( 15 downto 0 );
    m_axi_sg_aresetn : in STD_LOGIC;
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_rvalid : in STD_LOGIC;
    dm_m_axi_sg_aresetn : in STD_LOGIC;
    p_7_out : in STD_LOGIC;
    p_3_out_1 : in STD_LOGIC;
    S : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\ : in STD_LOGIC;
    \GEN_MM2S.queue_dout_valid_reg\ : in STD_LOGIC;
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg\ : in STD_LOGIC;
    \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ : in STD_LOGIC;
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_0\ : in STD_LOGIC;
    dma_interr_reg_1 : in STD_LOGIC;
    dma_slverr_reg_1 : in STD_LOGIC;
    dma_decerr_reg_1 : in STD_LOGIC;
    sg_interr_reg_1 : in STD_LOGIC;
    sg_slverr_reg_1 : in STD_LOGIC;
    sg_decerr_reg_1 : in STD_LOGIC;
    dma_interr_reg_2 : in STD_LOGIC;
    dma_slverr_reg_2 : in STD_LOGIC;
    dma_decerr_reg_2 : in STD_LOGIC;
    sg_interr_reg_2 : in STD_LOGIC;
    sg_slverr_reg_2 : in STD_LOGIC;
    sg_decerr_reg_2 : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_1\ : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ : in STD_LOGIC;
    mm2s_scndry_resetn : in STD_LOGIC;
    s2mm_scndry_resetn : in STD_LOGIC;
    mm2s_irqthresh_wren : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    s2mm_irqthresh_wren : in STD_LOGIC;
    \dmacr_i_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    soft_reset : in STD_LOGIC;
    packet_in_progress_reg_0 : in STD_LOGIC;
    p_16_out : in STD_LOGIC;
    mm2s_stop_i : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    m_axi_sg_rlast : in STD_LOGIC;
    m_axi_sg_bvalid : in STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    \dmacr_i_reg[26]\ : in STD_LOGIC;
    \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ : in STD_LOGIC;
    \dmacr_i_reg[28]\ : in STD_LOGIC;
    irqthresh_wren_reg : in STD_LOGIC;
    \dmacr_i_reg[26]_0\ : in STD_LOGIC;
    \dmacr_i_reg[29]\ : in STD_LOGIC;
    axi_dma_tstvec : in STD_LOGIC_VECTOR ( 0 to 0 );
    irqthresh_wren_reg_0 : in STD_LOGIC;
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_1\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    s_axis_mm2s_updtptr_tvalid : in STD_LOGIC;
    s_axis_s2mm_updtptr_tvalid : in STD_LOGIC;
    s_axis_mm2s_updtsts_tvalid : in STD_LOGIC;
    s_axis_s2mm_updtsts_tvalid : in STD_LOGIC;
    \GEN_ASYNC_RESET.scndry_resetn_reg_2\ : in STD_LOGIC;
    queue_rden_new : in STD_LOGIC;
    queue_rden2_new : in STD_LOGIC;
    dma_mm2s_error : in STD_LOGIC;
    s_axis_mm2s_cmd_tready : in STD_LOGIC;
    s_axis_mm2s_cmd_tvalid_split : in STD_LOGIC;
    \dmacr_i_reg[2]\ : in STD_LOGIC;
    \dmacr_i_reg[2]_0\ : in STD_LOGIC;
    s2mm_halt_cmplt : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    cmnds_queued_shift : in STD_LOGIC_VECTOR ( 0 to 0 );
    dma_s2mm_error : in STD_LOGIC;
    s_axis_s2mm_cmd_tready : in STD_LOGIC;
    s_axis_s2mm_cmd_tvalid_split : in STD_LOGIC;
    m_axi_sg_arready : in STD_LOGIC;
    m_axi_sg_awready : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_sg_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \dmacr_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg0_reg[31]_1\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    updt_data_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg0_reg[31]_2\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    \GEN_DESC_UPDT_QUEUE.updt_sts_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_s2mm_updtsts_tdata : in STD_LOGIC_VECTOR ( 5 downto 0 );
    updt_sts_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \updt_desc_reg2_reg[32]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_sg : entity is "axi_sg";
end axi_dma_ctrl_axi_sg;

architecture STRUCTURE of axi_dma_ctrl_axi_sg is
  signal \^gen_ch1_fetch.ch1_active_i_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_2\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_32\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_34\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_35\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_15\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_16\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_17\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_18\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_19\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_20\ : STD_LOGIC;
  signal \GEN_QUEUE.FTCH_QUEUE_I/p_2_out\ : STD_LOGIC;
  signal \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_mm2s\ : STD_LOGIC;
  signal \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_s2mm\ : STD_LOGIC;
  signal \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/sig_last_mmap_dbeat\ : STD_LOGIC;
  signal \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/sig_data2all_tlast_error\ : STD_LOGIC;
  signal \I_FTCH_CMDSTS_IF/ftch_decerr_i\ : STD_LOGIC;
  signal \I_FTCH_CMDSTS_IF/ftch_slverr_i\ : STD_LOGIC;
  signal \I_FTCH_PNTR_MNGR/ch1_use_crntdesc\ : STD_LOGIC;
  signal \I_FTCH_PNTR_MNGR/ch2_use_crntdesc\ : STD_LOGIC;
  signal \I_FTCH_PNTR_MNGR/p_1_out\ : STD_LOGIC;
  signal I_SG_AXI_DATAMOVER_n_37 : STD_LOGIC;
  signal I_SG_AXI_DATAMOVER_n_38 : STD_LOGIC;
  signal I_SG_AXI_DATAMOVER_n_44 : STD_LOGIC;
  signal I_SG_AXI_DATAMOVER_n_45 : STD_LOGIC;
  signal I_SG_AXI_DATAMOVER_n_46 : STD_LOGIC;
  signal I_SG_AXI_DATAMOVER_n_47 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_100 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_101 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_102 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_103 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_104 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_105 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_106 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_107 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_108 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_109 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_110 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_111 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_112 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_113 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_114 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_115 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_116 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_117 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_118 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_119 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_120 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_121 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_122 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_123 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_124 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_125 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_23 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_24 : STD_LOGIC;
  signal I_SG_FETCH_MNGR_n_99 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_12 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_14 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_15 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_16 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_17 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_18 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_19 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_20 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_21 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_22 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_23 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_24 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_25 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_26 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_27 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_28 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_29 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_30 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_31 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_32 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_33 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_34 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_35 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_36 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_37 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_38 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_39 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_40 : STD_LOGIC;
  signal I_SG_FETCH_QUEUE_n_9 : STD_LOGIC;
  signal \I_UPDT_CMDSTS_IF/updt_decerr_i\ : STD_LOGIC;
  signal \I_UPDT_CMDSTS_IF/updt_interr_i\ : STD_LOGIC;
  signal \I_UPDT_CMDSTS_IF/updt_slverr_i\ : STD_LOGIC;
  signal L : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal \^axi_dma_tstvec[4]\ : STD_LOGIC;
  signal \^axi_dma_tstvec[5]\ : STD_LOGIC;
  signal ch1_ftch_pause : STD_LOGIC;
  signal \^ch1_ftch_queue_empty\ : STD_LOGIC;
  signal ch1_nxtdesc_wren : STD_LOGIC;
  signal ch2_ftch_active : STD_LOGIC;
  signal ch2_ftch_pause : STD_LOGIC;
  signal \^ch2_ftch_queue_empty\ : STD_LOGIC;
  signal ch2_nxtdesc_wren : STD_LOGIC;
  signal ftch_cmnd_data : STD_LOGIC_VECTOR ( 63 downto 38 );
  signal ftch_cmnd_wr : STD_LOGIC;
  signal ftch_stale_desc : STD_LOGIC;
  signal p_0_in8_in : STD_LOGIC;
  signal p_10_out_1 : STD_LOGIC;
  signal p_11_out : STD_LOGIC;
  signal p_12_out : STD_LOGIC;
  signal p_15_out : STD_LOGIC;
  signal p_16_out_5 : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal p_18_out : STD_LOGIC;
  signal \^p_19_out\ : STD_LOGIC;
  signal p_19_out_4 : STD_LOGIC_VECTOR ( 63 downto 36 );
  signal p_20_out_0 : STD_LOGIC;
  signal p_21_out : STD_LOGIC;
  signal p_22_out : STD_LOGIC;
  signal p_23_out : STD_LOGIC;
  signal p_28_out : STD_LOGIC;
  signal p_2_in : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal p_31_out : STD_LOGIC;
  signal p_32_out : STD_LOGIC;
  signal p_33_out : STD_LOGIC;
  signal p_38_out : STD_LOGIC;
  signal \^p_45_out\ : STD_LOGIC;
  signal p_47_out : STD_LOGIC;
  signal p_48_out : STD_LOGIC;
  signal p_49_out : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal p_57_out : STD_LOGIC;
  signal p_58_out : STD_LOGIC;
  signal p_59_out : STD_LOGIC;
  signal p_5_out : STD_LOGIC;
  signal p_5_out_3 : STD_LOGIC;
  signal p_6_out : STD_LOGIC;
  signal p_7_out_2 : STD_LOGIC;
  signal \p_7_out__0\ : STD_LOGIC;
  signal p_9_out : STD_LOGIC;
  signal \^ptr2_queue_full\ : STD_LOGIC;
  signal \^ptr_queue_full\ : STD_LOGIC;
  signal s_axis_ftch_cmd_tready : STD_LOGIC;
  signal s_axis_ftch_cmd_tvalid : STD_LOGIC;
  signal s_axis_updt_cmd_tready : STD_LOGIC;
begin
  \GEN_CH1_FETCH.ch1_active_i_reg\(0) <= \^gen_ch1_fetch.ch1_active_i_reg\(0);
  \axi_dma_tstvec[4]\ <= \^axi_dma_tstvec[4]\;
  \axi_dma_tstvec[5]\ <= \^axi_dma_tstvec[5]\;
  ch1_ftch_queue_empty <= \^ch1_ftch_queue_empty\;
  ch2_ftch_queue_empty <= \^ch2_ftch_queue_empty\;
  p_19_out <= \^p_19_out\;
  p_45_out <= \^p_45_out\;
  ptr2_queue_full <= \^ptr2_queue_full\;
  ptr_queue_full <= \^ptr_queue_full\;
\GEN_DESC_UPDATE.I_SG_UPDATE_MNGR\: entity work.axi_dma_ctrl_axi_sg_updt_mngr
     port map (
      E(0) => p_15_out,
      \GEN_CH1_FETCH.ch1_ftch_slverr_set_reg\ => I_SG_FETCH_MNGR_n_125,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ => \^p_45_out\,
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_34\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ => \^p_19_out\,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_35\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_empty_reg\ => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_18\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_empty_reg\ => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_20\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.updt_active_d2_reg\ => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_2\,
      Q(0) => Q(0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5]\ => I_SG_AXI_DATAMOVER_n_37,
      \axi_dma_tstvec[4]\ => \^axi_dma_tstvec[4]\,
      \axi_dma_tstvec[5]\ => \^axi_dma_tstvec[5]\,
      dma_decerr_reg => dma_decerr_reg,
      dma_decerr_reg_0 => dma_decerr_reg_0,
      dma_decerr_reg_1 => dma_decerr_reg_1,
      dma_decerr_reg_2 => dma_decerr_reg_2,
      dma_interr_reg => dma_interr_reg,
      dma_interr_reg_0 => dma_interr_reg_0,
      dma_interr_reg_1 => dma_interr_reg_1,
      dma_interr_reg_2 => dma_interr_reg_2,
      dma_slverr_reg => dma_slverr_reg,
      dma_slverr_reg_0 => dma_slverr_reg_0,
      dma_slverr_reg_1 => dma_slverr_reg_1,
      dma_slverr_reg_2 => dma_slverr_reg_2,
      \dmacr_i_reg[13]\(0) => \dmacr_i_reg[13]\(0),
      follower_full_mm2s => \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_mm2s\,
      follower_full_s2mm => \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_s2mm\,
      \ftch_error_addr_reg[31]\(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      \ftch_error_addr_reg[31]_0\(25 downto 0) => p_16_out_5(31 downto 6),
      ftch_error_reg => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_19\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_wready => m_axi_sg_wready,
      mm2s_irqthresh_wren => mm2s_irqthresh_wren,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_10_out_1 => p_10_out_1,
      p_11_out => p_11_out,
      p_12_out => p_12_out,
      p_20_out_0 => p_20_out_0,
      p_21_out => p_21_out,
      p_22_out => p_22_out,
      p_23_out => p_23_out,
      p_28_out => p_28_out,
      p_31_out => p_31_out,
      p_32_out => p_32_out,
      p_33_out => p_33_out,
      p_38_out => p_38_out,
      p_47_out => p_47_out,
      p_48_out => p_48_out,
      p_49_out => p_49_out,
      p_4_out => p_4_out,
      p_54_out => p_54_out,
      p_57_out => p_57_out,
      p_58_out => p_58_out,
      p_59_out => p_59_out,
      p_5_out => p_5_out,
      p_5_out_3 => p_5_out_3,
      p_6_out => p_6_out,
      p_7_out_2 => p_7_out_2,
      \p_7_out__0\ => \p_7_out__0\,
      p_9_out => p_9_out,
      s2mm_irqthresh_wren => s2mm_irqthresh_wren,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_updt_cmd_tready => s_axis_updt_cmd_tready,
      sg_decerr_reg => sg_decerr_reg,
      sg_decerr_reg_0 => p_50_out,
      sg_decerr_reg_1 => sg_decerr_reg_0,
      sg_decerr_reg_2 => p_24_out,
      sg_decerr_reg_3 => sg_decerr_reg_1,
      sg_decerr_reg_4 => sg_decerr_reg_2,
      sg_interr_reg => sg_interr_reg,
      sg_interr_reg_0 => p_52_out,
      sg_interr_reg_1 => sg_interr_reg_0,
      sg_interr_reg_2 => p_26_out,
      sg_interr_reg_3 => sg_interr_reg_1,
      sg_interr_reg_4 => sg_interr_reg_2,
      sg_slverr_reg => sg_slverr_reg,
      sg_slverr_reg_0 => p_51_out,
      sg_slverr_reg_1 => sg_slverr_reg_0,
      sg_slverr_reg_2 => p_25_out,
      sg_slverr_reg_3 => sg_slverr_reg_1,
      sg_slverr_reg_4 => sg_slverr_reg_2,
      sig_data2all_tlast_error => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/sig_data2all_tlast_error\,
      \sig_dbeat_cntr_reg[7]\ => I_SG_AXI_DATAMOVER_n_47,
      sig_dqual_reg_full_reg => I_SG_AXI_DATAMOVER_n_44,
      sig_last_mmap_dbeat => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/sig_last_mmap_dbeat\,
      sig_last_mmap_dbeat_reg_reg => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_32\,
      \updt_curdesc_reg[31]\(25 downto 0) => L(31 downto 6),
      updt_decerr_i => \I_UPDT_CMDSTS_IF/updt_decerr_i\,
      \updt_error_addr_reg[31]\(26 downto 1) => p_19_out_4(63 downto 38),
      \updt_error_addr_reg[31]\(0) => p_19_out_4(36),
      updt_error_reg => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_17\,
      updt_interr_i => \I_UPDT_CMDSTS_IF/updt_interr_i\,
      updt_slverr_i => \I_UPDT_CMDSTS_IF/updt_slverr_i\
    );
\GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE\: entity work.axi_dma_ctrl_axi_sg_updt_q_mngr
     port map (
      E(0) => p_15_out,
      \GEN_CH1_UPDATE.ch1_active_i_reg\ => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_17\,
      \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\ => \^axi_dma_tstvec[4]\,
      \GEN_CH2_UPDATE.ch2_active_i_reg\ => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_19\,
      \GEN_CH2_UPDATE.ch2_active_i_reg_0\ => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_2\,
      \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\ => \^axi_dma_tstvec[5]\,
      \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0) => \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0),
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_full_mm2s_reg\ => I_SG_AXI_DATAMOVER_n_45,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_full_reg\ => \^ptr_queue_full\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.follower_full_s2mm_reg\ => I_SG_AXI_DATAMOVER_n_46,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_full_reg\ => \^ptr2_queue_full\,
      \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\(0) => E(0),
      Q(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_15\,
      SR(0) => SR(0),
      follower_full_mm2s => \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_mm2s\,
      follower_full_s2mm => \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_s2mm\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_wdata(5 downto 0) => m_axi_sg_wdata(5 downto 0),
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_10_out_1 => p_10_out_1,
      p_11_out => p_11_out,
      p_12_out => p_12_out,
      p_21_out => p_21_out,
      p_22_out => p_22_out,
      p_23_out => p_23_out,
      p_38_out => p_38_out,
      p_47_out => p_47_out,
      p_48_out => p_48_out,
      p_49_out => p_49_out,
      p_4_out => p_4_out,
      p_5_out => p_5_out,
      p_5_out_3 => p_5_out_3,
      p_6_out => p_6_out,
      p_7_out_2 => p_7_out_2,
      \p_7_out__0\ => \p_7_out__0\,
      p_9_out => p_9_out,
      \pntr_cs_reg[1]\(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_16\,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      s_axis_mm2s_updtsts_tvalid => s_axis_mm2s_updtsts_tvalid,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      s_axis_s2mm_updtsts_tdata(5 downto 0) => s_axis_s2mm_updtsts_tdata(5 downto 0),
      s_axis_s2mm_updtsts_tvalid => s_axis_s2mm_updtsts_tvalid,
      sts2_queue_full => sts2_queue_full,
      sts_queue_full => sts_queue_full,
      \update_address_reg[31]\(25 downto 0) => L(31 downto 6),
      \updt_cs_reg[0]\ => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_18\,
      \updt_cs_reg[0]_0\ => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_20\,
      updt_data_reg(0) => updt_data_reg_0(0),
      \updt_desc_reg0_reg[31]\(25 downto 0) => \updt_desc_reg0_reg[31]_1\(25 downto 0),
      \updt_desc_reg0_reg[31]_0\(25 downto 0) => \updt_desc_reg0_reg[31]_2\(25 downto 0),
      \updt_desc_reg2_reg[32]\(4 downto 0) => \updt_desc_reg2_reg[32]\(4 downto 0),
      updt_sts_reg(0) => updt_sts_reg(0)
    );
\GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT\: entity work.axi_dma_ctrl_axi_sg_intrpt
     port map (
      E(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_34\,
      \GEN_CH1_UPDATE.ch1_updt_ioc_irq_set_reg\ => \^axi_dma_tstvec[4]\,
      \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg\ => \^axi_dma_tstvec[5]\,
      \GEN_CH2_UPDATE.ch2_updt_ioc_irq_set_reg_0\(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_35\,
      \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ => \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg_0\ => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\(7 downto 0) => \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(7 downto 0),
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[0]_0\ => \^p_45_out\,
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]_0\(7 downto 0) => \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg_0\ => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\(7 downto 0) => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\(0) => \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\(0),
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[0]_0\ => \^p_19_out\,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]_0\(7 downto 0) => \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(7 downto 0),
      Q(0) => Q(0),
      SR(0) => SR(0),
      axi_dma_tstvec(0) => axi_dma_tstvec(0),
      ch1_delay_cnt_en => ch1_delay_cnt_en,
      ch2_delay_cnt_en => ch2_delay_cnt_en,
      \dmacr_i_reg[13]\(0) => \dmacr_i_reg[13]\(0),
      \dmacr_i_reg[26]\ => \dmacr_i_reg[26]\,
      \dmacr_i_reg[26]_0\ => \dmacr_i_reg[26]_0\,
      \dmacr_i_reg[28]\ => \dmacr_i_reg[28]\,
      \dmacr_i_reg[29]\ => \dmacr_i_reg[29]\,
      irqthresh_wren_reg => irqthresh_wren_reg,
      irqthresh_wren_reg_0 => irqthresh_wren_reg_0,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      mm2s_dmacr(12 downto 0) => mm2s_dmacr(13 downto 1),
      mm2s_irqthresh_wren => mm2s_irqthresh_wren,
      p_20_out => p_20_out,
      p_3_out_1 => p_3_out_1,
      p_46_out => p_46_out,
      p_7_out => p_7_out,
      p_8_out => p_8_out,
      s2mm_dmacr(14 downto 0) => s2mm_dmacr(15 downto 1),
      s2mm_irqthresh_wren => s2mm_irqthresh_wren
    );
I_SG_AXI_DATAMOVER: entity work.axi_dma_ctrl_axi_sg_datamover
     port map (
      D(25 downto 0) => ftch_cmnd_data(63 downto 38),
      \GEN_CH2_UPDATE.ch2_active_i_reg\ => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_2\,
      \GEN_CH2_UPDATE.ch2_active_i_reg_0\ => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_32\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.follower_reg_mm2s_reg[31]\(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_16\,
      Q(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE_n_15\,
      dm_m_axi_sg_aresetn => dm_m_axi_sg_aresetn,
      follower_full_mm2s => \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_mm2s\,
      follower_full_s2mm => \GEN_QUEUE.I_UPDT_DESC_QUEUE/follower_full_s2mm\,
      ftch_decerr_i => \I_FTCH_CMDSTS_IF/ftch_decerr_i\,
      ftch_done_reg => I_SG_AXI_DATAMOVER_n_38,
      ftch_slverr_i => \I_FTCH_CMDSTS_IF/ftch_slverr_i\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_araddr(25 downto 0) => m_axi_sg_araddr(25 downto 0),
      m_axi_sg_arburst(0) => m_axi_sg_arburst(0),
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_arlen(0) => m_axi_sg_arlen(0),
      m_axi_sg_arready => m_axi_sg_arready,
      m_axi_sg_arvalid => m_axi_sg_arvalid,
      m_axi_sg_awaddr(27 downto 0) => m_axi_sg_awaddr(27 downto 0),
      m_axi_sg_awready => m_axi_sg_awready,
      m_axi_sg_awsize(0) => m_axi_sg_awsize(0),
      m_axi_sg_awvalid => m_axi_sg_awvalid,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rready => m_axi_sg_rready,
      m_axi_sg_rresp(1 downto 0) => m_axi_sg_rresp(1 downto 0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      m_axi_sg_wlast => m_axi_sg_wlast,
      m_axi_sg_wready => m_axi_sg_wready,
      \m_axi_sg_wstrb[0]\ => \m_axi_sg_wstrb[0]\,
      m_axi_sg_wvalid => m_axi_sg_wvalid,
      p_18_out => p_18_out,
      p_20_out_0 => p_20_out_0,
      p_38_out => p_38_out,
      \pntr_cs_reg[1]\ => I_SG_AXI_DATAMOVER_n_44,
      \pntr_cs_reg[1]_0\ => I_SG_AXI_DATAMOVER_n_45,
      \pntr_cs_reg[1]_1\ => I_SG_AXI_DATAMOVER_n_46,
      s_axis_ftch_cmd_tready => s_axis_ftch_cmd_tready,
      s_axis_ftch_cmd_tvalid => s_axis_ftch_cmd_tvalid,
      s_axis_updt_cmd_tready => s_axis_updt_cmd_tready,
      sig_data2all_tlast_error => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/sig_data2all_tlast_error\,
      sig_last_mmap_dbeat => \GEN_S2MM_BASIC.I_S2MM_BASIC_WRAPPER/I_WR_DATA_CNTL/sig_last_mmap_dbeat\,
      sig_push_to_wsc_reg => I_SG_AXI_DATAMOVER_n_47,
      \update_address_reg[31]\(26 downto 1) => p_19_out_4(63 downto 38),
      \update_address_reg[31]\(0) => p_19_out_4(36),
      updt_decerr_i => \I_UPDT_CMDSTS_IF/updt_decerr_i\,
      updt_done_reg => I_SG_AXI_DATAMOVER_n_37,
      updt_interr_i => \I_UPDT_CMDSTS_IF/updt_interr_i\,
      updt_slverr_i => \I_UPDT_CMDSTS_IF/updt_slverr_i\
    );
I_SG_FETCH_MNGR: entity work.axi_dma_ctrl_axi_sg_ftch_mngr
     port map (
      CO(0) => \I_FTCH_PNTR_MNGR/p_1_out\,
      \CURRENT_BD_32.current_bd_reg[6]\(0) => \GEN_QUEUE.FTCH_QUEUE_I/p_2_out\,
      D(25 downto 0) => ftch_cmnd_data(63 downto 38),
      E(0) => ftch_cmnd_wr,
      \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ => \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\,
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg_1\,
      \GEN_CH1_FETCH.ch1_active_i_reg\ => \^gen_ch1_fetch.ch1_active_i_reg\(0),
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\,
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\ => \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25) => I_SG_FETCH_QUEUE_n_15,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(24) => I_SG_FETCH_QUEUE_n_16,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(23) => I_SG_FETCH_QUEUE_n_17,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(22) => I_SG_FETCH_QUEUE_n_18,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(21) => I_SG_FETCH_QUEUE_n_19,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(20) => I_SG_FETCH_QUEUE_n_20,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(19) => I_SG_FETCH_QUEUE_n_21,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(18) => I_SG_FETCH_QUEUE_n_22,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(17) => I_SG_FETCH_QUEUE_n_23,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(16) => I_SG_FETCH_QUEUE_n_24,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(15) => I_SG_FETCH_QUEUE_n_25,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(14) => I_SG_FETCH_QUEUE_n_26,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(13) => I_SG_FETCH_QUEUE_n_27,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(12) => I_SG_FETCH_QUEUE_n_28,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(11) => I_SG_FETCH_QUEUE_n_29,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(10) => I_SG_FETCH_QUEUE_n_30,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(9) => I_SG_FETCH_QUEUE_n_31,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(8) => I_SG_FETCH_QUEUE_n_32,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(7) => I_SG_FETCH_QUEUE_n_33,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(6) => I_SG_FETCH_QUEUE_n_34,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(5) => I_SG_FETCH_QUEUE_n_35,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(4) => I_SG_FETCH_QUEUE_n_36,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(3) => I_SG_FETCH_QUEUE_n_37,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(2) => I_SG_FETCH_QUEUE_n_38,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(1) => I_SG_FETCH_QUEUE_n_39,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(0) => I_SG_FETCH_QUEUE_n_40,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25 downto 0) => p_2_in(31 downto 6),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(3 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(3 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(3 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(3 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1 downto 0),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(1 downto 0) => \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(1 downto 0),
      \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ => I_SG_FETCH_MNGR_n_24,
      \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg_0\(0) => I_SG_FETCH_QUEUE_n_12,
      \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg\ => I_SG_FETCH_MNGR_n_23,
      \GEN_NO_UPR_MSB_NXTDESC.ch2_nxtdesc_wren_reg_0\(0) => I_SG_FETCH_QUEUE_n_14,
      \GEN_S2MM.queue_empty2_new_reg\ => \^ch2_ftch_queue_empty\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => I_SG_FETCH_QUEUE_n_9,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ => s2mm_error,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_0\ => mm2s_error,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg_1\ => s2mm_stop_i2_out,
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ => \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\,
      Q(0) => p_0_in8_in,
      S(1 downto 0) => S(1 downto 0),
      SR(0) => SR(0),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7]\ => I_SG_AXI_DATAMOVER_n_38,
      ch1_ftch_pause => ch1_ftch_pause,
      ch1_ftch_queue_empty => \^ch1_ftch_queue_empty\,
      ch1_nxtdesc_wren => ch1_nxtdesc_wren,
      ch1_sg_idle => ch1_sg_idle,
      ch1_use_crntdesc => \I_FTCH_PNTR_MNGR/ch1_use_crntdesc\,
      ch2_ftch_active => ch2_ftch_active,
      ch2_ftch_pause => ch2_ftch_pause,
      ch2_nxtdesc_wren => ch2_nxtdesc_wren,
      ch2_use_crntdesc => \I_FTCH_PNTR_MNGR/ch2_use_crntdesc\,
      cmnds_queued_shift(0) => cmnds_queued_shift(0),
      dma_mm2s_error => dma_mm2s_error,
      dma_s2mm_error => dma_s2mm_error,
      \dmacr_i_reg[2]\ => \dmacr_i_reg[2]\,
      \dmacr_i_reg[2]_0\ => \dmacr_i_reg[2]_0\,
      ftch_decerr_i => \I_FTCH_CMDSTS_IF/ftch_decerr_i\,
      \ftch_error_addr_reg[29]\(23 downto 0) => \ftch_error_addr_reg[29]_0\(23 downto 0),
      \ftch_error_addr_reg[29]_0\(23 downto 0) => \ftch_error_addr_reg[29]_1\(23 downto 0),
      \ftch_error_addr_reg[31]\(25) => I_SG_FETCH_MNGR_n_99,
      \ftch_error_addr_reg[31]\(24) => I_SG_FETCH_MNGR_n_100,
      \ftch_error_addr_reg[31]\(23) => I_SG_FETCH_MNGR_n_101,
      \ftch_error_addr_reg[31]\(22) => I_SG_FETCH_MNGR_n_102,
      \ftch_error_addr_reg[31]\(21) => I_SG_FETCH_MNGR_n_103,
      \ftch_error_addr_reg[31]\(20) => I_SG_FETCH_MNGR_n_104,
      \ftch_error_addr_reg[31]\(19) => I_SG_FETCH_MNGR_n_105,
      \ftch_error_addr_reg[31]\(18) => I_SG_FETCH_MNGR_n_106,
      \ftch_error_addr_reg[31]\(17) => I_SG_FETCH_MNGR_n_107,
      \ftch_error_addr_reg[31]\(16) => I_SG_FETCH_MNGR_n_108,
      \ftch_error_addr_reg[31]\(15) => I_SG_FETCH_MNGR_n_109,
      \ftch_error_addr_reg[31]\(14) => I_SG_FETCH_MNGR_n_110,
      \ftch_error_addr_reg[31]\(13) => I_SG_FETCH_MNGR_n_111,
      \ftch_error_addr_reg[31]\(12) => I_SG_FETCH_MNGR_n_112,
      \ftch_error_addr_reg[31]\(11) => I_SG_FETCH_MNGR_n_113,
      \ftch_error_addr_reg[31]\(10) => I_SG_FETCH_MNGR_n_114,
      \ftch_error_addr_reg[31]\(9) => I_SG_FETCH_MNGR_n_115,
      \ftch_error_addr_reg[31]\(8) => I_SG_FETCH_MNGR_n_116,
      \ftch_error_addr_reg[31]\(7) => I_SG_FETCH_MNGR_n_117,
      \ftch_error_addr_reg[31]\(6) => I_SG_FETCH_MNGR_n_118,
      \ftch_error_addr_reg[31]\(5) => I_SG_FETCH_MNGR_n_119,
      \ftch_error_addr_reg[31]\(4) => I_SG_FETCH_MNGR_n_120,
      \ftch_error_addr_reg[31]\(3) => I_SG_FETCH_MNGR_n_121,
      \ftch_error_addr_reg[31]\(2) => I_SG_FETCH_MNGR_n_122,
      \ftch_error_addr_reg[31]\(1) => I_SG_FETCH_MNGR_n_123,
      \ftch_error_addr_reg[31]\(0) => I_SG_FETCH_MNGR_n_124,
      \ftch_error_addr_reg[31]_0\ => I_SG_FETCH_MNGR_n_125,
      ftch_slverr_i => \I_FTCH_CMDSTS_IF/ftch_slverr_i\,
      ftch_stale_desc => ftch_stale_desc,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_rresp(0) => m_axi_sg_rresp(1),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_stop_i => mm2s_stop_i,
      \out\(1 downto 0) => \out\(1 downto 0),
      p_0_in => p_0_in,
      p_16_out => p_16_out,
      p_18_out => p_18_out,
      p_1_out => p_1_out,
      p_28_out => p_28_out,
      p_31_out => p_31_out,
      p_32_out => p_32_out,
      p_33_out => p_33_out,
      p_3_out => p_3_out,
      p_57_out => p_57_out,
      p_58_out => p_58_out,
      p_59_out => p_59_out,
      p_5_out => p_5_out,
      p_60_out => p_60_out,
      \p_7_out__0\ => \p_7_out__0\,
      packet_in_progress_reg => packet_in_progress_reg_0,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_halted_set0 => s2mm_halted_set0,
      s2mm_halted_set_reg => s2mm_halted_set_reg,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_ftch_cmd_tready => s_axis_ftch_cmd_tready,
      s_axis_ftch_cmd_tvalid => s_axis_ftch_cmd_tvalid,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      sg_ftch_error0 => sg_ftch_error0,
      sg_ftch_error0_0 => sg_ftch_error0_0,
      soft_reset => soft_reset,
      \updt_error_addr_reg[31]\(25 downto 0) => p_16_out_5(31 downto 6)
    );
I_SG_FETCH_QUEUE: entity work.axi_dma_ctrl_axi_sg_ftch_q_mngr
     port map (
      CO(0) => \I_FTCH_PNTR_MNGR/p_1_out\,
      D(25 downto 0) => ftch_cmnd_data(63 downto 38),
      E(0) => ftch_cmnd_wr,
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => \GEN_ASYNC_RESET.scndry_resetn_reg\,
      \GEN_ASYNC_RESET.scndry_resetn_reg_0\ => \GEN_ASYNC_RESET.scndry_resetn_reg_0\,
      \GEN_ASYNC_RESET.scndry_resetn_reg_1\ => \GEN_ASYNC_RESET.scndry_resetn_reg_2\,
      \GEN_CH1_FETCH.ch1_active_i_reg\ => I_SG_FETCH_MNGR_n_24,
      \GEN_CH1_FETCH.ch1_active_i_reg_0\(0) => \^gen_ch1_fetch.ch1_active_i_reg\(0),
      \GEN_CH2_FETCH.ch2_active_i_reg\ => I_SG_FETCH_MNGR_n_23,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25 downto 0) => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25 downto 0),
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25 downto 0) => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_1\(25 downto 0),
      \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ => \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\,
      \GEN_MM2S.queue_dout_valid_reg\ => \GEN_MM2S.queue_dout_valid_reg\,
      \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ => \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\,
      \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(25 downto 0) => p_2_in(31 downto 6),
      \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[6]\(0) => I_SG_FETCH_QUEUE_n_12,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ => \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(25) => I_SG_FETCH_QUEUE_n_15,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(24) => I_SG_FETCH_QUEUE_n_16,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(23) => I_SG_FETCH_QUEUE_n_17,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(22) => I_SG_FETCH_QUEUE_n_18,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(21) => I_SG_FETCH_QUEUE_n_19,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(20) => I_SG_FETCH_QUEUE_n_20,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(19) => I_SG_FETCH_QUEUE_n_21,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(18) => I_SG_FETCH_QUEUE_n_22,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(17) => I_SG_FETCH_QUEUE_n_23,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(16) => I_SG_FETCH_QUEUE_n_24,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(15) => I_SG_FETCH_QUEUE_n_25,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(14) => I_SG_FETCH_QUEUE_n_26,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(13) => I_SG_FETCH_QUEUE_n_27,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(12) => I_SG_FETCH_QUEUE_n_28,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(11) => I_SG_FETCH_QUEUE_n_29,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(10) => I_SG_FETCH_QUEUE_n_30,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(9) => I_SG_FETCH_QUEUE_n_31,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(8) => I_SG_FETCH_QUEUE_n_32,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(7) => I_SG_FETCH_QUEUE_n_33,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(6) => I_SG_FETCH_QUEUE_n_34,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(5) => I_SG_FETCH_QUEUE_n_35,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(4) => I_SG_FETCH_QUEUE_n_36,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(3) => I_SG_FETCH_QUEUE_n_37,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(2) => I_SG_FETCH_QUEUE_n_38,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(1) => I_SG_FETCH_QUEUE_n_39,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[31]\(0) => I_SG_FETCH_QUEUE_n_40,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[6]\(0) => I_SG_FETCH_QUEUE_n_14,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0) => \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0),
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg_0\ => I_SG_FETCH_QUEUE_n_9,
      \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ => \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\,
      Q(1) => \GEN_MM2S.queue_full_new_reg\(0),
      Q(0) => p_0_in8_in,
      SR(0) => SR(0),
      ch1_ftch_pause => ch1_ftch_pause,
      ch1_ftch_queue_empty => \^ch1_ftch_queue_empty\,
      ch1_nxtdesc_wren => ch1_nxtdesc_wren,
      ch1_use_crntdesc => \I_FTCH_PNTR_MNGR/ch1_use_crntdesc\,
      ch2_ftch_active => ch2_ftch_active,
      ch2_ftch_pause => ch2_ftch_pause,
      ch2_ftch_queue_empty => \^ch2_ftch_queue_empty\,
      ch2_nxtdesc_wren => ch2_nxtdesc_wren,
      ch2_use_crntdesc => \I_FTCH_PNTR_MNGR/ch2_use_crntdesc\,
      \dmacr_i_reg[0]\(0) => \dmacr_i_reg[0]\(0),
      \dmacr_i_reg[4]\(0) => D(0),
      \ftch_cs_reg[1]\(0) => \GEN_QUEUE.FTCH_QUEUE_I/p_2_out\,
      ftch_stale_desc => ftch_stale_desc,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_rdata(31 downto 0) => m_axi_sg_rdata(31 downto 0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      p_0_in => p_0_in,
      p_10_out => p_10_out,
      p_16_out => p_16_out,
      packet_in_progress_reg => packet_in_progress_reg,
      ptr2_queue_full => \^ptr2_queue_full\,
      ptr_queue_full => \^ptr_queue_full\,
      queue_rden2_new => queue_rden2_new,
      queue_rden_new => queue_rden_new,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      s_axis_s2mm_cmd_tready => s_axis_s2mm_cmd_tready,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      updt_data_reg => updt_data_reg,
      \updt_desc_reg0_reg[31]\(66 downto 0) => \updt_desc_reg0_reg[31]\(66 downto 0),
      \updt_desc_reg0_reg[31]_0\(66 downto 0) => \updt_desc_reg0_reg[31]_0\(66 downto 0),
      \updt_desc_reg0_reg[6]\ => p_37_out
    );
\ftch_error_addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_120,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(4),
      R => SR(0)
    );
\ftch_error_addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_119,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(5),
      R => SR(0)
    );
\ftch_error_addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_118,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(6),
      R => SR(0)
    );
\ftch_error_addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_117,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(7),
      R => SR(0)
    );
\ftch_error_addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_116,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(8),
      R => SR(0)
    );
\ftch_error_addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_115,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(9),
      R => SR(0)
    );
\ftch_error_addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_114,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(10),
      R => SR(0)
    );
\ftch_error_addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_113,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(11),
      R => SR(0)
    );
\ftch_error_addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_112,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(12),
      R => SR(0)
    );
\ftch_error_addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_111,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(13),
      R => SR(0)
    );
\ftch_error_addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_110,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(14),
      R => SR(0)
    );
\ftch_error_addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_109,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(15),
      R => SR(0)
    );
\ftch_error_addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_108,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(16),
      R => SR(0)
    );
\ftch_error_addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_107,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(17),
      R => SR(0)
    );
\ftch_error_addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_106,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(18),
      R => SR(0)
    );
\ftch_error_addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_105,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(19),
      R => SR(0)
    );
\ftch_error_addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_104,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(20),
      R => SR(0)
    );
\ftch_error_addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_103,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(21),
      R => SR(0)
    );
\ftch_error_addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_102,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(22),
      R => SR(0)
    );
\ftch_error_addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_101,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(23),
      R => SR(0)
    );
\ftch_error_addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_100,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(24),
      R => SR(0)
    );
\ftch_error_addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_99,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25),
      R => SR(0)
    );
\ftch_error_addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_124,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(0),
      R => SR(0)
    );
\ftch_error_addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_123,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(1),
      R => SR(0)
    );
\ftch_error_addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_122,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(2),
      R => SR(0)
    );
\ftch_error_addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => m_axi_sg_aclk,
      CE => \GEN_DESC_UPDATE.I_SG_UPDATE_MNGR_n_36\,
      D => I_SG_FETCH_MNGR_n_121,
      Q => \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl_axi_dma is
  port (
    s_axi_lite_aclk : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    axi_resetn : in STD_LOGIC;
    s_axi_lite_awvalid : in STD_LOGIC;
    s_axi_lite_awready : out STD_LOGIC;
    s_axi_lite_awaddr : in STD_LOGIC_VECTOR ( 9 downto 0 );
    s_axi_lite_wvalid : in STD_LOGIC;
    s_axi_lite_wready : out STD_LOGIC;
    s_axi_lite_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_lite_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_lite_bvalid : out STD_LOGIC;
    s_axi_lite_bready : in STD_LOGIC;
    s_axi_lite_arvalid : in STD_LOGIC;
    s_axi_lite_arready : out STD_LOGIC;
    s_axi_lite_araddr : in STD_LOGIC_VECTOR ( 9 downto 0 );
    s_axi_lite_rvalid : out STD_LOGIC;
    s_axi_lite_rready : in STD_LOGIC;
    s_axi_lite_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_lite_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_sg_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_awuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_awvalid : out STD_LOGIC;
    m_axi_sg_awready : in STD_LOGIC;
    m_axi_sg_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_wlast : out STD_LOGIC;
    m_axi_sg_wvalid : out STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_bvalid : in STD_LOGIC;
    m_axi_sg_bready : out STD_LOGIC;
    m_axi_sg_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_sg_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_aruser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_arvalid : out STD_LOGIC;
    m_axi_sg_arready : in STD_LOGIC;
    m_axi_sg_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_rlast : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    m_axi_sg_rready : out STD_LOGIC;
    m_axi_mm2s_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_mm2s_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_mm2s_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_mm2s_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_mm2s_aruser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_mm2s_arvalid : out STD_LOGIC;
    m_axi_mm2s_arready : in STD_LOGIC;
    m_axi_mm2s_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_rlast : in STD_LOGIC;
    m_axi_mm2s_rvalid : in STD_LOGIC;
    m_axi_mm2s_rready : out STD_LOGIC;
    mm2s_prmry_reset_out_n : out STD_LOGIC;
    m_axis_mm2s_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axis_mm2s_tkeep : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axis_mm2s_tvalid : out STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axis_mm2s_tlast : out STD_LOGIC;
    m_axis_mm2s_tuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axis_mm2s_tid : out STD_LOGIC_VECTOR ( 4 downto 0 );
    m_axis_mm2s_tdest : out STD_LOGIC_VECTOR ( 4 downto 0 );
    mm2s_cntrl_reset_out_n : out STD_LOGIC;
    m_axis_mm2s_cntrl_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axis_mm2s_cntrl_tkeep : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axis_mm2s_cntrl_tvalid : out STD_LOGIC;
    m_axis_mm2s_cntrl_tready : in STD_LOGIC;
    m_axis_mm2s_cntrl_tlast : out STD_LOGIC;
    m_axi_s2mm_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_s2mm_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_s2mm_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_s2mm_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_s2mm_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_awuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_awvalid : out STD_LOGIC;
    m_axi_s2mm_awready : in STD_LOGIC;
    m_axi_s2mm_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_wlast : out STD_LOGIC;
    m_axi_s2mm_wvalid : out STD_LOGIC;
    m_axi_s2mm_wready : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_s2mm_bvalid : in STD_LOGIC;
    m_axi_s2mm_bready : out STD_LOGIC;
    s2mm_prmry_reset_out_n : out STD_LOGIC;
    s_axis_s2mm_tdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axis_s2mm_tkeep : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axis_s2mm_tvalid : in STD_LOGIC;
    s_axis_s2mm_tready : out STD_LOGIC;
    s_axis_s2mm_tlast : in STD_LOGIC;
    s_axis_s2mm_tuser : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axis_s2mm_tid : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axis_s2mm_tdest : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s2mm_sts_reset_out_n : out STD_LOGIC;
    s_axis_s2mm_sts_tdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axis_s2mm_sts_tkeep : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axis_s2mm_sts_tvalid : in STD_LOGIC;
    s_axis_s2mm_sts_tready : out STD_LOGIC;
    s_axis_s2mm_sts_tlast : in STD_LOGIC;
    mm2s_introut : out STD_LOGIC;
    s2mm_introut : out STD_LOGIC;
    axi_dma_tstvec : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute C_DLYTMR_RESOLUTION : integer;
  attribute C_DLYTMR_RESOLUTION of axi_dma_ctrl_axi_dma : entity is 125;
  attribute C_ENABLE_MULTI_CHANNEL : integer;
  attribute C_ENABLE_MULTI_CHANNEL of axi_dma_ctrl_axi_dma : entity is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of axi_dma_ctrl_axi_dma : entity is "zynq";
  attribute C_INCLUDE_MM2S : integer;
  attribute C_INCLUDE_MM2S of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_INCLUDE_MM2S_DRE : integer;
  attribute C_INCLUDE_MM2S_DRE of axi_dma_ctrl_axi_dma : entity is 0;
  attribute C_INCLUDE_MM2S_SF : integer;
  attribute C_INCLUDE_MM2S_SF of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_INCLUDE_S2MM : integer;
  attribute C_INCLUDE_S2MM of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_INCLUDE_S2MM_DRE : integer;
  attribute C_INCLUDE_S2MM_DRE of axi_dma_ctrl_axi_dma : entity is 0;
  attribute C_INCLUDE_S2MM_SF : integer;
  attribute C_INCLUDE_S2MM_SF of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_INCLUDE_SG : integer;
  attribute C_INCLUDE_SG of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of axi_dma_ctrl_axi_dma : entity is "axi_dma";
  attribute C_MICRO_DMA : integer;
  attribute C_MICRO_DMA of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_MM2S_BURST_SIZE : integer;
  attribute C_MM2S_BURST_SIZE of axi_dma_ctrl_axi_dma : entity is 16;
  attribute C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH : integer;
  attribute C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXIS_MM2S_TDATA_WIDTH : integer;
  attribute C_M_AXIS_MM2S_TDATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXI_MM2S_ADDR_WIDTH : integer;
  attribute C_M_AXI_MM2S_ADDR_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXI_MM2S_DATA_WIDTH : integer;
  attribute C_M_AXI_MM2S_DATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXI_S2MM_ADDR_WIDTH : integer;
  attribute C_M_AXI_S2MM_ADDR_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXI_S2MM_DATA_WIDTH : integer;
  attribute C_M_AXI_S2MM_DATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXI_SG_ADDR_WIDTH : integer;
  attribute C_M_AXI_SG_ADDR_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_M_AXI_SG_DATA_WIDTH : integer;
  attribute C_M_AXI_SG_DATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_NUM_MM2S_CHANNELS : integer;
  attribute C_NUM_MM2S_CHANNELS of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_NUM_S2MM_CHANNELS : integer;
  attribute C_NUM_S2MM_CHANNELS of axi_dma_ctrl_axi_dma : entity is 1;
  attribute C_PRMRY_IS_ACLK_ASYNC : integer;
  attribute C_PRMRY_IS_ACLK_ASYNC of axi_dma_ctrl_axi_dma : entity is 0;
  attribute C_S2MM_BURST_SIZE : integer;
  attribute C_S2MM_BURST_SIZE of axi_dma_ctrl_axi_dma : entity is 16;
  attribute C_SG_INCLUDE_STSCNTRL_STRM : integer;
  attribute C_SG_INCLUDE_STSCNTRL_STRM of axi_dma_ctrl_axi_dma : entity is 0;
  attribute C_SG_LENGTH_WIDTH : integer;
  attribute C_SG_LENGTH_WIDTH of axi_dma_ctrl_axi_dma : entity is 14;
  attribute C_SG_USE_STSAPP_LENGTH : integer;
  attribute C_SG_USE_STSAPP_LENGTH of axi_dma_ctrl_axi_dma : entity is 0;
  attribute C_S_AXIS_S2MM_STS_TDATA_WIDTH : integer;
  attribute C_S_AXIS_S2MM_STS_TDATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_S_AXIS_S2MM_TDATA_WIDTH : integer;
  attribute C_S_AXIS_S2MM_TDATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute C_S_AXI_LITE_ADDR_WIDTH : integer;
  attribute C_S_AXI_LITE_ADDR_WIDTH of axi_dma_ctrl_axi_dma : entity is 10;
  attribute C_S_AXI_LITE_DATA_WIDTH : integer;
  attribute C_S_AXI_LITE_DATA_WIDTH of axi_dma_ctrl_axi_dma : entity is 32;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of axi_dma_ctrl_axi_dma : entity is "axi_dma";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of axi_dma_ctrl_axi_dma : entity is "yes";
end axi_dma_ctrl_axi_dma;

architecture STRUCTURE of axi_dma_ctrl_axi_dma is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I/p_0_in\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I/rdy_to\ : STD_LOGIC;
  signal \GEN_AXI_LITE_IF.AXI_LITE_IF_I/rdy_to2\ : STD_LOGIC;
  signal \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE/GEN_QUEUE.I_UPDT_DESC_QUEUE/sinit\ : STD_LOGIC;
  signal \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/ch1_delay_cnt_en\ : STD_LOGIC;
  signal \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/ch2_delay_cnt_en\ : STD_LOGIC;
  signal \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_3_out\ : STD_LOGIC;
  signal \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_7_out\ : STD_LOGIC;
  signal \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_8_out\ : STD_LOGIC;
  signal \GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/sig_push_regfifo\ : STD_LOGIC;
  signal \GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/sig_rst2all_stop_request\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM/mm2s_ns0\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM/mm2s_ns12_out\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_decerr_i\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_interr_i\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_slverr_i\ : STD_LOGIC;
  signal \GEN_MM2S_DMA_CONTROL.I_MM2S_STS_MNGR/mm2s_halted_set0\ : STD_LOGIC;
  signal \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER/sg_ftch_error0\ : STD_LOGIC;
  signal \GEN_RESET_FOR_S2MM.RESET_I/soft_reset_d1\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF/updt_data1\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/cmnds_queued_shift\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/p_1_out\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/p_3_out\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_decerr_i\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_interr_i\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_slverr_i\ : STD_LOGIC;
  signal \GEN_S2MM_DMA_CONTROL.I_S2MM_STS_MNGR/s2mm_halted_set0\ : STD_LOGIC;
  signal \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER/sg_ftch_error0\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_170\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_238\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_239\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_242\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_246\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_247\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_315\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_56\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_57\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_58\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_59\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_61\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_63\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_65\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_66\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_67\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_68\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_70\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_72\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_78\ : STD_LOGIC;
  signal \GEN_SG_ENGINE.I_SG_ENGINE_n_79\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_17\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_18\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_19\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_20\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_21\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN_n_0\ : STD_LOGIC;
  signal \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN_n_3\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_11\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_12\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_19\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_20\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_21\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_9\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN_n_0\ : STD_LOGIC;
  signal \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN_n_3\ : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_115 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_117 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_118 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_120 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_121 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_122 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_126 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_127 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_128 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_129 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_130 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_131 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_132 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_133 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_134 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_135 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_136 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_137 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_138 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_139 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_140 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_141 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_142 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_143 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_144 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_145 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_150 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_152 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_153 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_155 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_17 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_20 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_21 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_22 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_23 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_24 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_25 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_42 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_45 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_46 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_47 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_48 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_49 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_50 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_51 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_52 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_53 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_54 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_56 : STD_LOGIC;
  signal I_AXI_DMA_REG_MODULE_n_57 : STD_LOGIC;
  signal I_PRMRY_DATAMOVER_n_21 : STD_LOGIC;
  signal I_PRMRY_DATAMOVER_n_25 : STD_LOGIC;
  signal I_RST_MODULE_n_10 : STD_LOGIC;
  signal I_RST_MODULE_n_11 : STD_LOGIC;
  signal I_RST_MODULE_n_12 : STD_LOGIC;
  signal I_RST_MODULE_n_13 : STD_LOGIC;
  signal I_RST_MODULE_n_15 : STD_LOGIC;
  signal I_RST_MODULE_n_16 : STD_LOGIC;
  signal I_RST_MODULE_n_19 : STD_LOGIC;
  signal I_RST_MODULE_n_22 : STD_LOGIC;
  signal I_RST_MODULE_n_23 : STD_LOGIC;
  signal I_RST_MODULE_n_3 : STD_LOGIC;
  signal I_RST_MODULE_n_8 : STD_LOGIC;
  signal I_RST_MODULE_n_9 : STD_LOGIC;
  signal \I_SG_FETCH_MNGR/ch1_sg_idle\ : STD_LOGIC;
  signal \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden2_new\ : STD_LOGIC;
  signal \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden_new\ : STD_LOGIC;
  signal \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_sinit\ : STD_LOGIC;
  signal \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_sinit2\ : STD_LOGIC;
  signal \I_SG_FETCH_QUEUE/p_0_in4_in\ : STD_LOGIC;
  signal \I_SG_FETCH_QUEUE/p_3_out\ : STD_LOGIC_VECTOR ( 95 to 95 );
  signal \^axi_dma_tstvec\ : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal axi_lite_reset_n : STD_LOGIC;
  signal ch1_fetch_address_i : STD_LOGIC_VECTOR ( 29 downto 6 );
  signal ch1_ftch_queue_empty : STD_LOGIC;
  signal ch2_fetch_address_i : STD_LOGIC_VECTOR ( 29 downto 6 );
  signal ch2_ftch_queue_empty : STD_LOGIC;
  signal dm_m_axi_sg_aresetn : STD_LOGIC;
  signal dma_mm2s_error : STD_LOGIC;
  signal dma_s2mm_error : STD_LOGIC;
  signal ftch_cmnd_data : STD_LOGIC_VECTOR ( 64 to 64 );
  signal \^m_axi_mm2s_arburst\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal m_axi_mm2s_aresetn : STD_LOGIC;
  signal \^m_axi_mm2s_arlen\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^m_axi_mm2s_arsize\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal m_axi_s2mm_aresetn : STD_LOGIC;
  signal \^m_axi_s2mm_awburst\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^m_axi_s2mm_awlen\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^m_axi_s2mm_awsize\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^m_axi_sg_araddr\ : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal \^m_axi_sg_arburst\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal m_axi_sg_aresetn : STD_LOGIC;
  signal \^m_axi_sg_arlen\ : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^m_axi_sg_awaddr\ : STD_LOGIC_VECTOR ( 31 downto 3 );
  signal \^m_axi_sg_awsize\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal m_axi_sg_hrdresetn : STD_LOGIC;
  signal \^m_axi_sg_wdata\ : STD_LOGIC_VECTOR ( 31 downto 26 );
  signal \^m_axi_sg_wstrb\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal m_axis_mm2s_sts_tvalid_int : STD_LOGIC;
  signal \^m_axis_mm2s_tlast\ : STD_LOGIC;
  signal \^m_axis_mm2s_tvalid\ : STD_LOGIC;
  signal m_axis_s2mm_sts_tready : STD_LOGIC;
  signal m_axis_s2mm_sts_tvalid_int : STD_LOGIC;
  signal mm2s_all_idle : STD_LOGIC;
  signal mm2s_curdesc : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal mm2s_dmacr : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal mm2s_error : STD_LOGIC;
  signal mm2s_halt : STD_LOGIC;
  signal mm2s_halt_cmplt : STD_LOGIC;
  signal mm2s_halted_clr : STD_LOGIC;
  signal mm2s_halted_set : STD_LOGIC;
  signal mm2s_irqdelay_wren : STD_LOGIC;
  signal mm2s_irqthresh_wren : STD_LOGIC;
  signal mm2s_prmry_resetn : STD_LOGIC;
  signal mm2s_scndry_resetn : STD_LOGIC;
  signal mm2s_soft_reset_done : STD_LOGIC;
  signal mm2s_stop : STD_LOGIC;
  signal mm2s_stop_i : STD_LOGIC;
  signal mm2s_taildesc : STD_LOGIC_VECTOR ( 31 downto 30 );
  signal p_0_in : STD_LOGIC;
  signal \p_0_in__0\ : STD_LOGIC;
  signal p_10_out : STD_LOGIC;
  signal p_13_out : STD_LOGIC_VECTOR ( 96 downto 0 );
  signal p_16_out : STD_LOGIC;
  signal p_17_out : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_18_out : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_19_out : STD_LOGIC;
  signal p_20_out : STD_LOGIC;
  signal p_24_out : STD_LOGIC;
  signal p_25_out : STD_LOGIC;
  signal p_26_out : STD_LOGIC;
  signal p_2_out : STD_LOGIC;
  signal p_37_out : STD_LOGIC;
  signal p_39_out : STD_LOGIC_VECTOR ( 96 downto 0 );
  signal p_3_out : STD_LOGIC_VECTOR ( 23 to 23 );
  signal p_43_out : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_44_out : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_45_out : STD_LOGIC;
  signal p_46_out : STD_LOGIC;
  signal p_50_out : STD_LOGIC;
  signal p_51_out : STD_LOGIC;
  signal p_52_out : STD_LOGIC;
  signal p_54_out : STD_LOGIC;
  signal p_60_out : STD_LOGIC;
  signal p_6_out : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal p_7_out : STD_LOGIC;
  signal p_8_out : STD_LOGIC;
  signal ptr2_queue_full : STD_LOGIC;
  signal ptr_queue_full : STD_LOGIC;
  signal s2mm_all_idle : STD_LOGIC;
  signal s2mm_curdesc : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal s2mm_dmacr : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal s2mm_error : STD_LOGIC;
  signal s2mm_halt : STD_LOGIC;
  signal s2mm_halt_cmplt : STD_LOGIC;
  signal s2mm_halted_clr : STD_LOGIC;
  signal s2mm_halted_set : STD_LOGIC;
  signal s2mm_irqdelay_wren : STD_LOGIC;
  signal s2mm_irqthresh_wren : STD_LOGIC;
  signal s2mm_prmry_resetn : STD_LOGIC;
  signal s2mm_scndry_resetn : STD_LOGIC;
  signal s2mm_soft_reset_done : STD_LOGIC;
  signal s2mm_stop : STD_LOGIC;
  signal s2mm_stop_i2_out : STD_LOGIC;
  signal s2mm_taildesc : STD_LOGIC_VECTOR ( 31 downto 30 );
  signal \^s_axi_lite_awready\ : STD_LOGIC;
  signal s_axis_mm2s_cmd_tready : STD_LOGIC;
  signal s_axis_mm2s_cmd_tvalid_split : STD_LOGIC;
  signal s_axis_mm2s_updtptr_tdata : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal s_axis_mm2s_updtptr_tvalid : STD_LOGIC;
  signal s_axis_mm2s_updtsts_tdata : STD_LOGIC_VECTOR ( 32 downto 28 );
  signal s_axis_mm2s_updtsts_tvalid : STD_LOGIC;
  signal s_axis_s2mm_cmd_tdata_split : STD_LOGIC_VECTOR ( 23 to 23 );
  signal s_axis_s2mm_cmd_tready : STD_LOGIC;
  signal s_axis_s2mm_cmd_tvalid_split : STD_LOGIC;
  signal \^s_axis_s2mm_tready\ : STD_LOGIC;
  signal s_axis_s2mm_updtptr_tdata : STD_LOGIC_VECTOR ( 31 downto 6 );
  signal s_axis_s2mm_updtptr_tvalid : STD_LOGIC;
  signal s_axis_s2mm_updtsts_tdata : STD_LOGIC_VECTOR ( 31 downto 26 );
  signal s_axis_s2mm_updtsts_tvalid : STD_LOGIC;
  signal sig_s_h_halt_reg : STD_LOGIC;
  signal soft_reset : STD_LOGIC;
  signal sts2_queue_full : STD_LOGIC;
  signal sts_queue_full : STD_LOGIC;
begin
  axi_dma_tstvec(31) <= \<const0>\;
  axi_dma_tstvec(30) <= \<const0>\;
  axi_dma_tstvec(29) <= \<const0>\;
  axi_dma_tstvec(28) <= \<const0>\;
  axi_dma_tstvec(27) <= \<const0>\;
  axi_dma_tstvec(26) <= \<const0>\;
  axi_dma_tstvec(25) <= \<const0>\;
  axi_dma_tstvec(24) <= \<const0>\;
  axi_dma_tstvec(23) <= \<const0>\;
  axi_dma_tstvec(22) <= \<const0>\;
  axi_dma_tstvec(21) <= \<const0>\;
  axi_dma_tstvec(20) <= \<const0>\;
  axi_dma_tstvec(19) <= \<const0>\;
  axi_dma_tstvec(18) <= \<const0>\;
  axi_dma_tstvec(17) <= \<const0>\;
  axi_dma_tstvec(16) <= \<const0>\;
  axi_dma_tstvec(15) <= \<const0>\;
  axi_dma_tstvec(14) <= \<const0>\;
  axi_dma_tstvec(13) <= \<const0>\;
  axi_dma_tstvec(12) <= \<const0>\;
  axi_dma_tstvec(11) <= \<const0>\;
  axi_dma_tstvec(10) <= \<const0>\;
  axi_dma_tstvec(9) <= \<const0>\;
  axi_dma_tstvec(8) <= \<const0>\;
  axi_dma_tstvec(7) <= \<const0>\;
  axi_dma_tstvec(6) <= \<const0>\;
  axi_dma_tstvec(5 downto 0) <= \^axi_dma_tstvec\(5 downto 0);
  m_axi_mm2s_arburst(1) <= \<const0>\;
  m_axi_mm2s_arburst(0) <= \^m_axi_mm2s_arburst\(0);
  m_axi_mm2s_arcache(3) <= \<const0>\;
  m_axi_mm2s_arcache(2) <= \<const0>\;
  m_axi_mm2s_arcache(1) <= \<const1>\;
  m_axi_mm2s_arcache(0) <= \<const1>\;
  m_axi_mm2s_arlen(7) <= \<const0>\;
  m_axi_mm2s_arlen(6) <= \<const0>\;
  m_axi_mm2s_arlen(5) <= \<const0>\;
  m_axi_mm2s_arlen(4 downto 0) <= \^m_axi_mm2s_arlen\(4 downto 0);
  m_axi_mm2s_arprot(2) <= \<const0>\;
  m_axi_mm2s_arprot(1) <= \<const0>\;
  m_axi_mm2s_arprot(0) <= \<const0>\;
  m_axi_mm2s_arsize(2) <= \<const0>\;
  m_axi_mm2s_arsize(1) <= \^m_axi_mm2s_arsize\(1);
  m_axi_mm2s_arsize(0) <= \<const0>\;
  m_axi_mm2s_aruser(3) <= \<const0>\;
  m_axi_mm2s_aruser(2) <= \<const0>\;
  m_axi_mm2s_aruser(1) <= \<const0>\;
  m_axi_mm2s_aruser(0) <= \<const0>\;
  m_axi_s2mm_awburst(1) <= \<const0>\;
  m_axi_s2mm_awburst(0) <= \^m_axi_s2mm_awburst\(0);
  m_axi_s2mm_awcache(3) <= \<const0>\;
  m_axi_s2mm_awcache(2) <= \<const0>\;
  m_axi_s2mm_awcache(1) <= \<const1>\;
  m_axi_s2mm_awcache(0) <= \<const1>\;
  m_axi_s2mm_awlen(7) <= \<const0>\;
  m_axi_s2mm_awlen(6) <= \<const0>\;
  m_axi_s2mm_awlen(5) <= \<const0>\;
  m_axi_s2mm_awlen(4 downto 0) <= \^m_axi_s2mm_awlen\(4 downto 0);
  m_axi_s2mm_awprot(2) <= \<const0>\;
  m_axi_s2mm_awprot(1) <= \<const0>\;
  m_axi_s2mm_awprot(0) <= \<const0>\;
  m_axi_s2mm_awsize(2) <= \<const0>\;
  m_axi_s2mm_awsize(1) <= \^m_axi_s2mm_awsize\(1);
  m_axi_s2mm_awsize(0) <= \<const0>\;
  m_axi_s2mm_awuser(3) <= \<const0>\;
  m_axi_s2mm_awuser(2) <= \<const0>\;
  m_axi_s2mm_awuser(1) <= \<const0>\;
  m_axi_s2mm_awuser(0) <= \<const0>\;
  m_axi_sg_araddr(31 downto 6) <= \^m_axi_sg_araddr\(31 downto 6);
  m_axi_sg_araddr(5) <= \<const0>\;
  m_axi_sg_araddr(4) <= \<const0>\;
  m_axi_sg_araddr(3) <= \<const0>\;
  m_axi_sg_araddr(2) <= \<const0>\;
  m_axi_sg_araddr(1) <= \<const0>\;
  m_axi_sg_araddr(0) <= \<const0>\;
  m_axi_sg_arburst(1) <= \<const0>\;
  m_axi_sg_arburst(0) <= \^m_axi_sg_arburst\(0);
  m_axi_sg_arcache(3) <= \<const0>\;
  m_axi_sg_arcache(2) <= \<const0>\;
  m_axi_sg_arcache(1) <= \<const1>\;
  m_axi_sg_arcache(0) <= \<const1>\;
  m_axi_sg_arlen(7) <= \<const0>\;
  m_axi_sg_arlen(6) <= \<const0>\;
  m_axi_sg_arlen(5) <= \<const0>\;
  m_axi_sg_arlen(4) <= \<const0>\;
  m_axi_sg_arlen(3) <= \<const0>\;
  m_axi_sg_arlen(2) <= \^m_axi_sg_arlen\(2);
  m_axi_sg_arlen(1) <= \^m_axi_sg_arlen\(2);
  m_axi_sg_arlen(0) <= \^m_axi_sg_arlen\(2);
  m_axi_sg_arprot(2) <= \<const0>\;
  m_axi_sg_arprot(1) <= \<const0>\;
  m_axi_sg_arprot(0) <= \<const0>\;
  m_axi_sg_arsize(2) <= \<const0>\;
  m_axi_sg_arsize(1) <= \^m_axi_sg_arlen\(2);
  m_axi_sg_arsize(0) <= \<const0>\;
  m_axi_sg_aruser(3) <= \<const0>\;
  m_axi_sg_aruser(2) <= \<const0>\;
  m_axi_sg_aruser(1) <= \<const0>\;
  m_axi_sg_aruser(0) <= \<const0>\;
  m_axi_sg_awaddr(31 downto 6) <= \^m_axi_sg_awaddr\(31 downto 6);
  m_axi_sg_awaddr(5) <= \<const0>\;
  m_axi_sg_awaddr(4 downto 3) <= \^m_axi_sg_awaddr\(4 downto 3);
  m_axi_sg_awaddr(2) <= \^m_axi_sg_awaddr\(3);
  m_axi_sg_awaddr(1) <= \<const0>\;
  m_axi_sg_awaddr(0) <= \<const0>\;
  m_axi_sg_awburst(1) <= \<const0>\;
  m_axi_sg_awburst(0) <= \^m_axi_sg_awaddr\(3);
  m_axi_sg_awcache(3) <= \<const0>\;
  m_axi_sg_awcache(2) <= \<const0>\;
  m_axi_sg_awcache(1) <= \<const1>\;
  m_axi_sg_awcache(0) <= \<const1>\;
  m_axi_sg_awlen(7) <= \<const0>\;
  m_axi_sg_awlen(6) <= \<const0>\;
  m_axi_sg_awlen(5) <= \<const0>\;
  m_axi_sg_awlen(4) <= \<const0>\;
  m_axi_sg_awlen(3) <= \<const0>\;
  m_axi_sg_awlen(2) <= \<const0>\;
  m_axi_sg_awlen(1) <= \<const0>\;
  m_axi_sg_awlen(0) <= \<const0>\;
  m_axi_sg_awprot(2) <= \<const0>\;
  m_axi_sg_awprot(1) <= \<const0>\;
  m_axi_sg_awprot(0) <= \<const0>\;
  m_axi_sg_awsize(2) <= \<const0>\;
  m_axi_sg_awsize(1) <= \^m_axi_sg_awsize\(1);
  m_axi_sg_awsize(0) <= \<const0>\;
  m_axi_sg_awuser(3) <= \<const0>\;
  m_axi_sg_awuser(2) <= \<const0>\;
  m_axi_sg_awuser(1) <= \<const0>\;
  m_axi_sg_awuser(0) <= \<const0>\;
  m_axi_sg_wdata(31 downto 26) <= \^m_axi_sg_wdata\(31 downto 26);
  m_axi_sg_wdata(25) <= \<const0>\;
  m_axi_sg_wdata(24) <= \<const0>\;
  m_axi_sg_wdata(23) <= \<const0>\;
  m_axi_sg_wdata(22) <= \<const0>\;
  m_axi_sg_wdata(21) <= \<const0>\;
  m_axi_sg_wdata(20) <= \<const0>\;
  m_axi_sg_wdata(19) <= \<const0>\;
  m_axi_sg_wdata(18) <= \<const0>\;
  m_axi_sg_wdata(17) <= \<const0>\;
  m_axi_sg_wdata(16) <= \<const0>\;
  m_axi_sg_wdata(15) <= \<const0>\;
  m_axi_sg_wdata(14) <= \<const0>\;
  m_axi_sg_wdata(13) <= \<const0>\;
  m_axi_sg_wdata(12) <= \<const0>\;
  m_axi_sg_wdata(11) <= \<const0>\;
  m_axi_sg_wdata(10) <= \<const0>\;
  m_axi_sg_wdata(9) <= \<const0>\;
  m_axi_sg_wdata(8) <= \<const0>\;
  m_axi_sg_wdata(7) <= \<const0>\;
  m_axi_sg_wdata(6) <= \<const0>\;
  m_axi_sg_wdata(5) <= \<const0>\;
  m_axi_sg_wdata(4) <= \<const0>\;
  m_axi_sg_wdata(3) <= \<const0>\;
  m_axi_sg_wdata(2) <= \<const0>\;
  m_axi_sg_wdata(1) <= \<const0>\;
  m_axi_sg_wdata(0) <= \<const0>\;
  m_axi_sg_wstrb(3) <= \^m_axi_sg_wstrb\(0);
  m_axi_sg_wstrb(2) <= \^m_axi_sg_wstrb\(0);
  m_axi_sg_wstrb(1) <= \^m_axi_sg_wstrb\(0);
  m_axi_sg_wstrb(0) <= \^m_axi_sg_wstrb\(0);
  m_axis_mm2s_cntrl_tdata(31) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(30) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(29) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(28) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(27) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(26) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(25) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(24) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(23) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(22) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(21) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(20) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(19) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(18) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(17) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(16) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(15) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(14) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(13) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(12) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(11) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(10) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(9) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(8) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(7) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(6) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(5) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(4) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(3) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(2) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(1) <= \<const0>\;
  m_axis_mm2s_cntrl_tdata(0) <= \<const0>\;
  m_axis_mm2s_cntrl_tkeep(3) <= \<const0>\;
  m_axis_mm2s_cntrl_tkeep(2) <= \<const0>\;
  m_axis_mm2s_cntrl_tkeep(1) <= \<const0>\;
  m_axis_mm2s_cntrl_tkeep(0) <= \<const0>\;
  m_axis_mm2s_cntrl_tlast <= \<const0>\;
  m_axis_mm2s_cntrl_tvalid <= \<const0>\;
  m_axis_mm2s_tdest(4) <= \<const0>\;
  m_axis_mm2s_tdest(3) <= \<const0>\;
  m_axis_mm2s_tdest(2) <= \<const0>\;
  m_axis_mm2s_tdest(1) <= \<const0>\;
  m_axis_mm2s_tdest(0) <= \<const0>\;
  m_axis_mm2s_tid(4) <= \<const0>\;
  m_axis_mm2s_tid(3) <= \<const0>\;
  m_axis_mm2s_tid(2) <= \<const0>\;
  m_axis_mm2s_tid(1) <= \<const0>\;
  m_axis_mm2s_tid(0) <= \<const0>\;
  m_axis_mm2s_tlast <= \^m_axis_mm2s_tlast\;
  m_axis_mm2s_tuser(3) <= \<const0>\;
  m_axis_mm2s_tuser(2) <= \<const0>\;
  m_axis_mm2s_tuser(1) <= \<const0>\;
  m_axis_mm2s_tuser(0) <= \<const0>\;
  m_axis_mm2s_tvalid <= \^m_axis_mm2s_tvalid\;
  s_axi_lite_awready <= \^s_axi_lite_awready\;
  s_axi_lite_bresp(1) <= \<const0>\;
  s_axi_lite_bresp(0) <= \<const0>\;
  s_axi_lite_rresp(1) <= \<const0>\;
  s_axi_lite_rresp(0) <= \<const0>\;
  s_axi_lite_wready <= \^s_axi_lite_awready\;
  s_axis_s2mm_sts_tready <= \<const0>\;
  s_axis_s2mm_tready <= \^s_axis_s2mm_tready\;
\GEN_SG_ENGINE.I_SG_ENGINE\: entity work.axi_dma_ctrl_axi_sg
     port map (
      D(0) => \I_SG_FETCH_QUEUE/p_3_out\(95),
      E(0) => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_21\,
      \FSM_sequential_GEN_SM_FOR_NO_LENGTH.s2mm_cs_reg[0]\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_315\,
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => I_RST_MODULE_n_16,
      \GEN_ASYNC_RESET.scndry_resetn_reg_0\ => I_RST_MODULE_n_19,
      \GEN_ASYNC_RESET.scndry_resetn_reg_1\ => I_RST_MODULE_n_15,
      \GEN_ASYNC_RESET.scndry_resetn_reg_2\ => I_RST_MODULE_n_13,
      \GEN_CH1_FETCH.ch1_active_i_reg\(0) => ftch_cmnd_data(64),
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d1_reg\ => I_AXI_DMA_REG_MODULE_n_155,
      \GEN_DESC_REG_FOR_SG.GEN_TAILUPDATE_EQL32.tailpntr_updated_d2_reg\ => I_AXI_DMA_REG_MODULE_n_122,
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]\(25 downto 0) => p_6_out(31 downto 6),
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_0\(25 downto 0) => s2mm_curdesc(31 downto 6),
      \GEN_DESC_REG_FOR_SG.curdesc_lsb_i_reg[31]_1\(25 downto 0) => mm2s_curdesc(31 downto 6),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(1) => I_AXI_DMA_REG_MODULE_n_138,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[11]\(0) => I_AXI_DMA_REG_MODULE_n_139,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(3) => I_AXI_DMA_REG_MODULE_n_140,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(2) => I_AXI_DMA_REG_MODULE_n_141,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(1) => I_AXI_DMA_REG_MODULE_n_142,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[21]\(0) => I_AXI_DMA_REG_MODULE_n_143,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(3) => I_AXI_DMA_REG_MODULE_n_132,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(2) => I_AXI_DMA_REG_MODULE_n_133,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(1) => I_AXI_DMA_REG_MODULE_n_134,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[23]\(0) => I_AXI_DMA_REG_MODULE_n_135,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(1) => I_AXI_DMA_REG_MODULE_n_136,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[27]\(0) => I_AXI_DMA_REG_MODULE_n_137,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(1) => I_AXI_DMA_REG_MODULE_n_144,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[29]\(0) => I_AXI_DMA_REG_MODULE_n_145,
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]\(1 downto 0) => mm2s_taildesc(31 downto 30),
      \GEN_DESC_REG_FOR_SG.taildesc_lsb_i_reg[31]_0\(1 downto 0) => s2mm_taildesc(31 downto 30),
      \GEN_DESC_UPDT_QUEUE.updt_sts_reg\(0) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_20\,
      \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ => \^axi_dma_tstvec\(0),
      \GEN_HOLD_NO_DATA.s_axis_s2mm_cmd_tvalid_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_247\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN_n_0\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\(7 downto 0) => p_44_out(7 downto 0),
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(7 downto 0) => p_43_out(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN_n_0\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(7 downto 0) => p_18_out(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\(0) => I_AXI_DMA_REG_MODULE_n_115,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(7 downto 0) => p_17_out(7 downto 0),
      \GEN_MM2S.queue_dout_valid_reg\ => I_RST_MODULE_n_12,
      \GEN_MM2S.queue_full_new_reg\(0) => \I_SG_FETCH_QUEUE/p_0_in4_in\,
      \GEN_NO_HOLD_DATA.s_axis_mm2s_cmd_tvalid_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_239\,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_79\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_9\,
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg_0\(0) => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_sinit2\,
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_78\,
      \GEN_UPDT_FOR_QUEUE.mm2s_pending_ptr_updt_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_238\,
      Q(0) => I_AXI_DMA_REG_MODULE_n_56,
      S(1) => I_AXI_DMA_REG_MODULE_n_130,
      S(0) => I_AXI_DMA_REG_MODULE_n_131,
      SR(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE/GEN_QUEUE.I_UPDT_DESC_QUEUE/sinit\,
      axi_dma_tstvec(0) => \^axi_dma_tstvec\(2),
      \axi_dma_tstvec[4]\ => \^axi_dma_tstvec\(4),
      \axi_dma_tstvec[5]\ => \^axi_dma_tstvec\(5),
      ch1_delay_cnt_en => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/ch1_delay_cnt_en\,
      ch1_ftch_queue_empty => ch1_ftch_queue_empty,
      ch1_sg_idle => \I_SG_FETCH_MNGR/ch1_sg_idle\,
      ch2_delay_cnt_en => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/ch2_delay_cnt_en\,
      ch2_ftch_queue_empty => ch2_ftch_queue_empty,
      cmnds_queued_shift(0) => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/cmnds_queued_shift\(0),
      dm_m_axi_sg_aresetn => dm_m_axi_sg_aresetn,
      dma_decerr_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_58\,
      dma_decerr_reg_0 => \GEN_SG_ENGINE.I_SG_ENGINE_n_67\,
      dma_decerr_reg_1 => I_AXI_DMA_REG_MODULE_n_22,
      dma_decerr_reg_2 => I_AXI_DMA_REG_MODULE_n_47,
      dma_interr_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_56\,
      dma_interr_reg_0 => \GEN_SG_ENGINE.I_SG_ENGINE_n_65\,
      dma_interr_reg_1 => I_AXI_DMA_REG_MODULE_n_20,
      dma_interr_reg_2 => I_AXI_DMA_REG_MODULE_n_45,
      dma_mm2s_error => dma_mm2s_error,
      dma_s2mm_error => dma_s2mm_error,
      dma_slverr_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_57\,
      dma_slverr_reg_0 => \GEN_SG_ENGINE.I_SG_ENGINE_n_66\,
      dma_slverr_reg_1 => I_AXI_DMA_REG_MODULE_n_21,
      dma_slverr_reg_2 => I_AXI_DMA_REG_MODULE_n_46,
      \dmacr_i_reg[0]\(0) => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_sinit\,
      \dmacr_i_reg[13]\(0) => I_AXI_DMA_REG_MODULE_n_57,
      \dmacr_i_reg[26]\ => I_AXI_DMA_REG_MODULE_n_120,
      \dmacr_i_reg[26]_0\ => I_AXI_DMA_REG_MODULE_n_117,
      \dmacr_i_reg[28]\ => I_AXI_DMA_REG_MODULE_n_126,
      \dmacr_i_reg[29]\ => I_AXI_DMA_REG_MODULE_n_128,
      \dmacr_i_reg[2]\ => I_AXI_DMA_REG_MODULE_n_17,
      \dmacr_i_reg[2]_0\ => I_AXI_DMA_REG_MODULE_n_42,
      \ftch_error_addr_reg[29]_0\(23 downto 0) => ch1_fetch_address_i(29 downto 6),
      \ftch_error_addr_reg[29]_1\(23 downto 0) => ch2_fetch_address_i(29 downto 6),
      irqthresh_wren_reg => I_AXI_DMA_REG_MODULE_n_127,
      irqthresh_wren_reg_0 => I_AXI_DMA_REG_MODULE_n_129,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_araddr(25 downto 0) => \^m_axi_sg_araddr\(31 downto 6),
      m_axi_sg_arburst(0) => \^m_axi_sg_arburst\(0),
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_arlen(0) => \^m_axi_sg_arlen\(2),
      m_axi_sg_arready => m_axi_sg_arready,
      m_axi_sg_arvalid => m_axi_sg_arvalid,
      m_axi_sg_awaddr(27 downto 2) => \^m_axi_sg_awaddr\(31 downto 6),
      m_axi_sg_awaddr(1 downto 0) => \^m_axi_sg_awaddr\(4 downto 3),
      m_axi_sg_awready => m_axi_sg_awready,
      m_axi_sg_awsize(0) => \^m_axi_sg_awsize\(1),
      m_axi_sg_awvalid => m_axi_sg_awvalid,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      m_axi_sg_rdata(31 downto 0) => m_axi_sg_rdata(31 downto 0),
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rready => m_axi_sg_rready,
      m_axi_sg_rresp(1 downto 0) => m_axi_sg_rresp(1 downto 0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      m_axi_sg_wdata(5 downto 0) => \^m_axi_sg_wdata\(31 downto 26),
      m_axi_sg_wlast => m_axi_sg_wlast,
      m_axi_sg_wready => m_axi_sg_wready,
      \m_axi_sg_wstrb[0]\ => \^m_axi_sg_wstrb\(0),
      m_axi_sg_wvalid => m_axi_sg_wvalid,
      mm2s_dmacr(13 downto 12) => mm2s_dmacr(31 downto 30),
      mm2s_dmacr(11 downto 1) => mm2s_dmacr(26 downto 16),
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_error => mm2s_error,
      mm2s_irqthresh_wren => mm2s_irqthresh_wren,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_stop_i => mm2s_stop_i,
      \out\(1) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_11\,
      \out\(0) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_12\,
      p_0_in => p_0_in,
      p_10_out => p_10_out,
      p_16_out => p_16_out,
      p_19_out => p_19_out,
      p_1_out => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/p_1_out\,
      p_20_out => p_20_out,
      p_24_out => p_24_out,
      p_25_out => p_25_out,
      p_26_out => p_26_out,
      p_37_out => p_37_out,
      p_3_out => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/p_3_out\,
      p_3_out_1 => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_3_out\,
      p_45_out => p_45_out,
      p_46_out => p_46_out,
      p_50_out => p_50_out,
      p_51_out => p_51_out,
      p_52_out => p_52_out,
      p_54_out => p_54_out,
      p_60_out => p_60_out,
      p_7_out => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_7_out\,
      p_8_out => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_8_out\,
      packet_in_progress_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_170\,
      packet_in_progress_reg_0 => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_17\,
      ptr2_queue_full => ptr2_queue_full,
      ptr_queue_full => ptr_queue_full,
      queue_rden2_new => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden2_new\,
      queue_rden_new => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden_new\,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_dmacr(15 downto 14) => s2mm_dmacr(31 downto 30),
      s2mm_dmacr(13 downto 1) => s2mm_dmacr(28 downto 16),
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_error => s2mm_error,
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_halted_set0 => \GEN_S2MM_DMA_CONTROL.I_S2MM_STS_MNGR/s2mm_halted_set0\,
      s2mm_halted_set_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_242\,
      s2mm_irqthresh_wren => s2mm_irqthresh_wren,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_stop_i2_out => s2mm_stop_i2_out,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      s_axis_mm2s_updtsts_tvalid => s_axis_mm2s_updtsts_tvalid,
      s_axis_s2mm_cmd_tready => s_axis_s2mm_cmd_tready,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      s_axis_s2mm_updtsts_tdata(5 downto 0) => s_axis_s2mm_updtsts_tdata(31 downto 26),
      s_axis_s2mm_updtsts_tvalid => s_axis_s2mm_updtsts_tvalid,
      sg_decerr_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_63\,
      sg_decerr_reg_0 => \GEN_SG_ENGINE.I_SG_ENGINE_n_72\,
      sg_decerr_reg_1 => I_AXI_DMA_REG_MODULE_n_25,
      sg_decerr_reg_2 => I_AXI_DMA_REG_MODULE_n_50,
      sg_ftch_error0 => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER/sg_ftch_error0\,
      sg_ftch_error0_0 => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER/sg_ftch_error0\,
      sg_interr_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_59\,
      sg_interr_reg_0 => \GEN_SG_ENGINE.I_SG_ENGINE_n_68\,
      sg_interr_reg_1 => I_AXI_DMA_REG_MODULE_n_23,
      sg_interr_reg_2 => I_AXI_DMA_REG_MODULE_n_48,
      sg_slverr_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_61\,
      sg_slverr_reg_0 => \GEN_SG_ENGINE.I_SG_ENGINE_n_70\,
      sg_slverr_reg_1 => I_AXI_DMA_REG_MODULE_n_24,
      sg_slverr_reg_2 => I_AXI_DMA_REG_MODULE_n_49,
      soft_reset => soft_reset,
      sts2_queue_full => sts2_queue_full,
      sts_queue_full => sts_queue_full,
      updt_data_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_246\,
      updt_data_reg_0(0) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_21\,
      \updt_desc_reg0_reg[31]\(66 downto 41) => p_39_out(96 downto 71),
      \updt_desc_reg0_reg[31]\(40) => p_39_out(64),
      \updt_desc_reg0_reg[31]\(39) => p_39_out(58),
      \updt_desc_reg0_reg[31]\(38 downto 0) => p_39_out(38 downto 0),
      \updt_desc_reg0_reg[31]_0\(66 downto 41) => p_13_out(96 downto 71),
      \updt_desc_reg0_reg[31]_0\(40) => p_13_out(64),
      \updt_desc_reg0_reg[31]_0\(39) => p_13_out(58),
      \updt_desc_reg0_reg[31]_0\(38 downto 0) => p_13_out(38 downto 0),
      \updt_desc_reg0_reg[31]_1\(25 downto 0) => s_axis_mm2s_updtptr_tdata(31 downto 6),
      \updt_desc_reg0_reg[31]_2\(25 downto 0) => s_axis_s2mm_updtptr_tdata(31 downto 6),
      \updt_desc_reg2_reg[32]\(4 downto 0) => s_axis_mm2s_updtsts_tdata(32 downto 28),
      updt_sts_reg(0) => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_20\
    );
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR\: entity work.axi_dma_ctrl_axi_dma_mm2s_mngr
     port map (
      E(0) => \GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/sig_push_regfifo\,
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => I_AXI_DMA_REG_MODULE_n_153,
      \GEN_MM2S.queue_dout_new_reg[64]\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_239\,
      \GEN_MM2S.queue_dout_new_reg[90]\(26 downto 1) => p_39_out(96 downto 71),
      \GEN_MM2S.queue_dout_new_reg[90]\(0) => p_39_out(64),
      \GEN_MM2S.queue_dout_valid_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_238\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.ptr_queue_dout_reg[6]\(0) => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_21\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[28]\(0) => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_20\,
      \GEN_Q_FOR_SYNC.MM2S_CHANNEL.sts_queue_dout_reg[32]\(4 downto 0) => s_axis_mm2s_updtsts_tdata(32 downto 28),
      Q(25 downto 0) => s_axis_mm2s_updtptr_tdata(31 downto 6),
      all_is_idle_d1_reg => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_19\,
      ch1_ftch_queue_empty => ch1_ftch_queue_empty,
      dma_mm2s_error => dma_mm2s_error,
      \ftch_cs_reg[0]\ => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_17\,
      idle_reg => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_18\,
      idle_reg_0 => I_AXI_DMA_REG_MODULE_n_52,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axis_mm2s_sts_tvalid_int => m_axis_mm2s_sts_tvalid_int,
      mm2s_all_idle => mm2s_all_idle,
      mm2s_decerr_i => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_decerr_i\,
      mm2s_dmacr(0) => mm2s_dmacr(0),
      mm2s_halt => mm2s_halt,
      mm2s_halted_clr => mm2s_halted_clr,
      mm2s_halted_set => mm2s_halted_set,
      mm2s_halted_set0 => \GEN_MM2S_DMA_CONTROL.I_MM2S_STS_MNGR/mm2s_halted_set0\,
      mm2s_interr_i => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_interr_i\,
      mm2s_ns0 => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM/mm2s_ns0\,
      mm2s_ns12_out => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM/mm2s_ns12_out\,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_slverr_i => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_slverr_i\,
      mm2s_stop => mm2s_stop,
      mm2s_stop_i => mm2s_stop_i,
      p_0_in => \p_0_in__0\,
      p_16_out => p_16_out,
      p_2_out => p_2_out,
      p_37_out => p_37_out,
      p_54_out => p_54_out,
      p_60_out => p_60_out,
      p_7_out => p_7_out,
      packet_in_progress_reg => \GEN_SG_ENGINE.I_SG_ENGINE_n_170\,
      ptr_queue_full => ptr_queue_full,
      queue_rden_new => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden_new\,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      s_axis_mm2s_updtsts_tvalid => s_axis_mm2s_updtsts_tvalid,
      sts_queue_full => sts_queue_full,
      sts_received_i_reg => I_PRMRY_DATAMOVER_n_21
    );
\INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN\: entity work.axi_dma_ctrl_axi_dma_sofeof_gen
     port map (
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => I_AXI_DMA_REG_MODULE_n_121,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN_n_0\,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN_n_3\,
      axi_dma_tstvec(1 downto 0) => \^axi_dma_tstvec\(1 downto 0),
      ch1_delay_cnt_en => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/ch1_delay_cnt_en\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axis_mm2s_tlast => \^m_axis_mm2s_tlast\,
      m_axis_mm2s_tready => m_axis_mm2s_tready,
      m_axis_mm2s_tvalid => \^m_axis_mm2s_tvalid\,
      mm2s_irqdelay_wren => mm2s_irqdelay_wren,
      mm2s_prmry_resetn => mm2s_prmry_resetn,
      p_0_in => \p_0_in__0\
    );
\INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR\: entity work.axi_dma_ctrl_axi_dma_s2mm_mngr
     port map (
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => I_PRMRY_DATAMOVER_n_25,
      \GEN_CH2_UPDATE.ch2_updt_idle_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_242\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.NO_APP_UPDATE.sts2_queue_dout_reg[26]\(0) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_20\,
      \GEN_Q_FOR_SYNC.S2MM_CHANNEL.ptr2_queue_dout_reg[6]\(0) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_21\,
      \GEN_S2MM.queue_dout2_new_reg[64]\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_247\,
      \GEN_S2MM.queue_dout2_new_reg[90]\(26 downto 1) => p_13_out(96 downto 71),
      \GEN_S2MM.queue_dout2_new_reg[90]\(0) => p_13_out(64),
      \GEN_S2MM.queue_dout2_valid_reg\ => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_9\,
      \GEN_S2MM.queue_dout2_valid_reg_0\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_246\,
      Q(25 downto 0) => s_axis_s2mm_updtptr_tdata(31 downto 6),
      \QUEUE_COUNT.cmnds_queued_shift_reg[0]\(0) => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/cmnds_queued_shift\(0),
      ch2_ftch_queue_empty => ch2_ftch_queue_empty,
      dma_s2mm_error => dma_s2mm_error,
      \dmacr_i_reg[0]\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_315\,
      \dmacr_i_reg[2]\ => I_AXI_DMA_REG_MODULE_n_150,
      idle_reg => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_19\,
      idle_reg_0 => I_AXI_DMA_REG_MODULE_n_54,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axis_s2mm_sts_tready => m_axis_s2mm_sts_tready,
      m_axis_s2mm_sts_tvalid_int => m_axis_s2mm_sts_tvalid_int,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      \out\(1) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_11\,
      \out\(0) => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_12\,
      p_0_in => p_0_in,
      p_10_out => p_10_out,
      p_1_out => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/p_1_out\,
      p_3_out => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SM/p_3_out\,
      p_8_out => p_8_out,
      ptr2_queue_full => ptr2_queue_full,
      queue_rden2_new => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden2_new\,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_decerr_i => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_decerr_i\,
      s2mm_dmacr(0) => s2mm_dmacr(0),
      s2mm_halt => s2mm_halt,
      s2mm_halted_clr => s2mm_halted_clr,
      s2mm_halted_set => s2mm_halted_set,
      s2mm_halted_set0 => \GEN_S2MM_DMA_CONTROL.I_S2MM_STS_MNGR/s2mm_halted_set0\,
      s2mm_interr_i => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_interr_i\,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_slverr_i => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_slverr_i\,
      s2mm_stop => s2mm_stop,
      s2mm_stop_i2_out => s2mm_stop_i2_out,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      s_axis_s2mm_updtptr_tvalid => s_axis_s2mm_updtptr_tvalid,
      s_axis_s2mm_updtsts_tdata(5 downto 0) => s_axis_s2mm_updtsts_tdata(31 downto 26),
      s_axis_s2mm_updtsts_tvalid => s_axis_s2mm_updtsts_tvalid,
      sts2_queue_full => sts2_queue_full,
      updt_data1 => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF/updt_data1\
    );
\INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN\: entity work.axi_dma_ctrl_axi_dma_sofeof_gen_0
     port map (
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => I_AXI_DMA_REG_MODULE_n_118,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN_n_0\,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN_n_3\,
      axi_dma_tstvec(1 downto 0) => \^axi_dma_tstvec\(3 downto 2),
      ch2_delay_cnt_en => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/ch2_delay_cnt_en\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      s2mm_irqdelay_wren => s2mm_irqdelay_wren,
      s2mm_prmry_resetn => s2mm_prmry_resetn,
      s_axis_s2mm_tlast => s_axis_s2mm_tlast,
      s_axis_s2mm_tready => \^s_axis_s2mm_tready\,
      s_axis_s2mm_tvalid => s_axis_s2mm_tvalid,
      updt_data1 => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF/updt_data1\
    );
I_AXI_DMA_REG_MODULE: entity work.axi_dma_ctrl_axi_dma_reg_module
     port map (
      D(0) => \I_SG_FETCH_QUEUE/p_3_out\(95),
      \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ => I_RST_MODULE_n_3,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[1]\ => I_AXI_DMA_REG_MODULE_n_54,
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]\(25 downto 0) => s2mm_curdesc(31 downto 6),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_0\(1 downto 0) => mm2s_taildesc(31 downto 30),
      \GEN_ASYNC_READ.lite_rdata_cdc_from_reg[31]_1\(1 downto 0) => s2mm_taildesc(31 downto 30),
      \GEN_ASYNC_RESET.scndry_resetn_reg\ => I_RST_MODULE_n_8,
      \GEN_ASYNC_RESET.scndry_resetn_reg_0\ => I_RST_MODULE_n_9,
      \GEN_ASYNC_RESET.scndry_resetn_reg_1\ => I_RST_MODULE_n_13,
      \GEN_CH1_FETCH.ch1_active_i_reg\(0) => ftch_cmnd_data(64),
      \GEN_CH1_UPDATE.ch1_dma_decerr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_58\,
      \GEN_CH1_UPDATE.ch1_dma_interr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_56\,
      \GEN_CH1_UPDATE.ch1_dma_slverr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_57\,
      \GEN_CH1_UPDATE.ch1_updt_decerr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_63\,
      \GEN_CH1_UPDATE.ch1_updt_interr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_59\,
      \GEN_CH1_UPDATE.ch1_updt_slverr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_61\,
      \GEN_CH2_UPDATE.ch2_dma_decerr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_67\,
      \GEN_CH2_UPDATE.ch2_dma_interr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_65\,
      \GEN_CH2_UPDATE.ch2_dma_slverr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_66\,
      \GEN_CH2_UPDATE.ch2_updt_decerr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_72\,
      \GEN_CH2_UPDATE.ch2_updt_interr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_68\,
      \GEN_CH2_UPDATE.ch2_updt_slverr_set_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_70\,
      \GEN_DESC_REG_FOR_SG.error_pointer_set_reg\ => I_AXI_DMA_REG_MODULE_n_51,
      \GEN_DESC_REG_FOR_SG.error_pointer_set_reg_0\ => I_AXI_DMA_REG_MODULE_n_53,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_cnt_en_reg\ => I_AXI_DMA_REG_MODULE_n_121,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]\ => I_AXI_DMA_REG_MODULE_n_126,
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_delay_count_reg[7]_0\(7 downto 0) => p_44_out(7 downto 0),
      \GEN_INCLUDE_MM2S.GEN_CH1_DELAY_INTERRUPT.ch1_dly_irq_set_i_reg\ => I_AXI_DMA_REG_MODULE_n_120,
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[1]\ => I_AXI_DMA_REG_MODULE_n_127,
      \GEN_INCLUDE_MM2S.ch1_thresh_count_reg[7]\(7 downto 0) => p_43_out(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_cnt_en_reg\ => I_AXI_DMA_REG_MODULE_n_118,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]\(0) => I_AXI_DMA_REG_MODULE_n_115,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_delay_count_reg[7]_0\(7 downto 0) => p_18_out(7 downto 0),
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg\ => I_AXI_DMA_REG_MODULE_n_117,
      \GEN_INCLUDE_S2MM.GEN_CH2_DELAY_INTERRUPT.ch2_dly_irq_set_i_reg_0\ => I_AXI_DMA_REG_MODULE_n_128,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[1]\ => I_AXI_DMA_REG_MODULE_n_129,
      \GEN_INCLUDE_S2MM.ch2_thresh_count_reg[7]\(7 downto 0) => p_17_out(7 downto 0),
      \GEN_MM2S.queue_dout_new_reg[90]\(25 downto 0) => p_39_out(96 downto 71),
      \GEN_MM2S.reg1_reg[90]\(0) => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_sinit\,
      \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg\ => I_AXI_DMA_REG_MODULE_n_17,
      \GEN_MM2S_DMA_CONTROL.mm2s_stop_reg_0\ => I_RST_MODULE_n_10,
      \GEN_NO_UPR_MSB_NXTDESC.ch1_nxtdesc_wren_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_79\,
      \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[29]\(23 downto 0) => ch1_fetch_address_i(29 downto 6),
      \GEN_PNTR_FOR_CH1.ch1_fetch_address_i_reg[31]\(25 downto 0) => mm2s_curdesc(31 downto 6),
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg\ => I_AXI_DMA_REG_MODULE_n_122,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(3) => I_AXI_DMA_REG_MODULE_n_132,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(2) => I_AXI_DMA_REG_MODULE_n_133,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(1) => I_AXI_DMA_REG_MODULE_n_134,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_0\(0) => I_AXI_DMA_REG_MODULE_n_135,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\(1) => I_AXI_DMA_REG_MODULE_n_136,
      \GEN_PNTR_FOR_CH1.ch1_sg_idle_reg_1\(0) => I_AXI_DMA_REG_MODULE_n_137,
      \GEN_PNTR_FOR_CH2.ch2_fetch_address_i_reg[29]\(23 downto 0) => ch2_fetch_address_i(29 downto 6),
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\(1) => I_AXI_DMA_REG_MODULE_n_138,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\(0) => I_AXI_DMA_REG_MODULE_n_139,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(3) => I_AXI_DMA_REG_MODULE_n_140,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(2) => I_AXI_DMA_REG_MODULE_n_141,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(1) => I_AXI_DMA_REG_MODULE_n_142,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_0\(0) => I_AXI_DMA_REG_MODULE_n_143,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\(1) => I_AXI_DMA_REG_MODULE_n_144,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_1\(0) => I_AXI_DMA_REG_MODULE_n_145,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg_2\ => I_AXI_DMA_REG_MODULE_n_155,
      \GEN_S2MM.queue_dout2_new_reg[90]\(25 downto 0) => p_13_out(96 downto 71),
      \GEN_S2MM_DMA_CONTROL.s2mm_desc_flush_i_reg\ => I_AXI_DMA_REG_MODULE_n_150,
      \GEN_S2MM_DMA_CONTROL.s2mm_stop_reg\ => I_RST_MODULE_n_11,
      Q(0) => I_AXI_DMA_REG_MODULE_n_56,
      \QUEUE_COUNT.cmnds_queued_shift_reg[2]\ => I_AXI_DMA_REG_MODULE_n_153,
      S(1) => I_AXI_DMA_REG_MODULE_n_130,
      S(0) => I_AXI_DMA_REG_MODULE_n_131,
      SR(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE/GEN_QUEUE.I_UPDT_DESC_QUEUE/sinit\,
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]\(0) => p_3_out(23),
      \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23]_0\(0) => s_axis_s2mm_cmd_tdata_split(23),
      all_is_idle_d1_reg => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_18\,
      all_is_idle_d1_reg_0 => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_DMA_MNGR_n_19\,
      ch1_sg_idle => \I_SG_FETCH_MNGR/ch1_sg_idle\,
      error_d1_reg => I_AXI_DMA_REG_MODULE_n_23,
      error_d1_reg_0 => I_AXI_DMA_REG_MODULE_n_24,
      error_d1_reg_1 => I_AXI_DMA_REG_MODULE_n_25,
      error_d1_reg_2 => I_AXI_DMA_REG_MODULE_n_48,
      error_d1_reg_3 => I_AXI_DMA_REG_MODULE_n_49,
      error_d1_reg_4 => I_AXI_DMA_REG_MODULE_n_50,
      \ftch_error_addr_reg[31]\(25 downto 0) => p_6_out(31 downto 6),
      idle_reg => I_AXI_DMA_REG_MODULE_n_52,
      introut_reg(0) => I_AXI_DMA_REG_MODULE_n_57,
      irqdelay_wren_reg(13 downto 12) => mm2s_dmacr(31 downto 30),
      irqdelay_wren_reg(11 downto 1) => mm2s_dmacr(26 downto 16),
      irqdelay_wren_reg(0) => mm2s_dmacr(0),
      irqdelay_wren_reg_0(15 downto 14) => s2mm_dmacr(31 downto 30),
      irqdelay_wren_reg_0(13 downto 1) => s2mm_dmacr(28 downto 16),
      irqdelay_wren_reg_0(0) => s2mm_dmacr(0),
      irqdelay_wren_reg_1 => \INCLUDE_S2MM_SOF_EOF_GENERATOR.I_S2MM_SOFEOF_GEN_n_3\,
      irqdelay_wren_reg_2 => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_SOFEOF_GEN_n_3\,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_hrdresetn => m_axi_sg_hrdresetn,
      m_axi_sg_rdata(0) => m_axi_sg_rdata(31),
      mm2s_all_idle => mm2s_all_idle,
      mm2s_error => mm2s_error,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      mm2s_halted_set0 => \GEN_MM2S_DMA_CONTROL.I_MM2S_STS_MNGR/mm2s_halted_set0\,
      mm2s_introut => mm2s_introut,
      mm2s_irqdelay_wren => mm2s_irqdelay_wren,
      mm2s_irqthresh_wren => mm2s_irqthresh_wren,
      mm2s_ns0 => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM/mm2s_ns0\,
      mm2s_ns12_out => \GEN_MM2S_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_MM2S_SM/mm2s_ns12_out\,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_soft_reset_done => mm2s_soft_reset_done,
      mm2s_stop_i => mm2s_stop_i,
      p_0_in => \GEN_AXI_LITE_IF.AXI_LITE_IF_I/p_0_in\,
      p_10_out => p_10_out,
      p_16_out => p_16_out,
      p_19_out => p_19_out,
      p_20_out => p_20_out,
      p_24_out => p_24_out,
      p_25_out => p_25_out,
      p_26_out => p_26_out,
      p_37_out => p_37_out,
      p_3_out => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_3_out\,
      p_45_out => p_45_out,
      p_46_out => p_46_out,
      p_50_out => p_50_out,
      p_51_out => p_51_out,
      p_52_out => p_52_out,
      p_7_out => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_7_out\,
      p_8_out => \GEN_INTERRUPT_LOGIC.I_AXI_SG_INTRPT/p_8_out\,
      packet_in_progress_reg => \INCLUDE_MM2S_SOF_EOF_GENERATOR.I_MM2S_DMA_MNGR_n_19\,
      rdy_to2 => \GEN_AXI_LITE_IF.AXI_LITE_IF_I/rdy_to2\,
      s2mm_error => s2mm_error,
      s2mm_introut => s2mm_introut,
      s2mm_irqdelay_wren => s2mm_irqdelay_wren,
      s2mm_irqthresh_wren => s2mm_irqthresh_wren,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_soft_reset_done => s2mm_soft_reset_done,
      s_axi_lite_aclk => s_axi_lite_aclk,
      s_axi_lite_araddr(9 downto 0) => s_axi_lite_araddr(9 downto 0),
      s_axi_lite_arready => s_axi_lite_arready,
      s_axi_lite_arvalid => s_axi_lite_arvalid,
      s_axi_lite_awaddr(4 downto 0) => s_axi_lite_awaddr(6 downto 2),
      s_axi_lite_awready => \^s_axi_lite_awready\,
      s_axi_lite_awvalid => s_axi_lite_awvalid,
      s_axi_lite_bready => s_axi_lite_bready,
      s_axi_lite_bvalid => s_axi_lite_bvalid,
      s_axi_lite_rdata(31 downto 0) => s_axi_lite_rdata(31 downto 0),
      s_axi_lite_resetn => axi_lite_reset_n,
      s_axi_lite_rready => s_axi_lite_rready,
      s_axi_lite_rvalid => s_axi_lite_rvalid,
      s_axi_lite_wdata(29 downto 4) => s_axi_lite_wdata(31 downto 6),
      s_axi_lite_wdata(3 downto 1) => s_axi_lite_wdata(4 downto 2),
      s_axi_lite_wdata(0) => s_axi_lite_wdata(0),
      s_axi_lite_wvalid => s_axi_lite_wvalid,
      s_axis_mm2s_updtptr_tvalid => s_axis_mm2s_updtptr_tvalid,
      scndry_out => \GEN_AXI_LITE_IF.AXI_LITE_IF_I/rdy_to\,
      sg_ftch_error0 => \GEN_MM2S_REGISTERS.I_MM2S_DMA_REGISTER/sg_ftch_error0\,
      sg_ftch_error0_0 => \GEN_S2MM_REGISTERS.I_S2MM_DMA_REGISTER/sg_ftch_error0\,
      sg_updt_error_reg => I_AXI_DMA_REG_MODULE_n_20,
      sg_updt_error_reg_0 => I_AXI_DMA_REG_MODULE_n_21,
      sg_updt_error_reg_1 => I_AXI_DMA_REG_MODULE_n_22,
      sg_updt_error_reg_2 => I_AXI_DMA_REG_MODULE_n_45,
      sg_updt_error_reg_3 => I_AXI_DMA_REG_MODULE_n_46,
      sg_updt_error_reg_4 => I_AXI_DMA_REG_MODULE_n_47,
      soft_reset => soft_reset,
      soft_reset_d1 => \GEN_RESET_FOR_S2MM.RESET_I/soft_reset_d1\,
      soft_reset_d1_reg => I_AXI_DMA_REG_MODULE_n_42,
      soft_reset_re_reg => I_AXI_DMA_REG_MODULE_n_152
    );
I_PRMRY_DATAMOVER: entity work.axi_dma_ctrl_axi_datamover
     port map (
      D(40 downto 9) => p_39_out(31 downto 0),
      D(8) => p_39_out(58),
      D(7) => p_3_out(23),
      D(6 downto 0) => p_39_out(38 downto 32),
      \DETERMINATE_BTT_MODE.s2mm_packet_eof_i_reg\ => I_PRMRY_DATAMOVER_n_25,
      E(0) => \GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/sig_push_regfifo\,
      \GEN_ASYNC_RESET.halt_i_reg\ => I_RST_MODULE_n_22,
      \GEN_ASYNC_RESET.halt_i_reg_0\ => I_RST_MODULE_n_23,
      \GEN_S2MM.queue_dout2_new_reg[31]\(40 downto 9) => p_13_out(31 downto 0),
      \GEN_S2MM.queue_dout2_new_reg[31]\(8) => p_13_out(58),
      \GEN_S2MM.queue_dout2_new_reg[31]\(7) => s_axis_s2mm_cmd_tdata_split(23),
      \GEN_S2MM.queue_dout2_new_reg[31]\(6 downto 0) => p_13_out(38 downto 32),
      dm_mm2s_prmry_resetn => m_axi_mm2s_aresetn,
      dm_s2mm_prmry_resetn => m_axi_s2mm_aresetn,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_araddr(31 downto 0) => m_axi_mm2s_araddr(31 downto 0),
      m_axi_mm2s_arburst(0) => \^m_axi_mm2s_arburst\(0),
      m_axi_mm2s_arlen(4 downto 0) => \^m_axi_mm2s_arlen\(4 downto 0),
      m_axi_mm2s_arready => m_axi_mm2s_arready,
      m_axi_mm2s_arsize(0) => \^m_axi_mm2s_arsize\(1),
      m_axi_mm2s_arvalid => m_axi_mm2s_arvalid,
      m_axi_mm2s_rdata(31 downto 0) => m_axi_mm2s_rdata(31 downto 0),
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      m_axi_mm2s_rready => m_axi_mm2s_rready,
      m_axi_mm2s_rresp(1 downto 0) => m_axi_mm2s_rresp(1 downto 0),
      m_axi_mm2s_rvalid => m_axi_mm2s_rvalid,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_awaddr(31 downto 0) => m_axi_s2mm_awaddr(31 downto 0),
      m_axi_s2mm_awburst(0) => \^m_axi_s2mm_awburst\(0),
      m_axi_s2mm_awlen(4 downto 0) => \^m_axi_s2mm_awlen\(4 downto 0),
      m_axi_s2mm_awready => m_axi_s2mm_awready,
      m_axi_s2mm_awsize(0) => \^m_axi_s2mm_awsize\(1),
      m_axi_s2mm_awvalid => m_axi_s2mm_awvalid,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      m_axi_s2mm_wdata(31 downto 0) => m_axi_s2mm_wdata(31 downto 0),
      m_axi_s2mm_wlast => m_axi_s2mm_wlast,
      m_axi_s2mm_wready => m_axi_s2mm_wready,
      m_axi_s2mm_wstrb(3 downto 0) => m_axi_s2mm_wstrb(3 downto 0),
      m_axi_s2mm_wvalid => m_axi_s2mm_wvalid,
      m_axis_mm2s_sts_tvalid_int => m_axis_mm2s_sts_tvalid_int,
      m_axis_mm2s_tdata(31 downto 0) => m_axis_mm2s_tdata(31 downto 0),
      m_axis_mm2s_tkeep(3 downto 0) => m_axis_mm2s_tkeep(3 downto 0),
      m_axis_mm2s_tlast => \^m_axis_mm2s_tlast\,
      m_axis_mm2s_tready => m_axis_mm2s_tready,
      m_axis_mm2s_tvalid => \^m_axis_mm2s_tvalid\,
      m_axis_s2mm_sts_tready => m_axis_s2mm_sts_tready,
      m_axis_s2mm_sts_tvalid_int => m_axis_s2mm_sts_tvalid_int,
      mm2s_decerr_i => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_decerr_i\,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      mm2s_interr_i => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_interr_i\,
      mm2s_slverr_i => \GEN_MM2S_DMA_CONTROL.I_MM2S_CMDSTS/mm2s_slverr_i\,
      \mm2s_tag_reg[0]\ => I_PRMRY_DATAMOVER_n_21,
      p_2_out => p_2_out,
      p_7_out => p_7_out,
      p_8_out => p_8_out,
      s2mm_decerr_i => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_decerr_i\,
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_interr_i => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_interr_i\,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_slverr_i => \GEN_S2MM_DMA_CONTROL.I_S2MM_CMDSTS/s2mm_slverr_i\,
      s_axis_mm2s_cmd_tready => s_axis_mm2s_cmd_tready,
      s_axis_mm2s_cmd_tvalid_split => s_axis_mm2s_cmd_tvalid_split,
      s_axis_s2mm_cmd_tready => s_axis_s2mm_cmd_tready,
      s_axis_s2mm_cmd_tvalid_split => s_axis_s2mm_cmd_tvalid_split,
      s_axis_s2mm_tdata(31 downto 0) => s_axis_s2mm_tdata(31 downto 0),
      s_axis_s2mm_tkeep(3 downto 0) => s_axis_s2mm_tkeep(3 downto 0),
      s_axis_s2mm_tlast => s_axis_s2mm_tlast,
      s_axis_s2mm_tready => \^s_axis_s2mm_tready\,
      s_axis_s2mm_tvalid => s_axis_s2mm_tvalid,
      sig_rst2all_stop_request => \GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/sig_rst2all_stop_request\,
      sig_s_h_halt_reg => sig_s_h_halt_reg
    );
I_RST_MODULE: entity work.axi_dma_ctrl_axi_dma_rst_module
     port map (
      D(0) => \I_SG_FETCH_QUEUE/p_3_out\(95),
      \GEN_ASYNC_READ.rvalid_reg\ => I_RST_MODULE_n_3,
      \GEN_CH1_FETCH.ch1_active_i_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_78\,
      \GEN_CH2_UPDATE.ch2_updt_idle_reg\ => \GEN_SG_ENGINE.I_SG_ENGINE_n_242\,
      \GEN_FOR_SYNC.s_sof_d1_cdc_tig_reg\ => \p_0_in__0\,
      \GEN_MM2S.queue_dout_valid_reg\ => I_RST_MODULE_n_12,
      \GEN_MM2S.queue_dout_valid_reg_0\ => I_RST_MODULE_n_13,
      \GEN_PNTR_FOR_CH2.ch2_sg_idle_reg\ => I_RST_MODULE_n_15,
      \GEN_S2MM.reg2_reg[90]\(0) => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_sinit2\,
      \GEN_STALE_DESC_CHECK.ftch_stale_desc_reg\ => I_RST_MODULE_n_16,
      SR(0) => \GEN_DESC_UPDATE.I_SG_UPDATE_QUEUE/GEN_QUEUE.I_UPDT_DESC_QUEUE/sinit\,
      axi_resetn => axi_resetn,
      \counter_reg[6]\ => I_RST_MODULE_n_19,
      \counter_reg[7]\(0) => \I_SG_FETCH_QUEUE/p_0_in4_in\,
      dm_m_axi_sg_aresetn => dm_m_axi_sg_aresetn,
      dm_mm2s_prmry_resetn => m_axi_mm2s_aresetn,
      dm_s2mm_prmry_resetn => m_axi_s2mm_aresetn,
      \dmacr_i_reg[0]\ => I_RST_MODULE_n_10,
      \dmacr_i_reg[0]_0\ => I_RST_MODULE_n_11,
      \dmacr_i_reg[0]_1\(0) => mm2s_dmacr(0),
      \dmacr_i_reg[2]\ => I_AXI_DMA_REG_MODULE_n_17,
      \dmacr_i_reg[2]_0\ => I_AXI_DMA_REG_MODULE_n_42,
      \dmacr_i_reg[2]_1\ => I_AXI_DMA_REG_MODULE_n_152,
      halted_reg => I_RST_MODULE_n_8,
      halted_reg_0 => I_RST_MODULE_n_9,
      halted_reg_1 => I_AXI_DMA_REG_MODULE_n_51,
      halted_reg_2 => I_AXI_DMA_REG_MODULE_n_53,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_aresetn => m_axi_sg_aresetn,
      m_axi_sg_hrdresetn => m_axi_sg_hrdresetn,
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      mm2s_all_idle => mm2s_all_idle,
      mm2s_cntrl_reset_out_n => mm2s_cntrl_reset_out_n,
      mm2s_halt => mm2s_halt,
      mm2s_halt_cmplt => mm2s_halt_cmplt,
      mm2s_halted_clr => mm2s_halted_clr,
      mm2s_halted_set => mm2s_halted_set,
      mm2s_prmry_reset_out_n => mm2s_prmry_reset_out_n,
      mm2s_prmry_resetn => mm2s_prmry_resetn,
      mm2s_scndry_resetn => mm2s_scndry_resetn,
      mm2s_soft_reset_done => mm2s_soft_reset_done,
      mm2s_stop => mm2s_stop,
      mm2s_stop_i => mm2s_stop_i,
      p_0_in => p_0_in,
      p_0_in_0 => \GEN_AXI_LITE_IF.AXI_LITE_IF_I/p_0_in\,
      p_16_out => p_16_out,
      p_37_out => p_37_out,
      queue_rden_new => \I_SG_FETCH_QUEUE/GEN_QUEUE.FTCH_QUEUE_I/queue_rden_new\,
      rdy_to2 => \GEN_AXI_LITE_IF.AXI_LITE_IF_I/rdy_to2\,
      s2mm_all_idle => s2mm_all_idle,
      s2mm_halt => s2mm_halt,
      s2mm_halt_cmplt => s2mm_halt_cmplt,
      s2mm_halted_clr => s2mm_halted_clr,
      s2mm_halted_set => s2mm_halted_set,
      s2mm_prmry_reset_out_n => s2mm_prmry_reset_out_n,
      s2mm_prmry_resetn => s2mm_prmry_resetn,
      s2mm_scndry_resetn => s2mm_scndry_resetn,
      s2mm_soft_reset_done => s2mm_soft_reset_done,
      s2mm_stop => s2mm_stop,
      s2mm_sts_reset_out_n => s2mm_sts_reset_out_n,
      s_axi_lite_aclk => s_axi_lite_aclk,
      s_axi_lite_resetn => axi_lite_reset_n,
      scndry_out => \GEN_AXI_LITE_IF.AXI_LITE_IF_I/rdy_to\,
      sig_rst2all_stop_request => \GEN_MM2S_BASIC.I_MM2S_BASIC_WRAPPER/sig_rst2all_stop_request\,
      sig_s_h_halt_reg => sig_s_h_halt_reg,
      sig_s_h_halt_reg_reg => I_RST_MODULE_n_22,
      sig_s_h_halt_reg_reg_0 => I_RST_MODULE_n_23,
      soft_reset => soft_reset,
      soft_reset_d1 => \GEN_RESET_FOR_S2MM.RESET_I/soft_reset_d1\,
      updt_data1 => \GEN_S2MM_DMA_CONTROL.GEN_SCATTER_GATHER_MODE.I_S2MM_SG_IF/updt_data1\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity axi_dma_ctrl is
  port (
    s_axi_lite_aclk : in STD_LOGIC;
    m_axi_sg_aclk : in STD_LOGIC;
    m_axi_mm2s_aclk : in STD_LOGIC;
    m_axi_s2mm_aclk : in STD_LOGIC;
    axi_resetn : in STD_LOGIC;
    s_axi_lite_awvalid : in STD_LOGIC;
    s_axi_lite_awready : out STD_LOGIC;
    s_axi_lite_awaddr : in STD_LOGIC_VECTOR ( 9 downto 0 );
    s_axi_lite_wvalid : in STD_LOGIC;
    s_axi_lite_wready : out STD_LOGIC;
    s_axi_lite_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_lite_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_lite_bvalid : out STD_LOGIC;
    s_axi_lite_bready : in STD_LOGIC;
    s_axi_lite_arvalid : in STD_LOGIC;
    s_axi_lite_arready : out STD_LOGIC;
    s_axi_lite_araddr : in STD_LOGIC_VECTOR ( 9 downto 0 );
    s_axi_lite_rvalid : out STD_LOGIC;
    s_axi_lite_rready : in STD_LOGIC;
    s_axi_lite_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_lite_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_sg_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_awvalid : out STD_LOGIC;
    m_axi_sg_awready : in STD_LOGIC;
    m_axi_sg_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_wlast : out STD_LOGIC;
    m_axi_sg_wvalid : out STD_LOGIC;
    m_axi_sg_wready : in STD_LOGIC;
    m_axi_sg_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_bvalid : in STD_LOGIC;
    m_axi_sg_bready : out STD_LOGIC;
    m_axi_sg_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_sg_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_sg_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_sg_arvalid : out STD_LOGIC;
    m_axi_sg_arready : in STD_LOGIC;
    m_axi_sg_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_sg_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_sg_rlast : in STD_LOGIC;
    m_axi_sg_rvalid : in STD_LOGIC;
    m_axi_sg_rready : out STD_LOGIC;
    m_axi_mm2s_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_mm2s_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_mm2s_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_mm2s_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_mm2s_arvalid : out STD_LOGIC;
    m_axi_mm2s_arready : in STD_LOGIC;
    m_axi_mm2s_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_mm2s_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_mm2s_rlast : in STD_LOGIC;
    m_axi_mm2s_rvalid : in STD_LOGIC;
    m_axi_mm2s_rready : out STD_LOGIC;
    mm2s_prmry_reset_out_n : out STD_LOGIC;
    m_axis_mm2s_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axis_mm2s_tkeep : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axis_mm2s_tvalid : out STD_LOGIC;
    m_axis_mm2s_tready : in STD_LOGIC;
    m_axis_mm2s_tlast : out STD_LOGIC;
    m_axi_s2mm_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_s2mm_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_s2mm_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_s2mm_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_s2mm_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_awvalid : out STD_LOGIC;
    m_axi_s2mm_awready : in STD_LOGIC;
    m_axi_s2mm_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_s2mm_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_s2mm_wlast : out STD_LOGIC;
    m_axi_s2mm_wvalid : out STD_LOGIC;
    m_axi_s2mm_wready : in STD_LOGIC;
    m_axi_s2mm_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_s2mm_bvalid : in STD_LOGIC;
    m_axi_s2mm_bready : out STD_LOGIC;
    s2mm_prmry_reset_out_n : out STD_LOGIC;
    s_axis_s2mm_tdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axis_s2mm_tkeep : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axis_s2mm_tvalid : in STD_LOGIC;
    s_axis_s2mm_tready : out STD_LOGIC;
    s_axis_s2mm_tlast : in STD_LOGIC;
    mm2s_introut : out STD_LOGIC;
    s2mm_introut : out STD_LOGIC;
    axi_dma_tstvec : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of axi_dma_ctrl : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of axi_dma_ctrl : entity is "axi_dma_ctrl,axi_dma,{}";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of axi_dma_ctrl : entity is "yes";
  attribute x_core_info : string;
  attribute x_core_info of axi_dma_ctrl : entity is "axi_dma,Vivado 2017.4";
end axi_dma_ctrl;

architecture STRUCTURE of axi_dma_ctrl is
  signal NLW_U0_m_axis_mm2s_cntrl_tlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_mm2s_cntrl_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_mm2s_cntrl_reset_out_n_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s2mm_sts_reset_out_n_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axis_s2mm_sts_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_mm2s_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_s2mm_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_sg_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_sg_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axis_mm2s_cntrl_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axis_mm2s_cntrl_tkeep_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axis_mm2s_tdest_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_m_axis_mm2s_tid_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_m_axis_mm2s_tuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute C_DLYTMR_RESOLUTION : integer;
  attribute C_DLYTMR_RESOLUTION of U0 : label is 125;
  attribute C_ENABLE_MULTI_CHANNEL : integer;
  attribute C_ENABLE_MULTI_CHANNEL of U0 : label is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynq";
  attribute C_INCLUDE_MM2S : integer;
  attribute C_INCLUDE_MM2S of U0 : label is 1;
  attribute C_INCLUDE_MM2S_DRE : integer;
  attribute C_INCLUDE_MM2S_DRE of U0 : label is 0;
  attribute C_INCLUDE_MM2S_SF : integer;
  attribute C_INCLUDE_MM2S_SF of U0 : label is 1;
  attribute C_INCLUDE_S2MM : integer;
  attribute C_INCLUDE_S2MM of U0 : label is 1;
  attribute C_INCLUDE_S2MM_DRE : integer;
  attribute C_INCLUDE_S2MM_DRE of U0 : label is 0;
  attribute C_INCLUDE_S2MM_SF : integer;
  attribute C_INCLUDE_S2MM_SF of U0 : label is 1;
  attribute C_INCLUDE_SG : integer;
  attribute C_INCLUDE_SG of U0 : label is 1;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "axi_dma";
  attribute C_MICRO_DMA : integer;
  attribute C_MICRO_DMA of U0 : label is 1;
  attribute C_MM2S_BURST_SIZE : integer;
  attribute C_MM2S_BURST_SIZE of U0 : label is 16;
  attribute C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH : integer;
  attribute C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH of U0 : label is 32;
  attribute C_M_AXIS_MM2S_TDATA_WIDTH : integer;
  attribute C_M_AXIS_MM2S_TDATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_MM2S_ADDR_WIDTH : integer;
  attribute C_M_AXI_MM2S_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_MM2S_DATA_WIDTH : integer;
  attribute C_M_AXI_MM2S_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_S2MM_ADDR_WIDTH : integer;
  attribute C_M_AXI_S2MM_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_S2MM_DATA_WIDTH : integer;
  attribute C_M_AXI_S2MM_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_SG_ADDR_WIDTH : integer;
  attribute C_M_AXI_SG_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_SG_DATA_WIDTH : integer;
  attribute C_M_AXI_SG_DATA_WIDTH of U0 : label is 32;
  attribute C_NUM_MM2S_CHANNELS : integer;
  attribute C_NUM_MM2S_CHANNELS of U0 : label is 1;
  attribute C_NUM_S2MM_CHANNELS : integer;
  attribute C_NUM_S2MM_CHANNELS of U0 : label is 1;
  attribute C_PRMRY_IS_ACLK_ASYNC : integer;
  attribute C_PRMRY_IS_ACLK_ASYNC of U0 : label is 0;
  attribute C_S2MM_BURST_SIZE : integer;
  attribute C_S2MM_BURST_SIZE of U0 : label is 16;
  attribute C_SG_INCLUDE_STSCNTRL_STRM : integer;
  attribute C_SG_INCLUDE_STSCNTRL_STRM of U0 : label is 0;
  attribute C_SG_LENGTH_WIDTH : integer;
  attribute C_SG_LENGTH_WIDTH of U0 : label is 14;
  attribute C_SG_USE_STSAPP_LENGTH : integer;
  attribute C_SG_USE_STSAPP_LENGTH of U0 : label is 0;
  attribute C_S_AXIS_S2MM_STS_TDATA_WIDTH : integer;
  attribute C_S_AXIS_S2MM_STS_TDATA_WIDTH of U0 : label is 32;
  attribute C_S_AXIS_S2MM_TDATA_WIDTH : integer;
  attribute C_S_AXIS_S2MM_TDATA_WIDTH of U0 : label is 32;
  attribute C_S_AXI_LITE_ADDR_WIDTH : integer;
  attribute C_S_AXI_LITE_ADDR_WIDTH of U0 : label is 10;
  attribute C_S_AXI_LITE_DATA_WIDTH : integer;
  attribute C_S_AXI_LITE_DATA_WIDTH of U0 : label is 32;
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
  attribute x_interface_info : string;
  attribute x_interface_info of axi_resetn : signal is "xilinx.com:signal:reset:1.0 AXI_RESETN RST";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of axi_resetn : signal is "XIL_INTERFACENAME AXI_RESETN, POLARITY ACTIVE_LOW";
  attribute x_interface_info of m_axi_mm2s_aclk : signal is "xilinx.com:signal:clock:1.0 M_AXI_MM2S_CLK CLK";
  attribute x_interface_parameter of m_axi_mm2s_aclk : signal is "XIL_INTERFACENAME M_AXI_MM2S_CLK, ASSOCIATED_BUSIF M_AXI_MM2S:M_AXIS_MM2S:M_AXIS_CNTRL, ASSOCIATED_RESET mm2s_prmry_reset_out_n:mm2s_cntrl_reset_out_n, FREQ_HZ 100000000, PHASE 0.000";
  attribute x_interface_info of m_axi_mm2s_arready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARREADY";
  attribute x_interface_info of m_axi_mm2s_arvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARVALID";
  attribute x_interface_info of m_axi_mm2s_rlast : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S RLAST";
  attribute x_interface_info of m_axi_mm2s_rready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S RREADY";
  attribute x_interface_info of m_axi_mm2s_rvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S RVALID";
  attribute x_interface_info of m_axi_s2mm_aclk : signal is "xilinx.com:signal:clock:1.0 M_AXI_S2MM_CLK CLK";
  attribute x_interface_parameter of m_axi_s2mm_aclk : signal is "XIL_INTERFACENAME M_AXI_S2MM_CLK, ASSOCIATED_BUSIF M_AXI_S2MM:S_AXIS_S2MM:S_AXIS_STS, ASSOCIATED_RESET s2mm_prmry_reset_out_n:s2mm_sts_reset_out_n, FREQ_HZ 100000000, PHASE 0.000";
  attribute x_interface_info of m_axi_s2mm_awready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWREADY";
  attribute x_interface_info of m_axi_s2mm_awvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWVALID";
  attribute x_interface_info of m_axi_s2mm_bready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM BREADY";
  attribute x_interface_info of m_axi_s2mm_bvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM BVALID";
  attribute x_interface_info of m_axi_s2mm_wlast : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM WLAST";
  attribute x_interface_info of m_axi_s2mm_wready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM WREADY";
  attribute x_interface_info of m_axi_s2mm_wvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM WVALID";
  attribute x_interface_info of m_axi_sg_aclk : signal is "xilinx.com:signal:clock:1.0 M_AXI_SG_CLK CLK";
  attribute x_interface_parameter of m_axi_sg_aclk : signal is "XIL_INTERFACENAME M_AXI_SG_CLK, ASSOCIATED_BUSIF M_AXI_SG, FREQ_HZ 100000000, PHASE 0.000";
  attribute x_interface_info of m_axi_sg_arready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARREADY";
  attribute x_interface_info of m_axi_sg_arvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARVALID";
  attribute x_interface_info of m_axi_sg_awready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWREADY";
  attribute x_interface_info of m_axi_sg_awvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWVALID";
  attribute x_interface_info of m_axi_sg_bready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG BREADY";
  attribute x_interface_info of m_axi_sg_bvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG BVALID";
  attribute x_interface_info of m_axi_sg_rlast : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG RLAST";
  attribute x_interface_info of m_axi_sg_rready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG RREADY";
  attribute x_interface_info of m_axi_sg_rvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG RVALID";
  attribute x_interface_info of m_axi_sg_wlast : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG WLAST";
  attribute x_interface_info of m_axi_sg_wready : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG WREADY";
  attribute x_interface_info of m_axi_sg_wvalid : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG WVALID";
  attribute x_interface_info of m_axis_mm2s_tlast : signal is "xilinx.com:interface:axis:1.0 M_AXIS_MM2S TLAST";
  attribute x_interface_info of m_axis_mm2s_tready : signal is "xilinx.com:interface:axis:1.0 M_AXIS_MM2S TREADY";
  attribute x_interface_info of m_axis_mm2s_tvalid : signal is "xilinx.com:interface:axis:1.0 M_AXIS_MM2S TVALID";
  attribute x_interface_info of mm2s_introut : signal is "xilinx.com:signal:interrupt:1.0 MM2S_INTROUT INTERRUPT";
  attribute x_interface_parameter of mm2s_introut : signal is "XIL_INTERFACENAME MM2S_INTROUT, SENSITIVITY LEVEL_HIGH, PortWidth 1";
  attribute x_interface_info of mm2s_prmry_reset_out_n : signal is "xilinx.com:signal:reset:1.0 MM2S_PRMRY_RESET_OUT_N RST";
  attribute x_interface_parameter of mm2s_prmry_reset_out_n : signal is "XIL_INTERFACENAME MM2S_PRMRY_RESET_OUT_N, POLARITY ACTIVE_LOW";
  attribute x_interface_info of s2mm_introut : signal is "xilinx.com:signal:interrupt:1.0 S2MM_INTROUT INTERRUPT";
  attribute x_interface_parameter of s2mm_introut : signal is "XIL_INTERFACENAME S2MM_INTROUT, SENSITIVITY LEVEL_HIGH, PortWidth 1";
  attribute x_interface_info of s2mm_prmry_reset_out_n : signal is "xilinx.com:signal:reset:1.0 S2MM_PRMRY_RESET_OUT_N RST";
  attribute x_interface_parameter of s2mm_prmry_reset_out_n : signal is "XIL_INTERFACENAME S2MM_PRMRY_RESET_OUT_N, POLARITY ACTIVE_LOW";
  attribute x_interface_info of s_axi_lite_aclk : signal is "xilinx.com:signal:clock:1.0 S_AXI_LITE_ACLK CLK";
  attribute x_interface_parameter of s_axi_lite_aclk : signal is "XIL_INTERFACENAME S_AXI_LITE_ACLK, ASSOCIATED_BUSIF S_AXI_LITE:M_AXI, ASSOCIATED_RESET axi_resetn, FREQ_HZ 100000000, PHASE 0.000";
  attribute x_interface_info of s_axi_lite_arready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE ARREADY";
  attribute x_interface_info of s_axi_lite_arvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE ARVALID";
  attribute x_interface_info of s_axi_lite_awready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE AWREADY";
  attribute x_interface_info of s_axi_lite_awvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE AWVALID";
  attribute x_interface_parameter of s_axi_lite_awvalid : signal is "XIL_INTERFACENAME S_AXI_LITE, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 10, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 0, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  attribute x_interface_info of s_axi_lite_bready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE BREADY";
  attribute x_interface_info of s_axi_lite_bvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE BVALID";
  attribute x_interface_info of s_axi_lite_rready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE RREADY";
  attribute x_interface_info of s_axi_lite_rvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE RVALID";
  attribute x_interface_info of s_axi_lite_wready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE WREADY";
  attribute x_interface_info of s_axi_lite_wvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE WVALID";
  attribute x_interface_info of s_axis_s2mm_tlast : signal is "xilinx.com:interface:axis:1.0 S_AXIS_S2MM TLAST";
  attribute x_interface_info of s_axis_s2mm_tready : signal is "xilinx.com:interface:axis:1.0 S_AXIS_S2MM TREADY";
  attribute x_interface_info of s_axis_s2mm_tvalid : signal is "xilinx.com:interface:axis:1.0 S_AXIS_S2MM TVALID";
  attribute x_interface_info of m_axi_mm2s_araddr : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARADDR";
  attribute x_interface_parameter of m_axi_mm2s_araddr : signal is "XIL_INTERFACENAME M_AXI_MM2S, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_ONLY, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 0, HAS_BRESP 0, HAS_RRESP 1, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  attribute x_interface_info of m_axi_mm2s_arburst : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARBURST";
  attribute x_interface_info of m_axi_mm2s_arcache : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARCACHE";
  attribute x_interface_info of m_axi_mm2s_arlen : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARLEN";
  attribute x_interface_info of m_axi_mm2s_arprot : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARPROT";
  attribute x_interface_info of m_axi_mm2s_arsize : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S ARSIZE";
  attribute x_interface_info of m_axi_mm2s_rdata : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S RDATA";
  attribute x_interface_info of m_axi_mm2s_rresp : signal is "xilinx.com:interface:aximm:1.0 M_AXI_MM2S RRESP";
  attribute x_interface_info of m_axi_s2mm_awaddr : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWADDR";
  attribute x_interface_parameter of m_axi_s2mm_awaddr : signal is "XIL_INTERFACENAME M_AXI_S2MM, SUPPORTS_NARROW_BURST 0, NUM_WRITE_OUTSTANDING 2, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE WRITE_ONLY, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 0, NUM_READ_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  attribute x_interface_info of m_axi_s2mm_awburst : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWBURST";
  attribute x_interface_info of m_axi_s2mm_awcache : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWCACHE";
  attribute x_interface_info of m_axi_s2mm_awlen : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWLEN";
  attribute x_interface_info of m_axi_s2mm_awprot : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWPROT";
  attribute x_interface_info of m_axi_s2mm_awsize : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM AWSIZE";
  attribute x_interface_info of m_axi_s2mm_bresp : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM BRESP";
  attribute x_interface_info of m_axi_s2mm_wdata : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM WDATA";
  attribute x_interface_info of m_axi_s2mm_wstrb : signal is "xilinx.com:interface:aximm:1.0 M_AXI_S2MM WSTRB";
  attribute x_interface_info of m_axi_sg_araddr : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARADDR";
  attribute x_interface_info of m_axi_sg_arburst : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARBURST";
  attribute x_interface_info of m_axi_sg_arcache : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARCACHE";
  attribute x_interface_info of m_axi_sg_arlen : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARLEN";
  attribute x_interface_info of m_axi_sg_arprot : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARPROT";
  attribute x_interface_info of m_axi_sg_arsize : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG ARSIZE";
  attribute x_interface_info of m_axi_sg_awaddr : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWADDR";
  attribute x_interface_parameter of m_axi_sg_awaddr : signal is "XIL_INTERFACENAME M_AXI_SG, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  attribute x_interface_info of m_axi_sg_awburst : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWBURST";
  attribute x_interface_info of m_axi_sg_awcache : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWCACHE";
  attribute x_interface_info of m_axi_sg_awlen : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWLEN";
  attribute x_interface_info of m_axi_sg_awprot : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWPROT";
  attribute x_interface_info of m_axi_sg_awsize : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG AWSIZE";
  attribute x_interface_info of m_axi_sg_bresp : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG BRESP";
  attribute x_interface_info of m_axi_sg_rdata : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG RDATA";
  attribute x_interface_info of m_axi_sg_rresp : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG RRESP";
  attribute x_interface_info of m_axi_sg_wdata : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG WDATA";
  attribute x_interface_info of m_axi_sg_wstrb : signal is "xilinx.com:interface:aximm:1.0 M_AXI_SG WSTRB";
  attribute x_interface_info of m_axis_mm2s_tdata : signal is "xilinx.com:interface:axis:1.0 M_AXIS_MM2S TDATA";
  attribute x_interface_parameter of m_axis_mm2s_tdata : signal is "XIL_INTERFACENAME M_AXIS_MM2S, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef";
  attribute x_interface_info of m_axis_mm2s_tkeep : signal is "xilinx.com:interface:axis:1.0 M_AXIS_MM2S TKEEP";
  attribute x_interface_info of s_axi_lite_araddr : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE ARADDR";
  attribute x_interface_info of s_axi_lite_awaddr : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE AWADDR";
  attribute x_interface_info of s_axi_lite_bresp : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE BRESP";
  attribute x_interface_info of s_axi_lite_rdata : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE RDATA";
  attribute x_interface_info of s_axi_lite_rresp : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE RRESP";
  attribute x_interface_info of s_axi_lite_wdata : signal is "xilinx.com:interface:aximm:1.0 S_AXI_LITE WDATA";
  attribute x_interface_info of s_axis_s2mm_tdata : signal is "xilinx.com:interface:axis:1.0 S_AXIS_S2MM TDATA";
  attribute x_interface_parameter of s_axis_s2mm_tdata : signal is "XIL_INTERFACENAME S_AXIS_S2MM, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef";
  attribute x_interface_info of s_axis_s2mm_tkeep : signal is "xilinx.com:interface:axis:1.0 S_AXIS_S2MM TKEEP";
begin
U0: entity work.axi_dma_ctrl_axi_dma
     port map (
      axi_dma_tstvec(31 downto 0) => axi_dma_tstvec(31 downto 0),
      axi_resetn => axi_resetn,
      m_axi_mm2s_aclk => m_axi_mm2s_aclk,
      m_axi_mm2s_araddr(31 downto 0) => m_axi_mm2s_araddr(31 downto 0),
      m_axi_mm2s_arburst(1 downto 0) => m_axi_mm2s_arburst(1 downto 0),
      m_axi_mm2s_arcache(3 downto 0) => m_axi_mm2s_arcache(3 downto 0),
      m_axi_mm2s_arlen(7 downto 0) => m_axi_mm2s_arlen(7 downto 0),
      m_axi_mm2s_arprot(2 downto 0) => m_axi_mm2s_arprot(2 downto 0),
      m_axi_mm2s_arready => m_axi_mm2s_arready,
      m_axi_mm2s_arsize(2 downto 0) => m_axi_mm2s_arsize(2 downto 0),
      m_axi_mm2s_aruser(3 downto 0) => NLW_U0_m_axi_mm2s_aruser_UNCONNECTED(3 downto 0),
      m_axi_mm2s_arvalid => m_axi_mm2s_arvalid,
      m_axi_mm2s_rdata(31 downto 0) => m_axi_mm2s_rdata(31 downto 0),
      m_axi_mm2s_rlast => m_axi_mm2s_rlast,
      m_axi_mm2s_rready => m_axi_mm2s_rready,
      m_axi_mm2s_rresp(1 downto 0) => m_axi_mm2s_rresp(1 downto 0),
      m_axi_mm2s_rvalid => m_axi_mm2s_rvalid,
      m_axi_s2mm_aclk => m_axi_s2mm_aclk,
      m_axi_s2mm_awaddr(31 downto 0) => m_axi_s2mm_awaddr(31 downto 0),
      m_axi_s2mm_awburst(1 downto 0) => m_axi_s2mm_awburst(1 downto 0),
      m_axi_s2mm_awcache(3 downto 0) => m_axi_s2mm_awcache(3 downto 0),
      m_axi_s2mm_awlen(7 downto 0) => m_axi_s2mm_awlen(7 downto 0),
      m_axi_s2mm_awprot(2 downto 0) => m_axi_s2mm_awprot(2 downto 0),
      m_axi_s2mm_awready => m_axi_s2mm_awready,
      m_axi_s2mm_awsize(2 downto 0) => m_axi_s2mm_awsize(2 downto 0),
      m_axi_s2mm_awuser(3 downto 0) => NLW_U0_m_axi_s2mm_awuser_UNCONNECTED(3 downto 0),
      m_axi_s2mm_awvalid => m_axi_s2mm_awvalid,
      m_axi_s2mm_bready => m_axi_s2mm_bready,
      m_axi_s2mm_bresp(1 downto 0) => m_axi_s2mm_bresp(1 downto 0),
      m_axi_s2mm_bvalid => m_axi_s2mm_bvalid,
      m_axi_s2mm_wdata(31 downto 0) => m_axi_s2mm_wdata(31 downto 0),
      m_axi_s2mm_wlast => m_axi_s2mm_wlast,
      m_axi_s2mm_wready => m_axi_s2mm_wready,
      m_axi_s2mm_wstrb(3 downto 0) => m_axi_s2mm_wstrb(3 downto 0),
      m_axi_s2mm_wvalid => m_axi_s2mm_wvalid,
      m_axi_sg_aclk => m_axi_sg_aclk,
      m_axi_sg_araddr(31 downto 0) => m_axi_sg_araddr(31 downto 0),
      m_axi_sg_arburst(1 downto 0) => m_axi_sg_arburst(1 downto 0),
      m_axi_sg_arcache(3 downto 0) => m_axi_sg_arcache(3 downto 0),
      m_axi_sg_arlen(7 downto 0) => m_axi_sg_arlen(7 downto 0),
      m_axi_sg_arprot(2 downto 0) => m_axi_sg_arprot(2 downto 0),
      m_axi_sg_arready => m_axi_sg_arready,
      m_axi_sg_arsize(2 downto 0) => m_axi_sg_arsize(2 downto 0),
      m_axi_sg_aruser(3 downto 0) => NLW_U0_m_axi_sg_aruser_UNCONNECTED(3 downto 0),
      m_axi_sg_arvalid => m_axi_sg_arvalid,
      m_axi_sg_awaddr(31 downto 0) => m_axi_sg_awaddr(31 downto 0),
      m_axi_sg_awburst(1 downto 0) => m_axi_sg_awburst(1 downto 0),
      m_axi_sg_awcache(3 downto 0) => m_axi_sg_awcache(3 downto 0),
      m_axi_sg_awlen(7 downto 0) => m_axi_sg_awlen(7 downto 0),
      m_axi_sg_awprot(2 downto 0) => m_axi_sg_awprot(2 downto 0),
      m_axi_sg_awready => m_axi_sg_awready,
      m_axi_sg_awsize(2 downto 0) => m_axi_sg_awsize(2 downto 0),
      m_axi_sg_awuser(3 downto 0) => NLW_U0_m_axi_sg_awuser_UNCONNECTED(3 downto 0),
      m_axi_sg_awvalid => m_axi_sg_awvalid,
      m_axi_sg_bready => m_axi_sg_bready,
      m_axi_sg_bresp(1 downto 0) => m_axi_sg_bresp(1 downto 0),
      m_axi_sg_bvalid => m_axi_sg_bvalid,
      m_axi_sg_rdata(31 downto 0) => m_axi_sg_rdata(31 downto 0),
      m_axi_sg_rlast => m_axi_sg_rlast,
      m_axi_sg_rready => m_axi_sg_rready,
      m_axi_sg_rresp(1 downto 0) => m_axi_sg_rresp(1 downto 0),
      m_axi_sg_rvalid => m_axi_sg_rvalid,
      m_axi_sg_wdata(31 downto 0) => m_axi_sg_wdata(31 downto 0),
      m_axi_sg_wlast => m_axi_sg_wlast,
      m_axi_sg_wready => m_axi_sg_wready,
      m_axi_sg_wstrb(3 downto 0) => m_axi_sg_wstrb(3 downto 0),
      m_axi_sg_wvalid => m_axi_sg_wvalid,
      m_axis_mm2s_cntrl_tdata(31 downto 0) => NLW_U0_m_axis_mm2s_cntrl_tdata_UNCONNECTED(31 downto 0),
      m_axis_mm2s_cntrl_tkeep(3 downto 0) => NLW_U0_m_axis_mm2s_cntrl_tkeep_UNCONNECTED(3 downto 0),
      m_axis_mm2s_cntrl_tlast => NLW_U0_m_axis_mm2s_cntrl_tlast_UNCONNECTED,
      m_axis_mm2s_cntrl_tready => '0',
      m_axis_mm2s_cntrl_tvalid => NLW_U0_m_axis_mm2s_cntrl_tvalid_UNCONNECTED,
      m_axis_mm2s_tdata(31 downto 0) => m_axis_mm2s_tdata(31 downto 0),
      m_axis_mm2s_tdest(4 downto 0) => NLW_U0_m_axis_mm2s_tdest_UNCONNECTED(4 downto 0),
      m_axis_mm2s_tid(4 downto 0) => NLW_U0_m_axis_mm2s_tid_UNCONNECTED(4 downto 0),
      m_axis_mm2s_tkeep(3 downto 0) => m_axis_mm2s_tkeep(3 downto 0),
      m_axis_mm2s_tlast => m_axis_mm2s_tlast,
      m_axis_mm2s_tready => m_axis_mm2s_tready,
      m_axis_mm2s_tuser(3 downto 0) => NLW_U0_m_axis_mm2s_tuser_UNCONNECTED(3 downto 0),
      m_axis_mm2s_tvalid => m_axis_mm2s_tvalid,
      mm2s_cntrl_reset_out_n => NLW_U0_mm2s_cntrl_reset_out_n_UNCONNECTED,
      mm2s_introut => mm2s_introut,
      mm2s_prmry_reset_out_n => mm2s_prmry_reset_out_n,
      s2mm_introut => s2mm_introut,
      s2mm_prmry_reset_out_n => s2mm_prmry_reset_out_n,
      s2mm_sts_reset_out_n => NLW_U0_s2mm_sts_reset_out_n_UNCONNECTED,
      s_axi_lite_aclk => s_axi_lite_aclk,
      s_axi_lite_araddr(9 downto 0) => s_axi_lite_araddr(9 downto 0),
      s_axi_lite_arready => s_axi_lite_arready,
      s_axi_lite_arvalid => s_axi_lite_arvalid,
      s_axi_lite_awaddr(9 downto 0) => s_axi_lite_awaddr(9 downto 0),
      s_axi_lite_awready => s_axi_lite_awready,
      s_axi_lite_awvalid => s_axi_lite_awvalid,
      s_axi_lite_bready => s_axi_lite_bready,
      s_axi_lite_bresp(1 downto 0) => s_axi_lite_bresp(1 downto 0),
      s_axi_lite_bvalid => s_axi_lite_bvalid,
      s_axi_lite_rdata(31 downto 0) => s_axi_lite_rdata(31 downto 0),
      s_axi_lite_rready => s_axi_lite_rready,
      s_axi_lite_rresp(1 downto 0) => s_axi_lite_rresp(1 downto 0),
      s_axi_lite_rvalid => s_axi_lite_rvalid,
      s_axi_lite_wdata(31 downto 0) => s_axi_lite_wdata(31 downto 0),
      s_axi_lite_wready => s_axi_lite_wready,
      s_axi_lite_wvalid => s_axi_lite_wvalid,
      s_axis_s2mm_sts_tdata(31 downto 0) => B"00000000000000000000000000000000",
      s_axis_s2mm_sts_tkeep(3 downto 0) => B"1111",
      s_axis_s2mm_sts_tlast => '0',
      s_axis_s2mm_sts_tready => NLW_U0_s_axis_s2mm_sts_tready_UNCONNECTED,
      s_axis_s2mm_sts_tvalid => '0',
      s_axis_s2mm_tdata(31 downto 0) => s_axis_s2mm_tdata(31 downto 0),
      s_axis_s2mm_tdest(4 downto 0) => B"00000",
      s_axis_s2mm_tid(4 downto 0) => B"00000",
      s_axis_s2mm_tkeep(3 downto 0) => s_axis_s2mm_tkeep(3 downto 0),
      s_axis_s2mm_tlast => s_axis_s2mm_tlast,
      s_axis_s2mm_tready => s_axis_s2mm_tready,
      s_axis_s2mm_tuser(3 downto 0) => B"0000",
      s_axis_s2mm_tvalid => s_axis_s2mm_tvalid
    );
end STRUCTURE;
